"use strict";(self.webpackChunkcaelis_terra=self.webpackChunkcaelis_terra||[]).push([[3889],{4460:(a,t,e)=>{e.r(t),e.d(t,{comp:()=>n,data:()=>l});var p=e(6254);const i={},n=(0,e(6995).A)(i,[["render",function(a,t){return(0,p.uX)(),(0,p.CE)("div",null,t[0]||(t[0]=[(0,p.Fv)('<h2 id="学习目标" tabindex="-1"><a class="header-anchor" href="#学习目标"><span>学习目标</span></a></h2><ol><li>掌握基于敏捷开发的测试流程</li><li>掌握app的测试要点，熟悉各种专项测试的关注点</li><li>熟悉GT工具的使用，能使用GT工具进行对应的性能测试</li></ol><h2 id="一、app测试基础理论" tabindex="-1"><a class="header-anchor" href="#一、app测试基础理论"><span>一、app测试基础理论</span></a></h2><h3 id="_1、app的应用架构" tabindex="-1"><a class="header-anchor" href="#_1、app的应用架构"><span>1、app的应用架构</span></a></h3><figure><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031521428.png" alt="CleanShot 2023-12-01 at 10.25.24@2x" tabindex="0" loading="lazy"><figcaption>CleanShot 2023-12-01 at 10.25.24@2x</figcaption></figure><p>app属于CS架构，是通过HTTP协义来传输数据的。 通过json的格式来传送数据的。</p><h3 id="_2、app架构和web架构的区别" tabindex="-1"><a class="header-anchor" href="#_2、app架构和web架构的区别"><span>2、app架构和web架构的区别</span></a></h3><h4 id="相同点" tabindex="-1"><a class="header-anchor" href="#相同点"><span>相同点</span></a></h4><ol><li>APP和web使用的后端服务器是相同的</li><li>前后端都使用HTTP协议进行交互 （也有部分APP用socket来交互）</li></ol><h4 id="不同点" tabindex="-1"><a class="header-anchor" href="#不同点"><span>不同点</span></a></h4><ol><li>APP是C/S结构，web浏览器是B/S结构</li><li>APP前后端交互的数据格式以json为主，web前后端交互的数据格式以HTML为主</li></ol><h3 id="_3、app项目环境及发布平台" tabindex="-1"><a class="header-anchor" href="#_3、app项目环境及发布平台"><span>3、app项目环境及发布平台</span></a></h3><h4 id="_3-1-app项目环境介绍-后端服务器环境" tabindex="-1"><a class="header-anchor" href="#_3-1-app项目环境介绍-后端服务器环境"><span>3.1 app项目环境介绍（后端服务器环境）</span></a></h4><table><thead><tr><th>编号</th><th>环境</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>开发环境</td><td>是给开发人员进行代码联调的。给开发进行自测的。</td></tr><tr><td>2</td><td>测试环境</td><td>用来给测试人员进行测试用的。测试环境也可能分为手工测试环境和自动化测试环境的。</td></tr><tr><td>3</td><td>预发布环境</td><td>当项目要上线时，做最后一轮的验收测试时，预发布环境的数据跟生产环境的数据是一致的。</td></tr><tr><td>4</td><td>镜像环境</td><td>当生产环境出现问题时，把生产环镜的相关数据以及代码全部拉到镜像环境，复现生产上的问题，然后由测试人员协助开发人员复现问题，然后由开发人员去进行问题的定位和分析。</td></tr><tr><td>5</td><td>生产环境</td><td>给用户或者是客户使用的环境 (生产环境测试人员不能随便操作，由运维人员管理的)</td></tr></tbody></table><h4 id="_3-2-灰度发布介绍" tabindex="-1"><a class="header-anchor" href="#_3-2-灰度发布介绍"><span>3.2 灰度发布介绍</span></a></h4><p>所谓灰度发布，就是指在发布生产环境过程前，先发布其中几台服务器，如果这几台服务器功能运行一段时间后能够正常，那么再把其他未升级或者未发布的服务器进行生产环境发布，那如果说先发布的几台服务器运行有问题，那么就需要回滚到原来的版本。</p><h4 id="_3-3app项目发布平台" tabindex="-1"><a class="header-anchor" href="#_3-3app项目发布平台"><span>3.3app项目发布平台</span></a></h4><ul><li><p>android 安卓app文件后缀名是 apk</p></li><li><p>IOS 苹果app文件后缀名是ipa</p></li><li><p>获取app安装包文件的方式一:</p><ul><li>anroid 可以直接找开发给对应apk安装包</li><li>IOS 直接将手机给开发人员，让开发人员安装对应的ipa包</li></ul></li><li><p>获取app安装包文件的方式二:</p><ul><li><p>可以借助内测试平台</p><p>国内用的内测平台是蒲公英， <a href="http://xn--fir-ok6ez9g2x3au4xtnc.im" target="_blank" rel="noopener noreferrer">国外用的是fir.im</a></p></li><li><p>测试包生成之后会上传到蒲公英平台，然后生成一个链接地址（二维码），可以直接通过二维码或者链接地址下载对应的测试包</p></li></ul></li><li><p>生产app安装包的获取</p><p>anroid的app安装包：豌豆荚、应用宝、360手机助手、各类手机品牌商城(上传app安装包需要审核 2-3 )</p><p>ios的app安装包：appstore itools（IOS时间更长，一周左右）</p></li></ul><h3 id="_4、敏捷开发模型" tabindex="-1"><a class="header-anchor" href="#_4、敏捷开发模型"><span>4、敏捷开发模型</span></a></h3><h4 id="_4-1-敏捷开发模型介绍" tabindex="-1"><a class="header-anchor" href="#_4-1-敏捷开发模型介绍"><span>4.1 敏捷开发模型介绍</span></a></h4><h5 id="瀑布模型-传统行业" tabindex="-1"><a class="header-anchor" href="#瀑布模型-传统行业"><span>瀑布模型（传统行业）</span></a></h5><h6 id="流程" tabindex="-1"><a class="header-anchor" href="#流程"><span>流程</span></a></h6><ul><li>需求分析</li><li>设计</li><li>编码</li><li>测试</li><li>运行维护</li></ul><h6 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点</span></a></h6><ol><li>为项目提供了按阶段划分检查点（文档）</li><li>当前一阶段完成后，只需要关注后续阶段。</li></ol><h6 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点"><span>缺点</span></a></h6><ol><li>在项目各介段之间极少有反馈，出现问题没法及时处理，灵活性差；</li><li>只有在项目结束交付上线时才能看到最终的结果；</li><li>需要太多的文档来驱动项目进行。影响项目的效率。</li></ol><h6 id="结论" tabindex="-1"><a class="header-anchor" href="#结论"><span>结论</span></a></h6><p>采用传统的瀑布模型最大的问题是开发的周期长，迭代的速度慢。</p><ul><li>互联网行业特点：追求创新、以快吃慢、需求高度不确定性</li><li>互联网产品开发的特点：新需求、新方向</li><li>降低项目风险，确保正确的方向：快速的反馈机制、快速试错的流程 （针对需求不确定性）</li></ul><h5 id="敏捷开发" tabindex="-1"><a class="header-anchor" href="#敏捷开发"><span>敏捷开发</span></a></h5><p>概念：以用户的需求为核心，采用迭代、循序渐近的方法进行软件开发</p><p>在敏捷开发过程中，软件项目在构建初期会被切分成不同的子系统以及不同的迭代，各个子项目的成果经过测度，具备可视，可集成和可运行的特征。</p><h4 id="_4-2-scrum介绍" tabindex="-1"><a class="header-anchor" href="#_4-2-scrum介绍"><span>4.2 Scrum介绍</span></a></h4><p>Scrum是一个敏捷开发框架，是一个增量的，迭代的开发过程。</p><p>在这个框架中，整个开发周期包括若干个小的迭代周期，每个小的迭代周期成为一个Sprint（sprint：项目开发过程中最小迭代周期），每个Sprint的周期建议为2~4周。</p><p>在Scrum中，将产品Backlog（产品待办列表）按商业价值排出需求列表。在每个迭代中开发团队从产品Backlog挑选最有价值的需求进行开发，实现完成后产品推出市场，进入下一个迭代。</p><p>需要熟悉的三个角色:</p><ul><li>产品负责人：收集产品需求，确定产品上线时间，排产品需求的优先级</li><li>项目经理：带领团实现SCRUM敏捷过程，确保组内成员不被外界干扰，确保组内成员按时完成任务</li><li>开发团队：程序员，测试员，设计（程序员分前端、后端、android开发、ios开发）</li><li>每日例会: 需要知道每天干了什么，明天计划干什么，以及遇到的问题。一般早上开会，15分钟左右。 同时需要知道项目的进度是否正常</li></ul><hr><h3 id="_5、app应用测试流程" tabindex="-1"><a class="header-anchor" href="#_5、app应用测试流程"><span>5、app应用测试流程</span></a></h3><ul><li>参与需求评审 评审前一定要看需求文档</li><li>制定测试计划 一般由测试负责人或测试主管制定</li><li>设计编写测试用例 有一些小公司由人力时间紧张，可以不写用例，需要写测试点。用例评审</li><li>执行用例，跟踪缺陷 搭建环境，冒烟测试（有可能做，也有可能不做）</li><li>编写提交版本测试报告</li></ul>',42)]))}]]),l=JSON.parse('{"path":"/auto/ui/day04.html","title":"app专项测试一","lang":"zh-CN","frontmatter":{"title":"app专项测试一","order":41,"tag":"appTest","description":"学习目标 掌握基于敏捷开发的测试流程 掌握app的测试要点，熟悉各种专项测试的关注点 熟悉GT工具的使用，能使用GT工具进行对应的性能测试 一、app测试基础理论 1、app的应用架构 CleanShot 2023-12-01 at 10.25.24@2xCleanShot 2023-12-01 at 10.25.24@2x app属于CS架构，是通过...","head":[["meta",{"property":"og:url","content":"https://hekun97.github.io/auto/ui/day04.html"}],["meta",{"property":"og:site_name","content":"专业治头秃"}],["meta",{"property":"og:title","content":"app专项测试一"}],["meta",{"property":"og:description","content":"学习目标 掌握基于敏捷开发的测试流程 掌握app的测试要点，熟悉各种专项测试的关注点 熟悉GT工具的使用，能使用GT工具进行对应的性能测试 一、app测试基础理论 1、app的应用架构 CleanShot 2023-12-01 at 10.25.24@2xCleanShot 2023-12-01 at 10.25.24@2x app属于CS架构，是通过..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031521428.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-06T16:27:29.000Z"}],["meta",{"property":"article:tag","content":"appTest"}],["meta",{"property":"article:modified_time","content":"2025-03-06T16:27:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"app专项测试一\\",\\"image\\":[\\"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031521428.png\\"],\\"dateModified\\":\\"2025-03-06T16:27:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"专业治头秃\\",\\"url\\":\\"https://github.com/hekun97\\"}]}"]]},"git":{"createdTime":1741278449000,"updatedTime":1741278449000,"contributors":[{"name":"hekun97","username":"hekun97","email":"hek97@qq.com","commits":1,"url":"https://github.com/hekun97"}]},"readingTime":{"minutes":5.41,"words":1622},"filePathRelative":"auto/ui/day04.md","localizedDate":"2025年3月6日","excerpt":"<h2>学习目标</h2>\\n<ol>\\n<li>掌握基于敏捷开发的测试流程</li>\\n<li>掌握app的测试要点，熟悉各种专项测试的关注点</li>\\n<li>熟悉GT工具的使用，能使用GT工具进行对应的性能测试</li>\\n</ol>\\n<h2>一、app测试基础理论</h2>\\n<h3>1、app的应用架构</h3>\\n<figure><img src=\\"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031521428.png\\" alt=\\"CleanShot 2023-12-01 at 10.25.24@2x\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>CleanShot 2023-12-01 at 10.25.24@2x</figcaption></figure>","autoDesc":true}')},6995:(a,t)=>{t.A=(a,t)=>{const e=a.__vccOpts||a;for(const[a,p]of t)e[a]=p;return e}}}]);