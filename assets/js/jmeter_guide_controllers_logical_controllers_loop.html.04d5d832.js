"use strict";(self.webpackChunkcaelis_terra=self.webpackChunkcaelis_terra||[]).push([[9057],{6995:(e,t)=>{t.A=(e,t)=>{const r=e.__vccOpts||e;for(const[e,a]of t)r[e]=a;return r}},9820:(e,t,r)=>{r.r(t),r.d(t,{comp:()=>n,data:()=>i});var a=r(6254);const o={},n=(0,r(6995).A)(o,[["render",function(e,t){return(0,a.uX)(),(0,a.CE)("div",null,t[0]||(t[0]=[(0,a.Fv)('<h1 id="详解循环控制器" tabindex="-1"><a class="header-anchor" href="#详解循环控制器"><span>详解循环控制器</span></a></h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>这应该是最简单的控制器了，我们快速过一遍</p><figure><img src="/assets/jmeter/image-20250329005023185.png" alt="循环控制器" tabindex="0" loading="lazy"><figcaption>循环控制器</figcaption></figure><h2 id="线程组结构树" tabindex="-1"><a class="header-anchor" href="#线程组结构树"><span>线程组结构树</span></a></h2><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200627163538298-29981636.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200627163538298-29981636.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h2 id="线程属性" tabindex="-1"><a class="header-anchor" href="#线程属性"><span>线程属性</span></a></h2><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200627163543598-1603320513.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200627163543598-1603320513.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h2 id="循环控制器-loop-controller" tabindex="-1"><a class="header-anchor" href="#循环控制器-loop-controller"><span>循环控制器（Loop Controller）</span></a></h2><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200627163546691-1490760811.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200627163546691-1490760811.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><ul><li>就一个需要了解的字段：<strong>循环次数</strong>，可以填具体的次数，也可以勾选永远</li><li>如果勾了永远，即使线程组的循环次数设置了次数，也会一直循环</li><li>这里填了 5 次，线程数 = 5，所以总共发出去的请求为 5 * 5 = 25</li></ul><h2 id="运行结果" tabindex="-1"><a class="header-anchor" href="#运行结果"><span>运行结果</span></a></h2><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200627163549798-1050376007.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200627163549798-1050376007.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h2 id="实际应用场景" tabindex="-1"><a class="header-anchor" href="#实际应用场景"><span>实际应用场景</span></a></h2><p>一般会结合计数器使用，详细可参考这篇文章：<a href="https://www.cnblogs.com/poloyy/p/13193447.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/poloyy/p/13193447.html</a></p>',15)]))}]]),i=JSON.parse('{"path":"/jmeter/guide/controllers/logical_controllers/loop.html","title":"详解循环控制器","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","category":["JMeter"],"tag":["Controller","Loop"],"order":4,"sticky":true,"description":"详解循环控制器 前言 这应该是最简单的控制器了，我们快速过一遍 循环控制器循环控制器 线程组结构树 imgimg 线程属性 imgimg 循环控制器（Loop Controller） imgimg 就一个需要了解的字段：循环次数，可以填具体的次数，也可以勾选永远 如果勾了永远，即使线程组的循环次数设置了次数，也会一直循环 这里填了 5 次，线程数 = ...","head":[["meta",{"property":"og:url","content":"https://hekun97.github.io/jmeter/guide/controllers/logical_controllers/loop.html"}],["meta",{"property":"og:site_name","content":"专业治头秃"}],["meta",{"property":"og:title","content":"详解循环控制器"}],["meta",{"property":"og:description","content":"详解循环控制器 前言 这应该是最简单的控制器了，我们快速过一遍 循环控制器循环控制器 线程组结构树 imgimg 线程属性 imgimg 循环控制器（Loop Controller） imgimg 就一个需要了解的字段：循环次数，可以填具体的次数，也可以勾选永远 如果勾了永远，即使线程组的循环次数设置了次数，也会一直循环 这里填了 5 次，线程数 = ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hekun97.github.io/assets/jmeter/image-20250329005023185.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-28T17:43:32.000Z"}],["meta",{"property":"article:tag","content":"Controller"}],["meta",{"property":"article:tag","content":"Loop"}],["meta",{"property":"article:modified_time","content":"2025-03-28T17:43:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"详解循环控制器\\",\\"image\\":[\\"https://hekun97.github.io/assets/jmeter/image-20250329005023185.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200627163538298-29981636.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200627163543598-1603320513.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200627163546691-1490760811.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200627163549798-1050376007.png\\"],\\"dateModified\\":\\"2025-03-28T17:43:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"专业治头秃\\",\\"url\\":\\"https://github.com/hekun97\\"}]}"]]},"git":{"createdTime":1743183812000,"updatedTime":1743183812000,"contributors":[{"name":"hekun97","username":"hekun97","email":"hek97@qq.com","commits":1,"url":"https://github.com/hekun97"}]},"readingTime":{"minutes":0.69,"words":208},"filePathRelative":"jmeter/guide/controllers/logical_controllers/loop.md","localizedDate":"2025年3月28日","excerpt":"\\n<h2>前言</h2>\\n<p>这应该是最简单的控制器了，我们快速过一遍</p>\\n<figure><img src=\\"/assets/jmeter/image-20250329005023185.png\\" alt=\\"循环控制器\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>循环控制器</figcaption></figure>\\n<h2>线程组结构树</h2>\\n<figure><a href=\\"https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200627163538298-29981636.png\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"/assets/jmeter/1896874-20200627163538298-29981636.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"></a><figcaption>img</figcaption></figure>","autoDesc":true}')}}]);