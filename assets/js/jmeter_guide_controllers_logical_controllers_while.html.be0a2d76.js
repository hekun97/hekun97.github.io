"use strict";(self.webpackChunkcaelis_terra=self.webpackChunkcaelis_terra||[]).push([[6262],{1746:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>n,data:()=>o});var i=a(6254);const r={},n=(0,a(6995).A)(r,[["render",function(e,t){return(0,i.uX)(),(0,i.CE)("div",null,t[0]||(t[0]=[(0,i.Fv)('<h1 id="详解-while-控制器" tabindex="-1"><a class="header-anchor" href="#详解-while-控制器"><span>详解 while 控制器</span></a></h1><h2 id="简单介绍" tabindex="-1"><a class="header-anchor" href="#简单介绍"><span>简单介绍</span></a></h2><p>和 java 里面的 while 循环一样，将一直运行其所有子项，直到条件为 false 为止</p><h2 id="while-控制器" tabindex="-1"><a class="header-anchor" href="#while-控制器"><span>while 控制器</span></a></h2><figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200824132108346-1144300682.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200824132108346-1144300682.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h2 id="while-控制器界面介绍" tabindex="-1"><a class="header-anchor" href="#while-控制器界面介绍"><span>while 控制器界面介绍</span></a></h2><figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200824132112574-1164467732.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200824132112574-1164467732.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h4 id="condition-可以填入的值" tabindex="-1"><a class="header-anchor" href="#condition-可以填入的值"><span>condition 可以填入的值</span></a></h4><ul><li>**空白：**节点下最后一个 sampler 失败，退出循环</li><li>**LAST：**节点下最后一个sampler失败，退出循环，如果这个失败的 sampler 在循环前就运行失败了，那么【While Controller】将不会执行</li><li>**其它：**当条件等于 false 时退出（或不进入）循环</li></ul><h4 id="其它参考的值" tabindex="-1"><a class="header-anchor" href="#其它参考的值"><span>其它参考的值</span></a></h4><ul><li>${VAR} ：变量VAR在其它项中被赋值为 <strong>false</strong></li><li>${__javaScript(${C}==10)} ：针对<strong>数字型变量</strong>进行对比判断</li><li>${__javaScript(&quot;${C}&quot;==&quot;abc&quot;)} ：针对<strong>字符串类型变量</strong>进行对比判断，区别在于双引号</li><li>${_P(property)} ：属性被赋予 <strong>false</strong></li></ul><p>暂时不举栗子 感觉没啥实际应用的场景</p>',12)]))}]]),o=JSON.parse('{"path":"/jmeter/guide/controllers/logical_controllers/while.html","title":"详解 while 控制器","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","category":["JMeter"],"tag":["Controller","while"],"order":5,"sticky":true,"description":"详解 while 控制器 简单介绍 和 java 里面的 while 循环一样，将一直运行其所有子项，直到条件为 false 为止 while 控制器 imgimg while 控制器界面介绍 imgimg condition 可以填入的值 **空白：**节点下最后一个 sampler 失败，退出循环 **LAST：**节点下最后一个sampler失败...","head":[["meta",{"property":"og:url","content":"https://hekun97.github.io/jmeter/guide/controllers/logical_controllers/while.html"}],["meta",{"property":"og:site_name","content":"专业治头秃"}],["meta",{"property":"og:title","content":"详解 while 控制器"}],["meta",{"property":"og:description","content":"详解 while 控制器 简单介绍 和 java 里面的 while 循环一样，将一直运行其所有子项，直到条件为 false 为止 while 控制器 imgimg while 控制器界面介绍 imgimg condition 可以填入的值 **空白：**节点下最后一个 sampler 失败，退出循环 **LAST：**节点下最后一个sampler失败..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hekun97.github.io/assets/jmeter/1896874-20200824132108346-1144300682.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-28T17:43:32.000Z"}],["meta",{"property":"article:tag","content":"Controller"}],["meta",{"property":"article:tag","content":"while"}],["meta",{"property":"article:modified_time","content":"2025-03-28T17:43:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"详解 while 控制器\\",\\"image\\":[\\"https://hekun97.github.io/assets/jmeter/1896874-20200824132108346-1144300682.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200824132112574-1164467732.png\\"],\\"dateModified\\":\\"2025-03-28T17:43:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"专业治头秃\\",\\"url\\":\\"https://github.com/hekun97\\"}]}"]]},"git":{"createdTime":1743183812000,"updatedTime":1743183812000,"contributors":[{"name":"hekun97","username":"hekun97","email":"hek97@qq.com","commits":1,"url":"https://github.com/hekun97"}]},"readingTime":{"minutes":0.82,"words":247},"filePathRelative":"jmeter/guide/controllers/logical_controllers/while.md","localizedDate":"2025年3月28日","excerpt":"\\n<h2>简单介绍</h2>\\n<p>和 java 里面的 while 循环一样，将一直运行其所有子项，直到条件为 false 为止</p>\\n<h2>while 控制器</h2>\\n<figure><a href=\\"https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200824132108346-1144300682.png\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"/assets/jmeter/1896874-20200824132108346-1144300682.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"></a><figcaption>img</figcaption></figure>","autoDesc":true}')},6995:(e,t)=>{t.A=(e,t)=>{const a=e.__vccOpts||e;for(const[e,i]of t)a[e]=i;return a}}}]);