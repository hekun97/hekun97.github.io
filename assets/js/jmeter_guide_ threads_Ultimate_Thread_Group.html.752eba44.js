"use strict";(self.webpackChunkcaelis_terra=self.webpackChunkcaelis_terra||[]).push([[4865],{5858:(e,t,i)=>{i.r(t),i.d(t,{comp:()=>n,data:()=>s});var a=i(6254);const r={},n=(0,i(6995).A)(r,[["render",function(e,t){return(0,a.uX)(),(0,a.CE)("div",null,t[0]||(t[0]=[(0,a.Fv)('<h1 id="ultimate-thread-group" tabindex="-1"><a class="header-anchor" href="#ultimate-thread-group"><span>Ultimate Thread Group</span></a></h1><p>“Ultimate”意味着将不会有进一步的线程组插件的需要。每个人都可以在JMeter用:</p><ul><li>无限数量的线程场景</li><li>每个线程场景的ramp-up time, shutdown time, flight time</li><li>当然，还有值得信赖的负载预览图</li></ul><h2 id="一、添加方式" tabindex="-1"><a class="header-anchor" href="#一、添加方式"><span>一、添加方式</span></a></h2><p>右键测试计划-&gt;添加-&gt;Threads(Users)-&gt;jp@gc - Ultimate Thread Group</p><figure><img src="/assets/jmeter/2565457-20230820160724366-1550111674.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="二、页面说明" tabindex="-1"><a class="header-anchor" href="#二、页面说明"><span>二、页面说明</span></a></h2><figure><img src="/assets/jmeter/2565457-20230820160909500-963096260.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><ul><li>Start Threads Count：当前行的线程总数</li><li>Initial Delay/sec：延时启动当前行的线程，单位:秒</li><li>Startup Time/sec：启动当前行所有线程达峰值所需时间，单位:秒</li><li>Hold Load For/sec：当前行线程达到峰值后的稳定加载时间，单位:秒</li><li>Shutdown Time：停止当前行所有线程所需时间，单位:秒</li></ul><p>Ultimate Thread Group线程组灵活度还是相当高的，功能上，相当于把多个不同基础线程组进行组合。</p><hr><p>在<a href="https://www.cnblogs.com/jiushao-ing/p/17643095.html" target="_blank" rel="noopener noreferrer">jmeter详解-线程组详解（3）-再看Ramp-Up(seconds)</a>对线程组Ultimate Thread Group讲过一部分，这里按测试场景进行一下小结：</p><p>Ultimate Thread Group可以用于以下几个场景的测试：</p><ol><li><strong>创建线性负载</strong></li><li><strong>创建阶梯负载</strong></li><li><strong>创建尖峰负载</strong></li><li><strong>创建波浪形负载</strong></li></ol><h2 id="三、使用场景" tabindex="-1"><a class="header-anchor" href="#三、使用场景"><span>三、使用场景</span></a></h2><h3 id="_1-创建线性负载" tabindex="-1"><a class="header-anchor" href="#_1-创建线性负载"><span>（1）创建线性负载</span></a></h3><p>测试场景：60s内启动100个线程，持续运行60s，花10s的时间结束</p><p>脚本配置如下：</p><figure><img src="/assets/jmeter/2565457-20230820161651539-1641025478.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>添加监听器jp@gc - Active Threads Over Time，运行后查看线程运行情况</p><figure><img src="/assets/jmeter/2565457-20230820162111158-645431283.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_2-创建阶梯负载" tabindex="-1"><a class="header-anchor" href="#_2-创建阶梯负载"><span><strong>（2）创建阶梯负载</strong></span></a></h3><p>测试场景：</p><p>测试100个用户，我们将逐步地将它们提升。我们将从25个用户开始在一定时间内保持一个负载，查看服务器如何处理它。之后我们会再加25个到50个再加25个到75个，最后加25个到100个用户。这种方法效果好得多，也更可靠。</p><figure><img src="/assets/jmeter/2565457-20230820162350457-1690730289.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>通过以上配置，观察日志和监听器，就可以知道系统在哪个负载下面平稳运行，能承担多大的负载</p><p>添加监听器jp@gc - Active Threads Over Time，运行后查看线程运行情况</p><figure><img src="/assets/jmeter/2565457-20230820163535163-1110978385.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_3-创建尖峰负载" tabindex="-1"><a class="header-anchor" href="#_3-创建尖峰负载"><span>（3） <strong>创建尖峰负载</strong></span></a></h3><figure><img src="/assets/jmeter/2565457-20230820163844457-369533213.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="_4-创建波浪形负载" tabindex="-1"><a class="header-anchor" href="#_4-创建波浪形负载"><span>（4）<strong>创建波浪形负载</strong></span></a></h3><p>比如12306抢票的时候，每次开放抢票时，有大量用户涌入，等到下次开放时，又有大量用户涌入，这个时候，就像波浪一样，不断敲击服务器，考验服务器的性能</p><figure><img src="/assets/jmeter/2565457-20230820164124197-2097501981.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>锯齿形</p><figure><img src="/assets/jmeter/2565457-20230820164625107-802839073.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>',35)]))}]]),s=JSON.parse('{"path":"/jmeter/guide/%20threads/Ultimate_Thread_Group.html","title":"Ultimate Thread Group","lang":"zh-CN","frontmatter":{"description":"Ultimate Thread Group “Ultimate”意味着将不会有进一步的线程组插件的需要。每个人都可以在JMeter用: 无限数量的线程场景 每个线程场景的ramp-up time, shutdown time, flight time 当然，还有值得信赖的负载预览图 一、添加方式 右键测试计划->添加->Threads(Users)->...","head":[["meta",{"property":"og:url","content":"https://hekun97.github.io/jmeter/guide/%20threads/Ultimate_Thread_Group.html"}],["meta",{"property":"og:site_name","content":"专业治头秃"}],["meta",{"property":"og:title","content":"Ultimate Thread Group"}],["meta",{"property":"og:description","content":"Ultimate Thread Group “Ultimate”意味着将不会有进一步的线程组插件的需要。每个人都可以在JMeter用: 无限数量的线程场景 每个线程场景的ramp-up time, shutdown time, flight time 当然，还有值得信赖的负载预览图 一、添加方式 右键测试计划->添加->Threads(Users)->..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hekun97.github.io/assets/jmeter/2565457-20230820160724366-1550111674.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-22T09:44:35.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-22T09:44:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Ultimate Thread Group\\",\\"image\\":[\\"https://hekun97.github.io/assets/jmeter/2565457-20230820160724366-1550111674.png\\",\\"https://hekun97.github.io/assets/jmeter/2565457-20230820160909500-963096260.png\\",\\"https://hekun97.github.io/assets/jmeter/2565457-20230820161651539-1641025478.png\\",\\"https://hekun97.github.io/assets/jmeter/2565457-20230820162111158-645431283.png\\",\\"https://hekun97.github.io/assets/jmeter/2565457-20230820162350457-1690730289.png\\",\\"https://hekun97.github.io/assets/jmeter/2565457-20230820163535163-1110978385.png\\",\\"https://hekun97.github.io/assets/jmeter/2565457-20230820163844457-369533213.png\\",\\"https://hekun97.github.io/assets/jmeter/2565457-20230820164124197-2097501981.png\\",\\"https://hekun97.github.io/assets/jmeter/2565457-20230820164625107-802839073.png\\"],\\"dateModified\\":\\"2025-03-22T09:44:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"专业治头秃\\",\\"url\\":\\"https://github.com/hekun97\\"}]}"]]},"git":{"createdTime":1742636675000,"updatedTime":1742636675000,"contributors":[{"name":"hekun97","username":"hekun97","email":"hek97@qq.com","commits":1,"url":"https://github.com/hekun97"}]},"readingTime":{"minutes":2.15,"words":646},"filePathRelative":"jmeter/guide/ threads/Ultimate_Thread_Group.md","localizedDate":"2025年3月22日","excerpt":"\\n<p>“Ultimate”意味着将不会有进一步的线程组插件的需要。每个人都可以在JMeter用:</p>\\n<ul>\\n<li>无限数量的线程场景</li>\\n<li>每个线程场景的ramp-up time, shutdown time, flight time</li>\\n<li>当然，还有值得信赖的负载预览图</li>\\n</ul>\\n<h2>一、添加方式</h2>\\n<p>右键测试计划-&gt;添加-&gt;Threads(Users)-&gt;jp@gc - Ultimate Thread Group</p>\\n<figure><img src=\\"/assets/jmeter/2565457-20230820160724366-1550111674.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>img</figcaption></figure>","autoDesc":true}')},6995:(e,t)=>{t.A=(e,t)=>{const i=e.__vccOpts||e;for(const[e,a]of t)i[e]=a;return i}}}]);