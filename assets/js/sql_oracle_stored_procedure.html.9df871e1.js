"use strict";(self.webpackChunkcaelis_terra=self.webpackChunkcaelis_terra||[]).push([[7371],{6906:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>e,data:()=>h});var n=a(6254);const l={},e=(0,a(6995).A)(l,[["render",function(i,s){return(0,n.uX)(),(0,n.CE)("div",null,s[0]||(s[0]=[(0,n.Fv)('<h1 id="oracle-的存储过程" tabindex="-1"><a class="header-anchor" href="#oracle-的存储过程"><span>Oracle 的存储过程</span></a></h1><p>Oracle 的存储过程（Stored Procedure）是数据库中预先编译并存储的一组 SQL 和 PL/SQL 语句，用于完成特定任务。</p><p>它类似于其他编程语言中的函数，但可以包含复杂的业务逻辑，并支持输入输出参数。</p><hr><h3 id="_1-存储过程的核心特点" tabindex="-1"><a class="header-anchor" href="#_1-存储过程的核心特点"><span><strong>1. 存储过程的核心特点</strong></span></a></h3><ul><li><strong>预编译</strong>：存储过程在创建时会被编译并存储在数据库中，后续调用时无需重新解析，执行效率高。</li><li><strong>模块化</strong>：可将复杂逻辑封装成独立模块，提高代码重用性和可维护性。</li><li><strong>安全性</strong>：通过权限控制，可限制用户直接操作表，而是通过存储过程间接访问。</li><li><strong>事务控制</strong>：可以在过程中使用 <code>COMMIT</code> 或 <code>ROLLBACK</code> 管理事务。</li><li><strong>支持参数</strong>：支持输入（<code>IN</code>）、输出（<code>OUT</code>）、输入输出（<code>IN OUT</code>）参数。</li></ul><hr><h3 id="_2-存储过程的语法" tabindex="-1"><a class="header-anchor" href="#_2-存储过程的语法"><span><strong>2. 存储过程的语法</strong></span></a></h3><h4 id="基本结构" tabindex="-1"><a class="header-anchor" href="#基本结构"><span><strong>基本结构</strong></span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> [OR REPLACE]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> PROCEDURE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> procedure_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    (parameter1 </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[IN | OUT | IN OUT]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> data_type, ...)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">IS</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 声明变量（可选）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">BEGIN</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 业务逻辑（PL/SQL 代码）</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EXCEPTION</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 异常处理（可选）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">END</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> procedure_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关键部分" tabindex="-1"><a class="header-anchor" href="#关键部分"><span><strong>关键部分</strong></span></a></h4><ul><li><strong><code>CREATE OR REPLACE</code></strong>：创建或替换已有存储过程。</li><li><strong>参数模式</strong>： <ul><li><code>IN</code>：输入参数（默认，只读）。</li><li><code>OUT</code>：输出参数（可返回结果）。</li><li><code>IN OUT</code>：输入输出参数（可读可写）。</li></ul></li><li><strong><code>IS</code> 或 <code>AS</code></strong>：声明变量和游标。</li><li><strong><code>BEGIN ... END</code></strong>：主体逻辑代码块。</li><li><strong>异常处理</strong>：可捕获和处理运行时错误（如 <code>NO_DATA_FOUND</code>）。</li></ul><hr><h3 id="_3-变量的声明与使用" tabindex="-1"><a class="header-anchor" href="#_3-变量的声明与使用"><span><strong>3. 变量的声明与使用</strong></span></a></h3><p>在 <code>IS</code> 或 <code>AS</code> 部分声明变量：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 逻辑步骤：</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 1.声明变量 v_name 和 v_count。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 2.从 employees 表中查询 id=100 的 name 字段，将结果存入 v_name。</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 3.输出拼接后的字符串（例如 Name: John）。</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> OR</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> REPLACE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> PROCEDURE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> demo_procedure </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">IS</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    v_name </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VARCHAR2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 声明变量</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    v_count </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NUMBER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 声明并初始化</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">BEGIN</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    SELECT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> v_name </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> employees </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 从 employees 表查询 name 到 v_name</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    DBMS_OUTPUT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">PUT_LINE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Name: &#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> || v_name);   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 输出结果，类似于print（）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">END</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_4-流程控制" tabindex="-1"><a class="header-anchor" href="#_4-流程控制"><span><strong>4. 流程控制</strong></span></a></h3><p>存储过程支持 PL/SQL 的流程控制语句：</p><h4 id="条件判断" tabindex="-1"><a class="header-anchor" href="#条件判断"><span><strong>条件判断</strong></span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">IF</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> condition </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">THEN</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 逻辑1</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ELSIF condition2 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">THEN</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 逻辑2</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ELSE</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 默认逻辑</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">END</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> IF</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="循环" tabindex="-1"><a class="header-anchor" href="#循环"><span><strong>循环</strong></span></a></h4><ul><li><strong>简单循环</strong>：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">LOOP</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 代码</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    EXIT </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHEN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> condition;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">END</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> LOOP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>FOR 循环</strong>：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">IN</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> LOOP</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 代码</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">END</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> LOOP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>WHILE 循环</strong>：<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHILE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> condition </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">LOOP</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 代码</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">END</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> LOOP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h3 id="_5-异常处理" tabindex="-1"><a class="header-anchor" href="#_5-异常处理"><span><strong>5. 异常处理</strong></span></a></h3><p>使用 <code>EXCEPTION</code> 块捕获和处理错误：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> OR</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> REPLACE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> PROCEDURE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> safe_procedure </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">IS</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    v_salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NUMBER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">BEGIN</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> v_salary </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> employees </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 999</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 假设此ID不存在</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EXCEPTION</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    WHEN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> NO_DATA_FOUND </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">THEN</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">        DBMS_OUTPUT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">PUT_LINE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Error: 数据不存在！&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    WHEN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> OTHERS </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">THEN</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">        DBMS_OUTPUT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">PUT_LINE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;未知错误: &#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> || SQLERRM);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">END</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>后续补充常见的异常</p></blockquote><hr><h3 id="_6-执行存储过程" tabindex="-1"><a class="header-anchor" href="#_6-执行存储过程"><span><strong>6. 执行存储过程</strong></span></a></h3><h4 id="直接调用" tabindex="-1"><a class="header-anchor" href="#直接调用"><span><strong>直接调用</strong></span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 在 SQL*Plus 或 PL/SQL 块中</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">BEGIN</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    procedure_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(parameters);</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">END</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="通过应用程序调用" tabindex="-1"><a class="header-anchor" href="#通过应用程序调用"><span><strong>通过应用程序调用</strong></span></a></h4><p>例如在 Java 中使用 JDBC：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">CallableStatement</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> cs </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> conn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">prepareCall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{call procedure_name(?, ?)}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">cs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setInt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 设置输入参数</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">cs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">registerOutParameter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Types</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">VARCHAR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 注册输出参数</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">cs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">execute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> cs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="_7-示例" tabindex="-1"><a class="header-anchor" href="#_7-示例"><span><strong>7. 示例</strong></span></a></h3><h4 id="存储过程" tabindex="-1"><a class="header-anchor" href="#存储过程"><span>存储过程</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 创建或替换名为 get_employee_name 的存储过程</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> OR</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> REPLACE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> PROCEDURE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> get_employee_name (</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    p_emp_id   </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">IN</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  NUMBER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,      </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 输入参数：员工ID（必填）</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    p_emp_name </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">OUT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> VARCHAR2</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     -- 输出参数：员工姓名（通过此参数返回结果）</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">IS</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 此处可声明局部变量（本例中未使用）</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">BEGIN</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 核心逻辑：查询员工姓名并赋值给输出参数</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    SELECT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> p_emp_name </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> employees </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> p_emp_id;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 将 employees 表中 id=p_emp_id 的 name 字段值存入 p_emp_name</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EXCEPTION</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    WHEN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> NO_DATA_FOUND </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">THEN</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        p_emp_name :</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;员工不存在&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 处理无数据情况</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    WHEN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> TOO_MANY_ROWS </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">THEN</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        RAISE_APPLICATION_ERROR(-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;找到多条记录&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 主动抛出错误</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">END</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="调用方式" tabindex="-1"><a class="header-anchor" href="#调用方式"><span><strong>调用方式</strong></span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">DECLARE</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    v_name </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VARCHAR2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 定义变量接收输出参数</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">BEGIN</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 调用存储过程：传入ID=100，返回结果到v_name</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    get_employee_name(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, v_name);  </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 打印结果（需提前启用DBMS_OUTPUT）</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    DBMS_OUTPUT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">PUT_LINE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Name: &#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> || v_name); </span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">END</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ul><li><code>v_name</code> 必须与输出参数类型匹配（<code>VARCHAR2(50)</code> ≤ <code>p_emp_name</code>的长度）。</li><li>若要在SQL工具（如SQL*Plus）中显示输出，需先执行 <code>SET SERVEROUTPUT ON</code>。</li><li>调用方式是匿名PL/SQL块，适用于测试或脚本中。</li></ul></blockquote><hr><h3 id="_8-存储过程的优点与缺点" tabindex="-1"><a class="header-anchor" href="#_8-存储过程的优点与缺点"><span><strong>8. 存储过程的优点与缺点</strong></span></a></h3><h4 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span><strong>优点</strong></span></a></h4><ul><li>减少网络流量（客户端只需传递参数，无需发送多条 SQL）。</li><li>提高性能（预编译、减少解析时间）。</li><li>代码重用和维护方便。</li></ul><h4 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点"><span><strong>缺点</strong></span></a></h4><ul><li>调试复杂（需要依赖 PL/SQL 调试工具）。</li><li>数据库依赖性强，迁移到其他数据库可能需要修改逻辑。</li></ul><hr><h3 id="_9-注意事项" tabindex="-1"><a class="header-anchor" href="#_9-注意事项"><span><strong>9. 注意事项</strong></span></a></h3><ul><li>权限：用户需要 <code>CREATE PROCEDURE</code> 权限。</li><li>依赖关系：如果存储过程依赖的表或视图被修改，可能需要重新编译。</li><li>命名规范：建议使用有意义的名称（如 <code>proc_</code> 前缀）。</li></ul><hr><h3 id="_10-总结" tabindex="-1"><a class="header-anchor" href="#_10-总结"><span><strong>10. 总结</strong></span></a></h3><p>Oracle 存储过程是处理复杂业务逻辑、提高数据库性能的重要工具，适合以下场景：</p><ul><li>高频执行的复杂操作（如批量数据处理）。</li><li>需要事务控制的任务（如银行转账）。</li><li>需要封装敏感数据操作（通过权限隔离）。</li></ul><p>如果需要更动态的逻辑，可以考虑使用函数或程序包（Package）。</p>',56)]))}]]),h=JSON.parse('{"path":"/sql/oracle/stored_procedure.html","title":"Oracle 的存储过程","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","category":["Oracle"],"tag":["SQL","Stored Procedure"],"order":66,"sticky":true,"description":"Oracle 的存储过程 Oracle 的存储过程（Stored Procedure）是数据库中预先编译并存储的一组 SQL 和 PL/SQL 语句，用于完成特定任务。 它类似于其他编程语言中的函数，但可以包含复杂的业务逻辑，并支持输入输出参数。 1. 存储过程的核心特点 预编译：存储过程在创建时会被编译并存储在数据库中，后续调用时无需重新解析，执行效...","head":[["meta",{"property":"og:url","content":"https://hekun97.github.io/sql/oracle/stored_procedure.html"}],["meta",{"property":"og:site_name","content":"专业治头秃"}],["meta",{"property":"og:title","content":"Oracle 的存储过程"}],["meta",{"property":"og:description","content":"Oracle 的存储过程 Oracle 的存储过程（Stored Procedure）是数据库中预先编译并存储的一组 SQL 和 PL/SQL 语句，用于完成特定任务。 它类似于其他编程语言中的函数，但可以包含复杂的业务逻辑，并支持输入输出参数。 1. 存储过程的核心特点 预编译：存储过程在创建时会被编译并存储在数据库中，后续调用时无需重新解析，执行效..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-13T03:41:41.000Z"}],["meta",{"property":"article:tag","content":"SQL"}],["meta",{"property":"article:tag","content":"Stored Procedure"}],["meta",{"property":"article:modified_time","content":"2025-04-13T03:41:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Oracle 的存储过程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-13T03:41:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"专业治头秃\\",\\"url\\":\\"https://github.com/hekun97\\"}]}"]]},"git":{"createdTime":1744515701000,"updatedTime":1744515701000,"contributors":[{"name":"hekun97","username":"hekun97","email":"hek97@qq.com","commits":1,"url":"https://github.com/hekun97"}]},"readingTime":{"minutes":4.13,"words":1239},"filePathRelative":"sql/oracle/stored_procedure.md","localizedDate":"2025年4月13日","excerpt":"\\n<p>Oracle 的存储过程（Stored Procedure）是数据库中预先编译并存储的一组 SQL 和 PL/SQL 语句，用于完成特定任务。</p>\\n<p>它类似于其他编程语言中的函数，但可以包含复杂的业务逻辑，并支持输入输出参数。</p>\\n<hr>\\n<h3><strong>1. 存储过程的核心特点</strong></h3>\\n<ul>\\n<li><strong>预编译</strong>：存储过程在创建时会被编译并存储在数据库中，后续调用时无需重新解析，执行效率高。</li>\\n<li><strong>模块化</strong>：可将复杂逻辑封装成独立模块，提高代码重用性和可维护性。</li>\\n<li><strong>安全性</strong>：通过权限控制，可限制用户直接操作表，而是通过存储过程间接访问。</li>\\n<li><strong>事务控制</strong>：可以在过程中使用 <code>COMMIT</code> 或 <code>ROLLBACK</code> 管理事务。</li>\\n<li><strong>支持参数</strong>：支持输入（<code>IN</code>）、输出（<code>OUT</code>）、输入输出（<code>IN OUT</code>）参数。</li>\\n</ul>","autoDesc":true}')},6995:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,n]of s)a[i]=n;return a}}}]);