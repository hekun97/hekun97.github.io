"use strict";(self.webpackChunkcaelis_terra=self.webpackChunkcaelis_terra||[]).push([[7297],{3124:(t,e,s)=>{s.r(e),s.d(e,{comp:()=>a,data:()=>r});var n=s(6254);const i={},a=(0,s(6995).A)(i,[["render",function(t,e){return(0,n.uX)(),(0,n.CE)("div",null,e[0]||(e[0]=[(0,n.Fv)('<h1 id="详解-http-request默认值" tabindex="-1"><a class="header-anchor" href="#详解-http-request默认值"><span>详解 HTTP Request默认值</span></a></h1><h2 id="http-请求默认值界面介绍" tabindex="-1"><a class="header-anchor" href="#http-请求默认值界面介绍"><span>HTTP 请求默认值界面介绍</span></a></h2><figure><img src="/assets/jmeter/1896874-20200619145213878-1405545719.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>乍眼一看，其实跟 HTTP Request 的界面基本一样，少了一点点东西而已，所以这里就不介绍每个字段的含义了，来说下注意事项</p><h3 id="重点" tabindex="-1"><a class="header-anchor" href="#重点"><span>重点</span></a></h3><ul><li>HTTP 请求默认值可以直接添加到<strong>线程组下面</strong>，也可以添加到某个 <strong>HTTP 请求下面</strong></li><li>如果是在线程组下的 HTTP 请求默认值，那么它的<strong>作用域</strong>就是该线程组下的<strong>所有 HTTP 请求</strong>，包括子级、孙子级、孙孙子级的 HTTP 请求</li><li>如果实在某个 HTTP 请求下的 HTTP 请求默认值，那么它的<strong>作用域</strong>就只针对<strong>这个 HTTP 请求</strong></li><li>线程组的 HTTP 请求默认值的<strong>优先级小于</strong>HTTP 请求下的 HTTP请求默认值</li><li>当然啦，所有 HTTP 请求默认值的<strong>优先级</strong>都比 HTTP 请求<strong>低</strong></li></ul><p><strong>光理论很难理解，我们来看个栗子</strong></p><h4 id="测试计划树结构" tabindex="-1"><a class="header-anchor" href="#测试计划树结构"><span>测试计划树结构</span></a></h4><figure><img src="/assets/jmeter/1896874-20200619170035741-211879123.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>一个线程组下的 HTTP 请求默认值（1），两个 HTTP 请求下的HTTP 请求默认值（2、3）</p><h4 id="第一个-http-请求默认填写的内容" tabindex="-1"><a class="header-anchor" href="#第一个-http-请求默认填写的内容"><span>第一个 HTTP 请求默认填写的内容</span></a></h4><figure><img src="/assets/jmeter/1896874-20200619170203597-560392654.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>**设置了：**协议、host、端口、编码、参数</p><h4 id="第二个-http-请求默认填写的内容" tabindex="-1"><a class="header-anchor" href="#第二个-http-请求默认填写的内容"><span>第二个 HTTP 请求默认填写的内容</span></a></h4><figure><img src="/assets/jmeter/1896874-20200619170208764-566188583.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>**设置了：**host、端口、路径</p><h4 id="第三个-http-请求默认填写的内容" tabindex="-1"><a class="header-anchor" href="#第三个-http-请求默认填写的内容"><span>第三个 HTTP 请求默认填写的内容</span></a></h4><figure><img src="/assets/jmeter/1896874-20200619171023883-268065223.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>**设置了：**host、编码、参数列表</p><h4 id="看看-flask-json-的请求体和响应体吧" tabindex="-1"><a class="header-anchor" href="#看看-flask-json-的请求体和响应体吧"><span>看看 Flask-json 的请求体和响应体吧</span></a></h4><figure><img src="/assets/jmeter/1896874-20200619171015313-1951661200.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p><strong>可以看到</strong></p><ul><li><strong>【*<em>2--请求默认值*</em>】<strong>里设置的host、端口、路径把</strong>【*<em>1--请求默认值*</em>】<strong>设置的</strong>覆盖掉了</strong></li><li>又因为**【*<em>**1--请求默认值**</em>*】<strong>设置了编码和参数列表，而</strong>【2--请求默认值】<strong>没有设置，所以直接拿了</strong>【*<em>1--请求默认值*</em>】**的值</li><li>但有个问题，HTTP 请求本身有设置请求数据（JSON），<strong>请求数据是不会被覆盖的</strong>，而会把**【*<em>1--请求默认值*</em>】<strong>的参数列表和 JSON 数据</strong>拼接**在一起，拼接后的数据结构是错误的，所以请求会报错</li><li>即使 HTTP 请求默认值里面设置的是 JSON 数据，也不会合二为一，仍然会报错（如下图）</li></ul><figure><img src="/assets/jmeter/1896874-20200619174340385-1138571039.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h4 id="看看图片文件上传接口的请求体和响应体吧" tabindex="-1"><a class="header-anchor" href="#看看图片文件上传接口的请求体和响应体吧"><span>看看图片文件上传接口的请求体和响应体吧</span></a></h4><p><img src="/assets/jmeter/1896874-20200619171018465-833785271.png" alt="img" loading="lazy">]</p><p><strong>可以看到</strong></p><ul><li><strong>【*<em>2--请求默认值*</em>】<strong>里设置的host、编码把</strong>【*<em>1--请求默认值*</em>】<strong>设置的</strong>覆盖掉了</strong></li><li>而这个 HTTP请求的请求数据是也是参数列表形式传参的，这样就可以拼接成功了</li><li>最终会把两个请求默认值的参数列表<strong>拼接起来再传</strong>递，即使参数名一样，仍然会分开传，而不是覆盖参数值（可见下面的扩展小栗子）</li></ul><figure><img src="/assets/jmeter/1896874-20200619173313604-117166962.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>HTTP 请求所需的各种<strong>字段值</strong>（host、端口、编码、请求数据等等），取值的顺序（优先级）是：</p><ol><li>HTTP 请求本身设置的值</li><li>HTTP 请求下的 HTTP 请求默认值设置的值</li><li>线程组下的 HTTP 请求默认值设置的值</li></ol><h4 id="最后一句话" tabindex="-1"><a class="header-anchor" href="#最后一句话"><span>最后一句话</span></a></h4><p>有多个 HTTP 请求默认值时，除了参数列表或请求体数据是会拼接之外，其他字段值的取值顺序就是按照上述的顺序来走的</p>',34)]))}]]),r=JSON.parse('{"path":"/jmeter/guide/controllers/samplers/http_request/detail.html","title":"详解 HTTP Request默认值","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","category":["JMeter"],"tag":["request","samplers","detail"],"order":2,"sticky":true,"description":"详解 HTTP Request默认值 HTTP 请求默认值界面介绍 imgimg 乍眼一看，其实跟 HTTP Request 的界面基本一样，少了一点点东西而已，所以这里就不介绍每个字段的含义了，来说下注意事项 重点 HTTP 请求默认值可以直接添加到线程组下面，也可以添加到某个 HTTP 请求下面 如果是在线程组下的 HTTP 请求默认值，那么它的作...","head":[["meta",{"property":"og:url","content":"https://hekun97.github.io/jmeter/guide/controllers/samplers/http_request/detail.html"}],["meta",{"property":"og:site_name","content":"专业治头秃"}],["meta",{"property":"og:title","content":"详解 HTTP Request默认值"}],["meta",{"property":"og:description","content":"详解 HTTP Request默认值 HTTP 请求默认值界面介绍 imgimg 乍眼一看，其实跟 HTTP Request 的界面基本一样，少了一点点东西而已，所以这里就不介绍每个字段的含义了，来说下注意事项 重点 HTTP 请求默认值可以直接添加到线程组下面，也可以添加到某个 HTTP 请求下面 如果是在线程组下的 HTTP 请求默认值，那么它的作..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hekun97.github.io/assets/jmeter/1896874-20200619145213878-1405545719.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-28T17:43:32.000Z"}],["meta",{"property":"article:tag","content":"request"}],["meta",{"property":"article:tag","content":"samplers"}],["meta",{"property":"article:tag","content":"detail"}],["meta",{"property":"article:modified_time","content":"2025-03-28T17:43:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"详解 HTTP Request默认值\\",\\"image\\":[\\"https://hekun97.github.io/assets/jmeter/1896874-20200619145213878-1405545719.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200619170035741-211879123.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200619170203597-560392654.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200619170208764-566188583.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200619171023883-268065223.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200619171015313-1951661200.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200619174340385-1138571039.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200619171018465-833785271.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200619173313604-117166962.png\\"],\\"dateModified\\":\\"2025-03-28T17:43:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"专业治头秃\\",\\"url\\":\\"https://github.com/hekun97\\"}]}"]]},"git":{"createdTime":1743183812000,"updatedTime":1743183812000,"contributors":[{"name":"hekun97","username":"hekun97","email":"hek97@qq.com","commits":1,"url":"https://github.com/hekun97"}]},"readingTime":{"minutes":2.86,"words":858},"filePathRelative":"jmeter/guide/controllers/samplers/http_request/detail.md","localizedDate":"2025年3月28日","excerpt":"\\n<h2>HTTP 请求默认值界面介绍</h2>\\n<figure><img src=\\"/assets/jmeter/1896874-20200619145213878-1405545719.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>img</figcaption></figure>\\n<p>乍眼一看，其实跟 HTTP Request 的界面基本一样，少了一点点东西而已，所以这里就不介绍每个字段的含义了，来说下注意事项</p>\\n<h3>重点</h3>\\n<ul>\\n<li>HTTP 请求默认值可以直接添加到<strong>线程组下面</strong>，也可以添加到某个 <strong>HTTP 请求下面</strong></li>\\n<li>如果是在线程组下的 HTTP 请求默认值，那么它的<strong>作用域</strong>就是该线程组下的<strong>所有 HTTP 请求</strong>，包括子级、孙子级、孙孙子级的 HTTP 请求</li>\\n<li>如果实在某个 HTTP 请求下的 HTTP 请求默认值，那么它的<strong>作用域</strong>就只针对<strong>这个 HTTP 请求</strong></li>\\n<li>线程组的 HTTP 请求默认值的<strong>优先级小于</strong>HTTP 请求下的 HTTP请求默认值</li>\\n<li>当然啦，所有 HTTP 请求默认值的<strong>优先级</strong>都比 HTTP 请求<strong>低</strong></li>\\n</ul>","autoDesc":true}')},6995:(t,e)=>{e.A=(t,e)=>{const s=t.__vccOpts||t;for(const[t,n]of e)s[t]=n;return s}}}]);