"use strict";(self.webpackChunkcaelis_terra=self.webpackChunkcaelis_terra||[]).push([[5803],{488:(e,a,t)=>{t.r(a),t.d(a,{comp:()=>i,data:()=>s});var r=t(6254);const n={},i=(0,t(6995).A)(n,[["render",function(e,a){return(0,r.uX)(),(0,r.CE)("div",null,a[0]||(a[0]=[(0,r.Fv)('<h1 id="获取并使用-jdbc-request-返回的数据" tabindex="-1"><a class="header-anchor" href="#获取并使用-jdbc-request-返回的数据"><span>获取并使用 JDBC Request 返回的数据</span></a></h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><ul><li>Jmeter 使用 JDBC Request 获取数据库中数据，很多人都会用，因为测试中，有时候需要大量的用户进行登录，然后<strong>获取数据库中真实的数据用于测试</strong></li><li>前面也详细讲到 JDBC Request 的具体使用，一般是通过 Variable names 和 Result variable name 来获取返回的数据</li><li>这篇文章主要讲的就是把 Variable names 和 Result variable name 获取到的数据<strong>提取</strong>出来，给到 HTTP 请求使用</li></ul><h2 id="variable-names-foreach控制器" tabindex="-1"><a class="header-anchor" href="#variable-names-foreach控制器"><span>Variable names + Foreach控制器</span></a></h2><h3 id="线程组结构树" tabindex="-1"><a class="header-anchor" href="#线程组结构树"><span>线程组结构树</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624110545944-1121075674.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624110545944-1121075674.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h3 id="jdbc-request" tabindex="-1"><a class="header-anchor" href="#jdbc-request"><span>JDBC Request</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624110641962-2053847758.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624110641962-2053847758.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h3 id="调试取样器运行结果" tabindex="-1"><a class="header-anchor" href="#调试取样器运行结果"><span>调试取样器运行结果</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624110554073-1770443154.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624110554073-1770443154.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>有 100 条记录</p><h3 id="foreach控制器" tabindex="-1"><a class="header-anchor" href="#foreach控制器"><span>ForEach控制器</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624110652416-516958458.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624110652416-516958458.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h3 id="循环运行的结果-mobile-mobile" tabindex="-1"><a class="header-anchor" href="#循环运行的结果-mobile-mobile"><span>循环运行的结果（ mobile:${mobile} ）</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624111123020-1288226572.gif" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624111123020-1288226572.gif" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h2 id="variable-names-循环控制器" tabindex="-1"><a class="header-anchor" href="#variable-names-循环控制器"><span>Variable names + 循环控制器</span></a></h2><p>和上面的栗子只是换了个控制器而已，没太大变化</p><h3 id="线程组结构树-1" tabindex="-1"><a class="header-anchor" href="#线程组结构树-1"><span>线程组结构树</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624112007190-770089029.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624112007190-770089029.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h3 id="循环控制器" tabindex="-1"><a class="header-anchor" href="#循环控制器"><span>循环控制器</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624112219428-568780323.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624112219428-568780323.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>填写 100，是代表循环100次</p><h3 id="计数器" tabindex="-1"><a class="header-anchor" href="#计数器"><span>计数器</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624112029700-274579002.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624112029700-274579002.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>从 1 开始，递增加到 100为止，每次递增 1</p><ul><li>初始值=1</li><li>每次增加 1</li><li>最大的值=100（包含）</li><li>新变量 num</li></ul><h3 id="循环控制器内的-debug-sampler" tabindex="-1"><a class="header-anchor" href="#循环控制器内的-debug-sampler"><span>循环控制器内的 Debug Sampler</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624112113247-642318285.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624112113247-642318285.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>${__V()} 是关联函数，后面讲到</p><h3 id="循环运行的结果-mobile-mobile-1" tabindex="-1"><a class="header-anchor" href="#循环运行的结果-mobile-mobile-1"><span>循环运行的结果（ mobile:${mobile} ）</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624112239151-2112653737.gif" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624112239151-2112653737.gif" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h2 id="result-variable-name-foreach控制器" tabindex="-1"><a class="header-anchor" href="#result-variable-name-foreach控制器"><span>Result variable name + Foreach控制器</span></a></h2><h3 id="线程组结构树-2" tabindex="-1"><a class="header-anchor" href="#线程组结构树-2"><span>线程组结构树</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624121455768-553485987.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624121455768-553485987.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h3 id="jdbc-request-1" tabindex="-1"><a class="header-anchor" href="#jdbc-request-1"><span>JDBC Request</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624135058037-1510752776.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624135058037-1510752776.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h3 id="正则提取器" tabindex="-1"><a class="header-anchor" href="#正则提取器"><span>正则提取器</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624135103193-1982650351.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624135103193-1982650351.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h4 id="重点" tabindex="-1"><a class="header-anchor" href="#重点"><span>重点</span></a></h4><p>Applu to 选中 Jmeter Variable Name to use，因为要从 Jmeter Variables 中拿到 result_mobile 变量进行提取</p><h3 id="调试取样器运行结果-1" tabindex="-1"><a class="header-anchor" href="#调试取样器运行结果-1"><span>调试取样器运行结果</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624122529353-1752147915.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624122529353-1752147915.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>正则提取后的值是不是跟上面 Variable names 获取的值列表很像，是的！然后再结合 ForEach控制器就好啦</p><h3 id="foreach控制器-1" tabindex="-1"><a class="header-anchor" href="#foreach控制器-1"><span>ForEach控制器</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624132310526-1399447763.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624132310526-1399447763.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>变量前缀是正则提取器里的引用名称</p><h3 id="循环运行的结果-mobile-mobile-2" tabindex="-1"><a class="header-anchor" href="#循环运行的结果-mobile-mobile-2"><span>循环运行的结果（ mobile:${mobile} ）</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624132710751-659742437.gif" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624132710751-659742437.gif" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h2 id="result-variable-name-循环控制器" tabindex="-1"><a class="header-anchor" href="#result-variable-name-循环控制器"><span>Result variable name + 循环控制器</span></a></h2><p>和上面的栗子只是换了个控制器而已，没太大变化</p><h3 id="线程组结构树-3" tabindex="-1"><a class="header-anchor" href="#线程组结构树-3"><span>线程组结构树</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624135114727-1992946155.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624135114727-1992946155.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h3 id="循环控制器-1" tabindex="-1"><a class="header-anchor" href="#循环控制器-1"><span>循环控制器</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624135152670-110736680.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624135152670-110736680.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>填写 100，是代表循环100次</p><h3 id="计数器-1" tabindex="-1"><a class="header-anchor" href="#计数器-1"><span>计数器</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624135201997-524006121.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624135201997-524006121.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h3 id="用户参数" tabindex="-1"><a class="header-anchor" href="#用户参数"><span>用户参数</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624135307421-755395650.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624135307421-755395650.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h4 id="重点一" tabindex="-1"><a class="header-anchor" href="#重点一"><span>重点一</span></a></h4><ul><li>${__BeanShell(vars.getObject(&quot;result_mobile&quot;).get(${num}).get(&quot;mobile&quot;))}</li><li>${__BeanShell()} ：执行BeanShell脚本，一般比较短的脚本可以用此方法来写，后面会再详细讲解这个函数</li></ul><h4 id="重点二" tabindex="-1"><a class="header-anchor" href="#重点二"><span>重点二</span></a></h4>',62),(0,r.Lk)("ul",null,[(0,r.Lk)("li",null,'vars.getObject("result_mobile").get(${num}).get("mobile")'),(0,r.Lk)("li",{mobile:"158000480001"},[(0,r.eW)("result_mobile：是一个"),(0,r.Lk)("strong",null,"数组"),(0,r.eW)("，即 JDBC Request 里的 Result variable name，每个元素的格式都是")]),(0,r.Lk)("li",null,[(0,r.eW)("${num}：上面计数器的值，每次递增 1，这里是"),(0,r.Lk)("strong",null,"数组下标"),(0,r.eW)("的意思")]),(0,r.Lk)("li",null,[(0,r.Lk)("strong",null,[(0,r.eW)("总结："),(0,r.Lk)("strong",null,"获取 result_mobile 数组，每次取数组中第 num 个元素，从元素中取 mobile 键的值"),(0,r.eW)("【这是固定写法，只改Object 名、键名就行了】")])])],-1),(0,r.Lk)("h3",{id:"循环运行的结果-mobile-user-mobile",tabindex:"-1"},[(0,r.Lk)("a",{class:"header-anchor",href:"#循环运行的结果-mobile-user-mobile"},[(0,r.Lk)("span",null,"循环运行的结果（ mobile:${user_mobile} ）")])],-1),(0,r.Lk)("figure",null,[(0,r.Lk)("img",{src:"/assets/jmeter/1896874-20200624140851743-1166348122.gif",alt:"循环运行的结果",tabindex:"0",loading:"lazy"}),(0,r.Lk)("figcaption",null,"循环运行的结果")],-1)]))}]]),s=JSON.parse('{"path":"/jmeter/guide/controllers/samplers/jdbc_request/use_to_http_request.html","title":"获取并使用 JDBC Request 返回的数据","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","category":["JMeter"],"tag":["samplers","JDBC","request","advanced"],"order":2,"sticky":true,"description":"获取并使用 JDBC Request 返回的数据 前言 Jmeter 使用 JDBC Request 获取数据库中数据，很多人都会用，因为测试中，有时候需要大量的用户进行登录，然后获取数据库中真实的数据用于测试 前面也详细讲到 JDBC Request 的具体使用，一般是通过 Variable names 和 Result variable name ...","head":[["meta",{"property":"og:url","content":"https://hekun97.github.io/jmeter/guide/controllers/samplers/jdbc_request/use_to_http_request.html"}],["meta",{"property":"og:site_name","content":"专业治头秃"}],["meta",{"property":"og:title","content":"获取并使用 JDBC Request 返回的数据"}],["meta",{"property":"og:description","content":"获取并使用 JDBC Request 返回的数据 前言 Jmeter 使用 JDBC Request 获取数据库中数据，很多人都会用，因为测试中，有时候需要大量的用户进行登录，然后获取数据库中真实的数据用于测试 前面也详细讲到 JDBC Request 的具体使用，一般是通过 Variable names 和 Result variable name ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hekun97.github.io/assets/jmeter/1896874-20200624110545944-1121075674.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-28T17:43:32.000Z"}],["meta",{"property":"article:tag","content":"samplers"}],["meta",{"property":"article:tag","content":"JDBC"}],["meta",{"property":"article:tag","content":"request"}],["meta",{"property":"article:tag","content":"advanced"}],["meta",{"property":"article:modified_time","content":"2025-03-28T17:43:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"获取并使用 JDBC Request 返回的数据\\",\\"image\\":[\\"https://hekun97.github.io/assets/jmeter/1896874-20200624110545944-1121075674.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624110641962-2053847758.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624110554073-1770443154.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624110652416-516958458.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624111123020-1288226572.gif\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624112007190-770089029.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624112219428-568780323.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624112029700-274579002.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624112113247-642318285.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624112239151-2112653737.gif\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624121455768-553485987.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624135058037-1510752776.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624135103193-1982650351.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624122529353-1752147915.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624132310526-1399447763.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624132710751-659742437.gif\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624135114727-1992946155.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624135152670-110736680.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624135201997-524006121.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624135307421-755395650.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200624140851743-1166348122.gif\\"],\\"dateModified\\":\\"2025-03-28T17:43:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"专业治头秃\\",\\"url\\":\\"https://github.com/hekun97\\"}]}"]]},"git":{"createdTime":1743183812000,"updatedTime":1743183812000,"contributors":[{"name":"hekun97","username":"hekun97","email":"hek97@qq.com","commits":1,"url":"https://github.com/hekun97"}]},"readingTime":{"minutes":2.7,"words":809},"filePathRelative":"jmeter/guide/controllers/samplers/jdbc_request/use_to_http_request.md","localizedDate":"2025年3月28日","excerpt":"\\n<h2>前言</h2>\\n<ul>\\n<li>Jmeter 使用 JDBC Request 获取数据库中数据，很多人都会用，因为测试中，有时候需要大量的用户进行登录，然后<strong>获取数据库中真实的数据用于测试</strong></li>\\n<li>前面也详细讲到 JDBC Request 的具体使用，一般是通过 Variable names 和 Result variable name 来获取返回的数据</li>\\n<li>这篇文章主要讲的就是把 Variable names 和 Result variable name 获取到的数据<strong>提取</strong>出来，给到 HTTP 请求使用</li>\\n</ul>","autoDesc":true}')},6995:(e,a)=>{a.A=(e,a)=>{const t=e.__vccOpts||e;for(const[e,r]of a)t[e]=r;return t}}}]);