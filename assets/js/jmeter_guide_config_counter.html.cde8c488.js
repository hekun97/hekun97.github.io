"use strict";(self.webpackChunkcaelis_terra=self.webpackChunkcaelis_terra||[]).push([[8742],{6995:(e,t)=>{t.A=(e,t)=>{const a=e.__vccOpts||e;for(const[e,r]of t)a[e]=r;return a}},8112:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>i,data:()=>g});var r=a(6254);const n={},i=(0,a(6995).A)(n,[["render",function(e,t){return(0,r.uX)(),(0,r.CE)("div",null,t[0]||(t[0]=[(0,r.Fv)('<h1 id="详解-counter-计数器" tabindex="-1"><a class="header-anchor" href="#详解-counter-计数器"><span>详解 Counter 计数器</span></a></h1><h2 id="简单介绍" tabindex="-1"><a class="header-anchor" href="#简单介绍"><span>简单介绍</span></a></h2><ul><li>计数器的作用：循环递增生成数字</li><li>计数器使用 long 来存储值，因此取值范围是 <strong>-2 ^ 63</strong> 到 <strong>2 ^ 63-1</strong></li><li>可以在线程组任意地方添加计数器</li></ul><h2 id="计数器" tabindex="-1"><a class="header-anchor" href="#计数器"><span>计数器</span></a></h2><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200625201757726-1437495883.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200625201757726-1437495883.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h2 id="计数器界面介绍" tabindex="-1"><a class="header-anchor" href="#计数器界面介绍"><span>计数器界面介绍</span></a></h2><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200625201806994-1957414503.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200625201806994-1957414503.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h4 id="字段介绍" tabindex="-1"><a class="header-anchor" href="#字段介绍"><span>字段介绍</span></a></h4><table><thead><tr><th>字段</th><th>含义</th></tr></thead><tbody><tr><td>Starting value</td><td>初始值，long 整型，默认 0</td></tr><tr><td>Increment</td><td>每次迭代的递增值，默认 0，表示不增加</td></tr><tr><td>Maximum value</td><td>最大值，包含此值</td></tr><tr><td>Number format</td><td>数字可选格式</td></tr><tr><td>Exported Variable Name</td><td>引用名称</td></tr><tr><td>Track counter independently for rach user</td><td>每个用户都有一个独立的计数器</td></tr><tr><td>Reset counter on each Thread Group Iteration</td><td>每次线程组迭代时计数器将重置为初始值</td></tr></tbody></table><h2 id="最基础的栗子" tabindex="-1"><a class="header-anchor" href="#最基础的栗子"><span>最基础的栗子</span></a></h2><p>只有计数器的情况下的栗子</p><h3 id="线程组结构树" tabindex="-1"><a class="header-anchor" href="#线程组结构树"><span>线程组结构树</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200625230817998-79278903.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200625230817998-79278903.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h3 id="线程组属性" tabindex="-1"><a class="header-anchor" href="#线程组属性"><span>线程组属性</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200625231033309-147179514.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200625231033309-147179514.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>共有 15 个线程，模拟 15 个用户</p><h3 id="计数器-1" tabindex="-1"><a class="header-anchor" href="#计数器-1"><span>计数器</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200625230827935-1591747622.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200625230827935-1591747622.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>计数器最多循环计数 10 次</p><h3 id="运行结果" tabindex="-1"><a class="header-anchor" href="#运行结果"><span>运行结果</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200625231111507-1943328051.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200625231111507-1943328051.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>可以看到，因为有 15 个用户，但计数器最多循环计数 10 次，所以第一轮循环结束后会重头开始</p><h2 id="计数器-循环控制器的栗子" tabindex="-1"><a class="header-anchor" href="#计数器-循环控制器的栗子"><span>计数器 + 循环控制器的栗子</span></a></h2><h3 id="线程组结构树-1" tabindex="-1"><a class="header-anchor" href="#线程组结构树-1"><span>线程组结构树</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200625231321344-333362685.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200625231321344-333362685.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><h3 id="线程组属性-1" tabindex="-1"><a class="header-anchor" href="#线程组属性-1"><span>线程组属性</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200625231417910-1438600170.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200625231417910-1438600170.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>共有 5 个线程，模拟 5 个用户</p><h3 id="循环控制器" tabindex="-1"><a class="header-anchor" href="#循环控制器"><span>循环控制器</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200625231519882-778911139.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200625231519882-778911139.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>每个线程运行 3 次</p><h3 id="计数器-2" tabindex="-1"><a class="header-anchor" href="#计数器-2"><span>计数器</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200625231438389-1987346442.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200625231438389-1987346442.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>计数器最多循环计数 30 次</p><h3 id="未勾选【与每用户独立的跟踪计数器】的运行结果" tabindex="-1"><a class="header-anchor" href="#未勾选【与每用户独立的跟踪计数器】的运行结果"><span>未勾选【与每用户独立的跟踪计数器】的运行结果</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200625231629128-2079350171.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200625231629128-2079350171.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>可以看到</p><ul><li>因为有 5 个线程，每个线程循环 3 次，一共 15 个请求，所以计数器是循环了 15 次</li><li>此时计数器是对<strong>所有线程共享</strong>的，属于线程组全局计数器，所以计数器是累计循环了 15 次</li></ul><h3 id="勾选【与每用户独立的跟踪计数器】的运行结果" tabindex="-1"><a class="header-anchor" href="#勾选【与每用户独立的跟踪计数器】的运行结果"><span>勾选【与每用户独立的跟踪计数器】的运行结果</span></a></h3><figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200625231718371-1287559514.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200625231718371-1287559514.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure><p>可以看到</p><ul><li>每个线程运行时，计数器都是从初始值算起的</li><li>此时计数器是<strong>每个线程独享</strong>的，不再是公共计数器，所以每次有<strong>新的线程运行</strong>时，都是新的计数器开始循环计数</li></ul><h2 id="计数器的一些注意事项" tabindex="-1"><a class="header-anchor" href="#计数器的一些注意事项"><span>计数器的一些注意事项</span></a></h2><p>使用计数器生成的变量，值的类型为 string，所以有比较之类的操作时，需要带 &quot;&quot; 操作</p>',44)]))}]]),g=JSON.parse('{"path":"/jmeter/guide/config/counter.html","title":"详解 Counter 计数器","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","category":["JMeter"],"tag":["counter","csv"],"order":-1,"sticky":true,"description":"详解 Counter 计数器 简单介绍 计数器的作用：循环递增生成数字 计数器使用 long 来存储值，因此取值范围是 -2 ^ 63 到 2 ^ 63-1 可以在线程组任意地方添加计数器 计数器 imgimg 计数器界面介绍 imgimg 字段介绍 最基础的栗子 只有计数器的情况下的栗子 线程组结构树 imgimg 线程组属性 imgimg 共有 1...","head":[["meta",{"property":"og:url","content":"https://hekun97.github.io/jmeter/guide/config/counter.html"}],["meta",{"property":"og:site_name","content":"专业治头秃"}],["meta",{"property":"og:title","content":"详解 Counter 计数器"}],["meta",{"property":"og:description","content":"详解 Counter 计数器 简单介绍 计数器的作用：循环递增生成数字 计数器使用 long 来存储值，因此取值范围是 -2 ^ 63 到 2 ^ 63-1 可以在线程组任意地方添加计数器 计数器 imgimg 计数器界面介绍 imgimg 字段介绍 最基础的栗子 只有计数器的情况下的栗子 线程组结构树 imgimg 线程组属性 imgimg 共有 1..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hekun97.github.io/assets/jmeter/1896874-20200625201757726-1437495883.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-28T17:43:32.000Z"}],["meta",{"property":"article:tag","content":"counter"}],["meta",{"property":"article:tag","content":"csv"}],["meta",{"property":"article:modified_time","content":"2025-03-28T17:43:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"详解 Counter 计数器\\",\\"image\\":[\\"https://hekun97.github.io/assets/jmeter/1896874-20200625201757726-1437495883.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200625201806994-1957414503.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200625230817998-79278903.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200625231033309-147179514.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200625230827935-1591747622.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200625231111507-1943328051.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200625231321344-333362685.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200625231417910-1438600170.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200625231519882-778911139.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200625231438389-1987346442.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200625231629128-2079350171.png\\",\\"https://hekun97.github.io/assets/jmeter/1896874-20200625231718371-1287559514.png\\"],\\"dateModified\\":\\"2025-03-28T17:43:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"专业治头秃\\",\\"url\\":\\"https://github.com/hekun97\\"}]}"]]},"git":{"createdTime":1743183812000,"updatedTime":1743183812000,"contributors":[{"name":"hekun97","username":"hekun97","email":"hek97@qq.com","commits":1,"url":"https://github.com/hekun97"}]},"readingTime":{"minutes":2.22,"words":667},"filePathRelative":"jmeter/guide/config/counter.md","localizedDate":"2025年3月28日","excerpt":"\\n<h2>简单介绍</h2>\\n<ul>\\n<li>计数器的作用：循环递增生成数字</li>\\n<li>计数器使用 long 来存储值，因此取值范围是 <strong>-2 ^ 63</strong> 到 <strong>2 ^ 63-1</strong></li>\\n<li>可以在线程组任意地方添加计数器</li>\\n</ul>\\n<h2>计数器</h2>\\n<figure><a href=\\"https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200625201757726-1437495883.png\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"/assets/jmeter/1896874-20200625201757726-1437495883.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"></a><figcaption>img</figcaption></figure>","autoDesc":true}')}}]);