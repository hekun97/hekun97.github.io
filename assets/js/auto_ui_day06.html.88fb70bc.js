"use strict";(self.webpackChunkcaelis_terra=self.webpackChunkcaelis_terra||[]).push([[7027],{3192:(i,s,a)=>{a.r(s),a.d(s,{comp:()=>t,data:()=>h});var e=a(6254);const l={},t=(0,a(6995).A)(l,[["render",function(i,s){return(0,e.uX)(),(0,e.CE)("div",null,s[0]||(s[0]=[(0,e.Fv)('<h2 id="一、app自动化框架介绍" tabindex="-1"><a class="header-anchor" href="#一、app自动化框架介绍"><span>一、app自动化框架介绍</span></a></h2><h3 id="_1、常用自动化框架介绍" tabindex="-1"><a class="header-anchor" href="#_1、常用自动化框架介绍"><span>1、常用自动化框架介绍</span></a></h3><ol><li>Robtium（一般Java语言下用） <ul><li>基于anroid的一款开源自动化测试框架</li><li>适用平台：anroid</li><li>支持语言：java</li><li>缺点：不支持跨应用、跨平台</li></ul></li><li>macaca（一般不用） <ul><li>由阿里巴巴公开开发的一套开源自动化解决方案</li><li>适用平台：PC端、android、IOS</li><li>支持的语言：java、python、nodejs</li></ul></li><li>Appium（当前学习） <ul><li>是一款国外开源的自动化测试框架</li><li>适用平台：android、IOS</li><li>支持的语言：java、js、php、python、C#、ruby</li><li>优点：社区活跃、资料丰富</li></ul></li></ol><h3 id="_2、appium介绍" tabindex="-1"><a class="header-anchor" href="#_2、appium介绍"><span>2、appium介绍</span></a></h3><h4 id="_2-1-appium自动化框架特点" tabindex="-1"><a class="header-anchor" href="#_2-1-appium自动化框架特点"><span>2.1 appium自动化框架特点</span></a></h4><ol><li><p>开源</p></li><li><p>支持Native App(全部android sdk的java代码生成) 原生的app如果页面有变更，就得发布一版本，提交到应用商城去审核 。</p><blockquote><p>Web App（都是由HTML5生成的） 访问速度慢。H5的代码以及元素信息</p><p>Hybird APP（既有native app也有H5的页面）混合app。（是当前工作中用得最多的）</p></blockquote></li><li><p>支持andorid 、IOS</p></li><li><p>支持跨平台、支持windows、linux、macos</p></li><li><p>支持多语言：java、js、php、python、C#、ruby（基本的主流语言都能支持）</p></li></ol><h4 id="_2-2-appium自动化原理" tabindex="-1"><a class="header-anchor" href="#_2-2-appium自动化原理"><span>2.2 appium自动化原理</span></a></h4><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524549.png" alt="image-20200628120246352" style="zoom:50%;"><p>通过此图可以知道app的自动化环境需要以下工具：</p><ul><li>appium服务器</li><li>基于python的appium客户端(appium-client-python)</li><li>adb(adb集成在android-sdk中)</li><li>JDK</li></ul><h2 id="二、自动化测试环境搭建" tabindex="-1"><a class="header-anchor" href="#二、自动化测试环境搭建"><span>二、自动化测试环境搭建</span></a></h2><p>详见Mac下app自动化测试环境搭建文档。</p><h3 id="_3、模拟器安装-略过" tabindex="-1"><a class="header-anchor" href="#_3、模拟器安装-略过"><span>3、模拟器安装（略过）</span></a></h3><h3 id="_4、appium服务器安装" tabindex="-1"><a class="header-anchor" href="#_4、appium服务器安装"><span>4、appium服务器安装</span></a></h3><h4 id="_4-1-appium安装" tabindex="-1"><a class="header-anchor" href="#_4-1-appium安装"><span>4.1 appium安装</span></a></h4><p>已更新为appium2，旧版本1不再需要，参考安装配置教程。<a href="https://blog.csdn.net/penngo/article/details/132396930" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/penngo/article/details/132396930</a></p><h3 id="_5、appium-client-python安装" tabindex="-1"><a class="header-anchor" href="#_5、appium-client-python安装"><span>5、appium-client-python安装</span></a></h3><h4 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h4><ul><li><p>在线：Appium-Python-Client，python使用的appium库，我们后续做app自动化测试就靠它了，直接pip安装,在命令行输入</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Appium-Python-Client</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后开始安装，会将依赖的selenium 、sockect都安装好，省心省力。</p></li><li><p>离线：如果是非联网的环境，则需要去 Pypi网址下载到本地，然后本地安装<a href="https://pypi.org/project/Appium-Python-Client/2.7.1/#files" target="_blank" rel="noopener noreferrer">Appium-Python-Client · PyPI</a>），安装方法为解压下载的包，命令行进入对应的目录，然后运行如下命令</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> setup.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h4 id="验证是否安装" tabindex="-1"><a class="header-anchor" href="#验证是否安装"><span>验证是否安装</span></a></h4><ul><li><p>命令行</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pip show Appium-Python-Client</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>pycharm</p><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524550.png" alt="CleanShot 2023-12-12 at 10.53.54@2x" style="zoom:50%;"></li></ul><h2 id="三、adb工具" tabindex="-1"><a class="header-anchor" href="#三、adb工具"><span>三、adb工具</span></a></h2><h3 id="_1、adb工具构成及原理" tabindex="-1"><a class="header-anchor" href="#_1、adb工具构成及原理"><span>1、adb工具构成及原理</span></a></h3><ul><li>adb包含了三个部分 <ul><li><p>adb 客户端：用来下发adb的指令工具。像我们的终端窗口，就可以用来下发adb指令，就能被称为adb的客户端。</p><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524551.png" alt="CleanShot 2023-12-12 at 11.11.16@2x" style="zoom:50%;"></li><li><p>Server 服务端：adb.exe（Mac下为Unix可执行文件的adb）执行之后的进程，表示adb的服务端，通过服务端与手机上的adb守护进程进行通信。</p><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524553.png" alt="CleanShot 2023-12-12 at 11.29.36@2x" style="zoom:50%;"></li><li><p>adb 守护进程：随着android系统的启动而启动，当android系统关闭之后它才会关闭。（用来和adb的服务器进行通信）</p></li></ul></li></ul><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524554.png" alt="image-20200628143311081" style="zoom:50%;"><h3 id="_2、adb常用命令" tabindex="-1"><a class="header-anchor" href="#_2、adb常用命令"><span>2、adb常用命令</span></a></h3><h4 id="_2-1-adb常用命令-常看设备、启动关闭adb服务" tabindex="-1"><a class="header-anchor" href="#_2-1-adb常用命令-常看设备、启动关闭adb服务"><span>2.1 adb常用命令(常看设备、启动关闭adb服务)</span></a></h4><ul><li><p>adb devices：查看手机的设备ID名称以及状态</p><p>emulator-5554 device：emulator-5554表示的是手机设备的ID名称（唯一、随机）， device表示设备处于在线状态，如果不在线显示的是offline。</p><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524555.png" alt="CleanShot 2023-12-12 at 11.42.46@2x" style="zoom:50%;"><blockquote><p>注意：</p><ol><li><p>如果adb服务没有启动，下发该命令时，会自动的去启动adb的服务（也就是上面的adb的服务器），因此下面的&quot;启动adb服务&quot;命令很少用。</p><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524556.png" alt="CleanShot 2023-12-12 at 11.51.04@2x" style="zoom:50%;"></li><li><p>如果是真机，不要使用<strong>一带多接头的数据线</strong>，否则找不到手机设备。</p></li><li><p>如果连接的是模拟器，需要先执行<code>adb connect 127.0.0.1:62001 </code>，其中62001是模拟器运行端口，不同模拟器的端口号不一样，itools的是54001，夜神的是62001，mumu模拟器的端口号为7555，需要自行查找。</p><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524557.png" alt="CleanShot 2023-12-12 at 12.14.26@2x" style="zoom:50%;"></li></ol></blockquote></li><li><p>adb start-server：启动adb服务</p></li><li><p>adb kill-server：关闭adb 服务</p></li></ul><h4 id="_2-2-获取包名和界面名" tabindex="-1"><a class="header-anchor" href="#_2-2-获取包名和界面名"><span>2.2 获取包名和界面名</span></a></h4><h5 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h5><ul><li><p>包名：app包名，通过app的包名来区分不同的app，app包名是唯一的。</p><p>比如：微信包名：<code>com.tencent.mm</code>，QQ包名：<code>com.tencent.mobileqq</code></p></li><li><p>界面名（启动名）：相当于web页面当中的链接地址，在app当中，每个界面都有一个名字。</p><blockquote><p>界面名也可以像web页面的路径一样，确定唯一的页面。</p></blockquote></li></ul><h5 id="为什么要获取包名和界面名" tabindex="-1"><a class="header-anchor" href="#为什么要获取包名和界面名"><span>为什么要获取包名和界面名？</span></a></h5><p>自动化测试的过程当中，需要通过app的包名和界面名来启动app。</p><h5 id="获取方法" tabindex="-1"><a class="header-anchor" href="#获取方法"><span>获取方法</span></a></h5><h6 id="adb命令" tabindex="-1"><a class="header-anchor" href="#adb命令"><span>adb命令</span></a></h6><ol><li><p>在手机或者模拟器上面打开需要获取包名和界面名的app，这里的示例是打开GT工具；</p><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524558.png" alt="CleanShot 2023-12-12 at 15.16.08@2x" style="zoom:25%;"></li><li><p>LINUX/MacOS下获取：</p><ul><li><p>命令一：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dumpsys</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> window</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> windows</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mFocusedApp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524559.png" alt="CleanShot 2023-12-12 at 15.07.19@2x" style="zoom:50%;"><blockquote><p><code>com.tencent.wstt.gt/.activity.GTMainActivity</code>：其中<code>com.tencent.wstt.gt</code>是包名，<code>.activity.GTMainActivity</code>是界面名</p></blockquote></li><li><p>命令二：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dumpsys</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;usedApp&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524560.png" alt="CleanShot 2023-12-12 at 15.20.09@2x" style="zoom:50%;"></li></ul></li><li><p>windows下获取：</p><ul><li><p>命令一：<code>adb shell dumpsys window windows | findstr mFocusedApp</code></p></li><li><p>命令二: <code>adb shell dumpsys window | findstr &quot;usedApp&quot;</code></p><blockquote><p>就是将命令行中的grep换为findstr。</p></blockquote></li></ul></li></ol><h6 id="通过aapt命令获取app的包名和界面名" tabindex="-1"><a class="header-anchor" href="#通过aapt命令获取app的包名和界面名"><span>通过aapt命令获取app的包名和界面名</span></a></h6><p>命令如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">aapt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dump</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> badging</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  /Users/hk/Downloads/xuechebu.apk</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>后面表示的是app安装包的路径及名称</p><ol><li><p>包名：</p><p><code>package: name=&#39;com.bjcsxq.chat.carfriend&#39;</code> ，属性package:name的值表示的是app的包名。</p></li><li><p>界面名：</p><p><code>launchable-activity: name=&#39;com.bjcsxq.chat.carfriend.module_main.activity.SplashActivity&#39;</code>，属性launchable-activity: name的值是包名+界面名。</p></li></ol><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524561.png" alt="CleanShot 2023-12-12 at 16.35.03@2x" style="zoom:50%;"><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524562.png" alt="CleanShot 2023-12-12 at 16.41.00@2x" style="zoom:50%;"><blockquote><p>通过adb命令和aapt命令获得的界面名可能不一样，对于学车不软件，这里adb命令界面名以MainActivity结尾，aapt命令的界面名以SplashActivity结尾，表示两个获取出来的界面不同。在自动化测试中，推荐使用aapt命令。</p><figure><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524563.png" alt="CleanShot 2023-12-12 at 16.48.57@2x" tabindex="0" loading="lazy"><figcaption>CleanShot 2023-12-12 at 16.48.57@2x</figcaption></figure></blockquote><h4 id="_2-3-安装卸载app" tabindex="-1"><a class="header-anchor" href="#_2-3-安装卸载app"><span>2.3 安装卸载app</span></a></h4><ul><li><p>app安装：<code>adb install 路径/app安装包名称</code></p><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524564.png" alt="CleanShot 2023-12-12 at 17.03.38@2x" style="zoom:50%;"></li><li><p>app卸载：<code>adb uninstall 包名</code></p><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524565.png" alt="CleanShot 2023-12-12 at 17.06.33@2x" style="zoom:50%;"></li></ul><h4 id="_2-4-上传下载文件" tabindex="-1"><a class="header-anchor" href="#_2-4-上传下载文件"><span>2.4 上传下载文件</span></a></h4><ul><li><p>上传：将电脑上的文件上传到手机，命令规范：<code>adb push 电脑上的文件路径 手机的路径</code></p><p>例子：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>adb push ./monkey.txt /sdcard</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>下载文件：从手机上下载文件到本地，命令规范：<code>adb pull 手机的文件路径 电脑的文件夹路径</code></p><p>例子：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /sdcard/monkey.txt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> D:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h4 id="_2-5-查看日志信息" tabindex="-1"><a class="header-anchor" href="#_2-5-查看日志信息"><span>2.5 查看日志信息</span></a></h4><p>为什么要获取日志信息：用来给开发定位问题。使用命令</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>adb  logcat</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>来查看相关的日志信息。</p><blockquote><p>日志信息很多不方便查看的话，可以使用命令将日志信息保存到文件中。</p></blockquote><h4 id="_2-6-测试app的启动速度-性能测试" tabindex="-1"><a class="header-anchor" href="#_2-6-测试app的启动速度-性能测试"><span>2.6 测试app的启动速度（性能测试）</span></a></h4><p>命令规范:</p><p><code>adb shell am start -W 包名/界面名</code></p><p>例子：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> am</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -W</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> com.bjcsxq.chat.carfriend/.module_main.activity.SplashActivity</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 测试 学车不 的启动速度</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>运行结果：</p><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524566.png" alt="CleanShot 2023-12-12 at 17.27.22@2x" style="zoom:50%;"><p>分析：</p><ol><li>专业解释： <ul><li>ThisTime：该界面(activity)启动耗时（毫秒）</li><li>TotalTime：应用自身启动耗时=ThisTime+应用application等资源启动时间（毫秒）</li><li>WaitTime：系统启动应用耗时=TotalTime+系统资源启动时间（毫秒）</li></ul></li><li>个人理解： <ul><li>ThisTime：一般和TotalTime时间一样，除非在应用启动时开了一个透明的Activity预先处理一些事再显示出主Activity，这样将比TotalTime小。</li><li>TotalTime：应用的启动时间，包括创建进程+Application初始化+Activity初始化到界面显示。</li><li>WaitTime：一般比TotalTime大点，包括系统影响的耗时。</li></ul></li></ol><figure><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524567.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>需要大家关注的是TotalTImie的时间值，那么在实际的测试过程当中，会进行多次测试，然后取平均值。</p><blockquote><p>注意：测试前记得完全关闭被测软件，也就是杀掉后台。</p></blockquote><hr><h3 id="_3、稳定性测试-8小时" tabindex="-1"><a class="header-anchor" href="#_3、稳定性测试-8小时"><span>3、稳定性测试 (8小时)</span></a></h3><p>通过monkey工具来实现的。</p><ul><li><p>monkey：集成在adb工具当中,主要用来做稳定性测试用的， monkey是通过java语言编写的一种稳定性测试工具。</p><p>主要用来测试app会不会出现crash（崩溃）的情况。</p><p>相当于让一只猴子来随机操作app（乱点乱操作），所有的操作都有可能出现，长时间的操作来测试app会不会出现问题。</p></li><li><p>monkey常用的参数</p><ul><li><p>-p 参数：对指定的app进行随机操作（单击、双击、滑动、长按、滑屏等操作）</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> monkey</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> com.baidu.homework</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  100</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 对作业帮app操作100次随机事件（单击、双击、滑动、长按、滑屏等操作）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>-v 参数：表示的是记录信息的级别</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> monkey</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> com.baidu.homework</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # level 0：默认级别</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> monkey</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> com.baidu.homework</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # level 1：打印出来的信息会比较详细,只打印跟本程序相关的日志信息</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> monkey</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> com.baidu.homework</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # level 2：打印出来的信息会更多，会显示出其他程序运行的信息</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>-s 参数：用于指定伪随机数。如果两次的伪随机数相同，那么两次的操作步骤、流程、操作事件完全一样。</p><p>主要的作用，就是用来复现上次的问题</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> monkey</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> com.baidu.homework</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -s</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  100</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>--throttle 用于指定随机事件的间隔时间, 单位是毫秒</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> monkey</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> com.baidu.homework</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --throttle</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3000</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  100</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #每隔三秒操作一次</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p>组合使用:</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> monkey</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> com.baidu.homework</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --throttle</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 500</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --pct--touch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  --pct-motion</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 50</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 300</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">log.log</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># --pct--touch 10：触模(10表示的是整个随机同件中的百分比)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># --pct-motion 50：滑屏(50表示的是整个随机同件中的百分比)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># &gt; log.log：保存日志文件位置</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>日志分析</p><p>如果在日志文件里面搜索出现了 ANR（application not responsing），说明有bug，出现ANR，一般是主线程的响应超过5秒，或者BroadcastReceiver没有在10秒内作出响应。这个就是一个比较严重的缺陷。把耗时的操作另起线程来处理就可以了。</p><p>如果日志中出现了Exception，可能程序崩溃。</p><figure><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524568.png" alt="image-20200628165845854" tabindex="0" loading="lazy"><figcaption>image-20200628165845854</figcaption></figure></li></ul><blockquote><p>更多的学习参考：<a href="https://www.cnblogs.com/laoluoits/p/12750883.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/laoluoits/p/12750883.html</a></p></blockquote><h3 id="_4、adb-手势操作命令" tabindex="-1"><a class="header-anchor" href="#_4、adb-手势操作命令"><span>4、adb 手势操作命令</span></a></h3><ul><li><p>模拟点击事件</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> input</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tap</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> y</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           #  x y表示的是坐标点，单位像素，参数之间用空格隔开</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> input</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 300</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>模拟滑屏事件（参数之间用空格隔开）</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> input</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> swipe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   startx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> starty</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  endx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  endy</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # startx, starty 表示的是起始点坐标，endx，endy表示的是终点坐标</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> input</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> swipe</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 300</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 500</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 600</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>模拟键盘操作</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> input</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> keyevent</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 键值</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # (3   表示的HOME键    4 表示的返回键    66表示的回车键)</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> input</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> keyevent</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>模拟输入操作</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> input</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> text</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 内容</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 内容表示要输入的内容，另外输入的内容不能是中文</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> input</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> text</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><ol><li><p>如果出现图中 offline的设备，记得重启一下adb服务</p><figure><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031525418.png" alt="image-20200630094950254" tabindex="0" loading="lazy"><figcaption>image-20200630094950254</figcaption></figure></li><li><p>如果电脑上面连接了多个模拟器或者是手机。那么需要加上一个参数 <code>-s device_name</code></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">adb</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> emulator-5554</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> input</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> keyevent</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol></div></li></ul>',72)]))}]]),h=JSON.parse('{"path":"/auto/ui/day06.html","title":"app自动化测试(appium)一","lang":"zh-CN","frontmatter":{"title":"app自动化测试(appium)一","order":61,"tag":"appAutomatedTest","description":"一、app自动化框架介绍 1、常用自动化框架介绍 Robtium（一般Java语言下用） 基于anroid的一款开源自动化测试框架 适用平台：anroid 支持语言：java 缺点：不支持跨应用、跨平台 macaca（一般不用） 由阿里巴巴公开开发的一套开源自动化解决方案 适用平台：PC端、android、IOS 支持的语言：java、python、n...","head":[["meta",{"property":"og:url","content":"https://hekun97.github.io/auto/ui/day06.html"}],["meta",{"property":"og:site_name","content":"专业治头秃"}],["meta",{"property":"og:title","content":"app自动化测试(appium)一"}],["meta",{"property":"og:description","content":"一、app自动化框架介绍 1、常用自动化框架介绍 Robtium（一般Java语言下用） 基于anroid的一款开源自动化测试框架 适用平台：anroid 支持语言：java 缺点：不支持跨应用、跨平台 macaca（一般不用） 由阿里巴巴公开开发的一套开源自动化解决方案 适用平台：PC端、android、IOS 支持的语言：java、python、n..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524563.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-06T16:27:29.000Z"}],["meta",{"property":"article:tag","content":"appAutomatedTest"}],["meta",{"property":"article:modified_time","content":"2025-03-06T16:27:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"app自动化测试(appium)一\\",\\"image\\":[\\"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524563.png\\",\\"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524567.png\\",\\"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031524568.png\\",\\"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031525418.png\\"],\\"dateModified\\":\\"2025-03-06T16:27:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"专业治头秃\\",\\"url\\":\\"https://github.com/hekun97\\"}]}"]]},"git":{"createdTime":1741278449000,"updatedTime":1741278449000,"contributors":[{"name":"hekun97","username":"hekun97","email":"hek97@qq.com","commits":1,"url":"https://github.com/hekun97"}]},"readingTime":{"minutes":9.98,"words":2993},"filePathRelative":"auto/ui/day06.md","localizedDate":"2025年3月6日","excerpt":"<h2>一、app自动化框架介绍</h2>\\n<h3>1、常用自动化框架介绍</h3>\\n<ol>\\n<li>Robtium（一般Java语言下用）\\n<ul>\\n<li>基于anroid的一款开源自动化测试框架</li>\\n<li>适用平台：anroid</li>\\n<li>支持语言：java</li>\\n<li>缺点：不支持跨应用、跨平台</li>\\n</ul>\\n</li>\\n<li>macaca（一般不用）\\n<ul>\\n<li>由阿里巴巴公开开发的一套开源自动化解决方案</li>\\n<li>适用平台：PC端、android、IOS</li>\\n<li>支持的语言：java、python、nodejs</li>\\n</ul>\\n</li>\\n<li>Appium（当前学习）\\n<ul>\\n<li>是一款国外开源的自动化测试框架</li>\\n<li>适用平台：android、IOS</li>\\n<li>支持的语言：java、js、php、python、C#、ruby</li>\\n<li>优点：社区活跃、资料丰富</li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}')},6995:(i,s)=>{s.A=(i,s)=>{const a=i.__vccOpts||i;for(const[i,e]of s)a[i]=e;return a}}}]);