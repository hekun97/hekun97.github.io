"use strict";(self.webpackChunkcaelis_terra=self.webpackChunkcaelis_terra||[]).push([[3524],{1709:(e,t,i)=>{i.d(t,{l:()=>n});const n=JSON.parse('{"category":{"/":{"path":"/category/","map":{"使用指南":{"path":"/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/","indexes":[0,1,2,3,4]},"指南":{"path":"/category/%E6%8C%87%E5%8D%97/","indexes":[5]},"Jmeter":{"path":"/category/jmeter/","indexes":[6,7]},"性能测试":{"path":"/category/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/","indexes":[8,9,6,7,10,11,12,13]},"UI自动化测试":{"path":"/category/ui%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/","indexes":[14,15,16,17,18,19,20,21,22,23,24]},"樱桃":{"path":"/category/%E6%A8%B1%E6%A1%83/","indexes":[25]},"火龙果":{"path":"/category/%E7%81%AB%E9%BE%99%E6%9E%9C/","indexes":[26]},"水果":{"path":"/category/%E6%B0%B4%E6%9E%9C/","indexes":[27,26,28,29,30,31]},"草莓":{"path":"/category/%E8%8D%89%E8%8E%93/","indexes":[27]},"蔬菜":{"path":"/category/%E8%94%AC%E8%8F%9C/","indexes":[32]},"介绍":{"path":"/category/%E4%BB%8B%E7%BB%8D/","indexes":[33]},"JMeter":{"path":"/category/jmeter/","indexes":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102]},"苹果":{"path":"/category/%E8%8B%B9%E6%9E%9C/","indexes":[30,31,103,104]},"香蕉":{"path":"/category/%E9%A6%99%E8%95%89/","indexes":[105,106,28,29]},"进阶":{"path":"/category/%E8%BF%9B%E9%98%B6/","indexes":[107]},"基础":{"path":"/category/%E5%9F%BA%E7%A1%80/","indexes":[108]},"项目":{"path":"/category/%E9%A1%B9%E7%9B%AE/","indexes":[109]},"Pytest":{"path":"/category/pytest/","indexes":[110]},"selenium":{"path":"/category/selenium/","indexes":[16,17,19,20]},"元素定位":{"path":"/category/%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D/","indexes":[111]}}}},"tag":{"/":{"path":"/tag/","map":{"禁用":{"path":"/tag/%E7%A6%81%E7%94%A8/","indexes":[2]},"加密":{"path":"/tag/%E5%8A%A0%E5%AF%86/","indexes":[3]},"布局":{"path":"/tag/%E5%B8%83%E5%B1%80/","indexes":[5]},"Markdown":{"path":"/tag/markdown/","indexes":[4]},"页面配置":{"path":"/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/","indexes":[0]},"使用指南":{"path":"/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/","indexes":[0]},"Catalog":{"path":"/tag/catalog/","indexes":[6]},"basic":{"path":"/tag/basic/","indexes":[8]},"study":{"path":"/tag/study/","indexes":[8]},"介绍":{"path":"/tag/%E4%BB%8B%E7%BB%8D/","indexes":[36,38,43,51,54,55,56,61,65,76,84,85,9,21,22,33]},"红":{"path":"/tag/%E7%BA%A2/","indexes":[32,27,26,25,30,31,103,104]},"小":{"path":"/tag/%E5%B0%8F/","indexes":[27,25]},"圆":{"path":"/tag/%E5%9C%86/","indexes":[32,25,30,31,103,104]},"大":{"path":"/tag/%E5%A4%A7/","indexes":[26,30,31,103,104]},"安装":{"path":"/tag/%E5%AE%89%E8%A3%85/","indexes":[82]},"配置":{"path":"/tag/%E9%85%8D%E7%BD%AE/","indexes":[82]},"基础":{"path":"/tag/%E5%9F%BA%E7%A1%80/","indexes":[87,9,10,108]},"hello world":{"path":"/tag/hello-world/","indexes":[83]},"Core":{"path":"/tag/core/","indexes":[34,35,7]},"Component":{"path":"/tag/component/","indexes":[34]},"Parameter":{"path":"/tag/parameter/","indexes":[35]},"指南":{"path":"/tag/%E6%8C%87%E5%8D%97/","indexes":[89,92,94,96]},"script":{"path":"/tag/script/","indexes":[11]},"杂项":{"path":"/tag/%E6%9D%82%E9%A1%B9/","indexes":[12]},"黄":{"path":"/tag/%E9%BB%84/","indexes":[105,106,28,29]},"弯曲的":{"path":"/tag/%E5%BC%AF%E6%9B%B2%E7%9A%84/","indexes":[105,106,28,29]},"长":{"path":"/tag/%E9%95%BF/","indexes":[105,106,28,29]},"进阶":{"path":"/tag/%E8%BF%9B%E9%98%B6/","indexes":[107]},"selenium":{"path":"/tag/selenium/","indexes":[14,15,16,17,18,19,20,22,23,24]},"元素定位":{"path":"/tag/%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D/","indexes":[16,17,18,19,20,23,24,111]},"操作元素":{"path":"/tag/%E6%93%8D%E4%BD%9C%E5%85%83%E7%B4%A0/","indexes":[14]},"项目":{"path":"/tag/%E9%A1%B9%E7%9B%AE/","indexes":[109]},"Pytest":{"path":"/tag/pytest/","indexes":[110]},"pytest":{"path":"/tag/pytest/","indexes":[16,17,19,20]},"base":{"path":"/tag/base/","indexes":[19]},"cmd":{"path":"/tag/cmd/","indexes":[16]},"fixture":{"path":"/tag/fixture/","indexes":[20]},"plugin":{"path":"/tag/plugin/","indexes":[17]},"assert":{"path":"/tag/assert/","indexes":[43,90]},"Assert":{"path":"/tag/assert/","indexes":[42,44,45]},"Duration":{"path":"/tag/duration/","indexes":[42]},"Json":{"path":"/tag/json/","indexes":[44]},"Response":{"path":"/tag/response/","indexes":[45]},"config":{"path":"/tag/config/","indexes":[47,48,51,52,53,78,91]},"counter":{"path":"/tag/counter/","indexes":[46]},"csv":{"path":"/tag/csv/","indexes":[46,47]},"HTTP_Cookie":{"path":"/tag/http-cookie/","indexes":[48]},"samplers":{"path":"/tag/samplers/","indexes":[49,75,77]},"HTTP header":{"path":"/tag/http-header/","indexes":[49]},"Request":{"path":"/tag/request/","indexes":[50]},"Config":{"path":"/tag/config/","indexes":[50]},"Random_Variable":{"path":"/tag/random-variable/","indexes":[52]},"Defined":{"path":"/tag/defined/","indexes":[53]},"controllers":{"path":"/tag/controllers/","indexes":[54,80]},"listeners":{"path":"/tag/listeners/","indexes":[93]},"Listeners":{"path":"/tag/listeners/","indexes":[55]},"processor":{"path":"/tag/processor/","indexes":[56,79,81,95,101,102]},"测试计划":{"path":"/tag/%E6%B5%8B%E8%AF%95%E8%AE%A1%E5%88%92/","indexes":[57,86]},"概述":{"path":"/tag/%E6%A6%82%E8%BF%B0/","indexes":[86]},"详解":{"path":"/tag/%E8%AF%A6%E8%A7%A3/","indexes":[57]},"参数":{"path":"/tag/%E5%8F%82%E6%95%B0/","indexes":[57]},"线程组":{"path":"/tag/%E7%BA%BF%E7%A8%8B%E7%BB%84/","indexes":[97]},"thread":{"path":"/tag/thread/","indexes":[87]},"Thread":{"path":"/tag/thread/","indexes":[58,60,88]},"Concurrency":{"path":"/tag/concurrency/","indexes":[58]},"Threads":{"path":"/tag/threads/","indexes":[59]},"Important":{"path":"/tag/important/","indexes":[59]},"Stepping":{"path":"/tag/stepping/","indexes":[60]},"Ultimate":{"path":"/tag/ultimate/","indexes":[88]},"timers":{"path":"/tag/timers/","indexes":[98]},"Timers":{"path":"/tag/timers/","indexes":[61]},"JSR223":{"path":"/tag/jsr223/","indexes":[36]},"BeanShell":{"path":"/tag/beanshell/","indexes":[13]},"ctx":{"path":"/tag/ctx/","indexes":[37]},"Beanshell":{"path":"/tag/beanshell/","indexes":[37,38,39,40,41]},"prev":{"path":"/tag/prev/","indexes":[39]},"props":{"path":"/tag/props/","indexes":[40]},"vars":{"path":"/tag/vars/","indexes":[41]},"CSS Selector":{"path":"/tag/css-selector/","indexes":[15]},"XPath":{"path":"/tag/xpath/","indexes":[15]},"RelativeLocator":{"path":"/tag/relativelocator/","indexes":[23]},"Logic_Controllers":{"path":"/tag/logic-controllers/","indexes":[99]},"Controller":{"path":"/tag/controller/","indexes":[62,63,64,65,66,67,68,69,70,71,72,73,74]},"Weight":{"path":"/tag/weight/","indexes":[62]},"ForEach":{"path":"/tag/foreach/","indexes":[63]},"if":{"path":"/tag/if/","indexes":[64,67]},"Loop":{"path":"/tag/loop/","indexes":[66]},"Random":{"path":"/tag/random/","indexes":[68]},"Runtime":{"path":"/tag/runtime/","indexes":[69]},"Simple":{"path":"/tag/simple/","indexes":[70]},"Switch":{"path":"/tag/switch/","indexes":[71]},"throughput":{"path":"/tag/throughput/","indexes":[72]},"Transaction":{"path":"/tag/transaction/","indexes":[73]},"while":{"path":"/tag/while/","indexes":[74]},"Samplers":{"path":"/tag/samplers/","indexes":[76,100]},"request":{"path":"/tag/request/","indexes":[75,77]},"hhtp":{"path":"/tag/hhtp/","indexes":[75]},"JDBC":{"path":"/tag/jdbc/","indexes":[77,78]},"post":{"path":"/tag/post/","indexes":[79,101]},"detail":{"path":"/tag/detail/","indexes":[78]},"json":{"path":"/tag/json/","indexes":[79]},"Regular_Extractor":{"path":"/tag/regular-extractor/","indexes":[80]},"front":{"path":"/tag/front/","indexes":[102]},"font":{"path":"/tag/font/","indexes":[81]},"user_parameter":{"path":"/tag/user-parameter/","indexes":[81]}}}}}')},2878:(e,t,i)=>{i.d(t,{P:()=>n});const n={Baidu:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon baidu-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#2319DC"/><path fill="#FFF" d="M320 528c65-14 56-92 54-109-3-26-34-72-76-68-52 4-60 81-60 81-7 35 17 110 82 96m121-131c36 0 65-41 65-92 0-52-29-93-65-93s-65 41-65 93c0 51 29 92 65 92m155 7c48 6 79-46 86-85 6-38-25-84-59-91-35-8-77 46-81 82-5 44 6 87 54 94m191 65c0-19-15-75-73-75-57 0-65 53-65 91 0 35 3 85 75 84 71-2 63-81 63-100m-73 163s-74-57-118-119c-59-92-142-55-170-8s-72 76-78 84-90 53-71 135c18 83 83 81 83 81s49 5 104-7c56-13 104 3 104 3s131 43 166-41c36-84-20-128-20-128"/><path fill="#2319DC" d="M453 552v56h-45s-46 3-61 54c-6 35 4 55 6 59s17 29 53 37h85V553zm-1 172h-34s-24-1-31-29c-4-12 0-26 2-31 2-6 10-19 26-23h37zm60-111v107s2 27 39 37h98V613h-42v108h-40s-13-2-16-12v-97z"/></svg>',BiliBili:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon bilibili-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1296db"/><path fill="#fff" d="M745.363 177.725a47 47 0 0 1 0 66.3L702.5 286.85h44A141 141 0 0 1 887 427.512v281.25a141 141 0 0 1-141 140.626H277.25A141 141 0 0 1 137 708.763v-281.25a141 141 0 0 1 141-141h43.725l-42.788-42.825a47 47 0 1 1 66.263-66.3l99.45 99.45c2.963 2.962 5.438 6.187 7.425 9.637h120.487c1.988-3.45 4.5-6.75 7.463-9.675l99.413-99.45a47 47 0 0 1 66.3 0zm1.012 203.25h-468.75a47 47 0 0 0-46.763 43.388l-.112 3.525v281.25c0 24.712 19.125 44.962 43.387 46.724l3.488.15h468.75a47 47 0 0 0 46.763-43.387l.112-3.487v-281.25c0-26-21-47-47-46.876zm-375 93.75c26 0 47 21 47 47v47a47 47 0 1 1-93.75 0V521.6c0-26 21-47 47-47zm281.25 0c26 0 47 21 47 47v47a47 47 0 1 1-93.75 0V521.6c0-26 21-47 47-47z"/></svg>',Bitbucket:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon bitbucket-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#205081"/><path fill="#fff" d="M512 191.32v.01-.01c-152.76 0-277.805 41.114-277.805 92.166 0 13.443 33.353 206.247 46.577 282.708 5.932 34.285 94.508 84.563 231.126 84.563l.102-.407v.407c137.484 0 225.26-50.278 231.192-84.578 13.23-76.457 46.592-269 46.592-282.698.005-51.047-125-92.165-277.784-92.165zm0 397.493c-48.771 0-88.31-39.545-88.31-88.31 0-48.772 39.539-88.306 88.31-88.306s88.31 39.534 88.31 88.31c0 48.766-39.539 88.306-88.31 88.306zm-.05-276.842c-98.256-.153-177.885-17.232-177.855-38.14.036-20.912 79.72-37.731 177.976-37.568 98.256.153 177.884 17.22 177.849 38.139 0 20.908-79.705 37.716-177.966 37.564z"/><path fill="#fff" d="M711.668 642.814c-4.227 0-7.608 2.994-7.608 2.994S635.65 699.987 512 699.987s-192.06-54.18-192.06-54.18-3.386-2.988-7.608-2.988c-5.04 0-9.827 3.391-9.827 10.871 0 .79.076 1.579.224 2.353 10.617 56.826 18.382 97.206 19.736 103.347 9.268 41.805 91.045 73.411 189.525 73.411 98.49 0 180.267-31.606 189.535-73.411 1.364-6.136 9.114-46.49 19.736-103.317.143-.779.224-1.578.224-2.368 0-7.485-4.786-10.881-9.827-10.881zM467.659 500.477a44 44 0 1 0 88.51 0 44 44 0 1 0-88.51 0z"/></svg>',Dingding:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon dingding-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1C9DF7"/><path fill="#fff" d="M760.551 442c0 5-5 13-7.767 20.713-23.302 49.192-82.85 145-82.85 145l-18.124 31.069h85.44L576.727 853.758l36.247-145h-67.316l23.302-95.796c-18.124 5-41.426 10-67.316 18.124 0 0-36.247 20.712-101-38.837 0 0-44.015-38.836-18.124-49.192 10-5 54.37-10 88.029-13 44.014-5.179 72.494-10 72.494-10s-139.81 2.59-173.468-2.589c-33.658-5-75.083-59.549-82.85-108.741 0 0-12.946-25.89 28.48-13 44.013 13 222.66 49.192 222.66 49.192s-235.606-72.494-251.14-90.618c-15.535-18.123-46.604-95.796-41.426-145 0 0 2.59-13 13-7.767 0 0 173.469 80.261 292.566 121.686 119 41.426 222.66 64.727 209.715 119z"/></svg>',Discord:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon discord-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#2DAAE1"/><path fill="#fff" d="m422.935 240.147 5.851 8.052c-113.039 34.253-165.649 84.585-165.649 84.585s13.645-8.052 37.024-18.123c66.28-30.215 118.865-38.267 142.244-40.286 3.91 0 7.819-1.994 9.76-1.994 38.966-6.058 81.816-6.058 126.658-2.02 58.462 8.053 122.749 24.157 187.061 62.423 0 0-48.7-48.338-155.862-82.566l7.767-10.071h1.968c13.308.233 91.757 4.246 173.416 68.481 0 0 89.634 169.144 89.634 376.555 1.942-2.02-50.668 92.637-189.003 96.65 0 0-23.405-28.194-40.933-52.35 81.84-24.157 113.013-76.534 113.013-76.534a313.796 313.796 0 0 1-72.106 38.267c-31.172 14.11-60.403 22.162-89.633 28.22-60.404 12.066-114.955 8.027-161.74 0a636.81 636.81 0 0 1-91.576-28.22c-13.644-6.033-29.23-12.065-44.817-22.137-1.941-2.02-3.883-2.02-5.85-4.039-1.943 0-1.943-2.02-1.943-2.02-11.702-6.032-17.528-10.07-17.528-10.07s29.23 52.376 109.104 76.532c-19.47 24.157-40.907 54.371-40.907 54.371-138.36-4.039-190.97-98.67-190.97-98.67 0-207.41 89.633-376.555 89.633-376.555 89.634-70.5 175.384-68.481 175.384-68.481zm213.961 233.017c-35.315 0-65 34.512-65 78s29.412 78 65 78 65-34.512 65-78-29.412-78-65-78zm-233.016 0c-35.315 0-65 34.512-65 78s29.412 78 65 78 64.726-34.512 64.726-78-29.411-78-64.726-78z"/></svg>',Dribbble:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon dribbble-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#DC4373"/><path fill="#C13366" d="M716.668 302.752c-13.332 5.154-28.61 3.676-35.726-1.068-86.196-48.27-179.286-62.06-265.482-37.926C292.074 300.212 241.674 437.028 242 564.746c22.622 42.136 52.558 105.234 61.854 153.104l298.24 298.246c210.532-37.376 376.584-203.408 413.986-413.928L716.668 302.752z"/><path fill="#F0F1F1" d="M511.994 219.308c-161.592 0-293.058 131.31-293.058 292.696s131.466 292.684 293.058 292.684c161.598 0 293.07-131.292 293.07-292.684 0-161.386-131.472-292.696-293.07-292.696zm192.842 138.148c33.43 41.432 53.744 93.756 54.682 150.772-11.122-2.282-58.23-11.068-114.526-11.068-18.164 0-37.282.91-56.448 3.278a822.854 822.854 0 0 0-4.938-11.812c-4.972-11.692-10.326-23.29-15.874-34.72 86.642-35.696 128.436-85.238 137.104-96.45zm-192.842-92.33c62.446 0 119.528 23.2 163.126 61.412-6.902 9.416-44.332 56.202-127.876 87.768-38.67-70.688-80.996-129.22-91.07-142.812a247.13 247.13 0 0 1 55.82-6.368zm-106.352 23.99c8.536 11.758 50.928 70.918 90.592 141.036-106.448 27.982-200.976 29.806-223.79 29.806h-2.424c16.39-75.534 67.424-138.298 135.622-170.842zM264.402 512.39c0-2.038.034-4.076.1-6.102 1.48.018 3.666.018 6.5.018 30.726 0 137.382-2.538 247.288-35.154a828.402 828.402 0 0 1 18.928 39.526 232.24 232.24 0 0 0-8.234 2.482C405.236 553.126 337.216 658.936 326.75 676.232c-38.778-43.696-62.348-101.058-62.348-163.842zm247.592 247.246c-56.786 0-109.192-19.232-151.01-51.48 7.074-13.868 58.412-106.3 194.026-153.5a1.806 1.806 0 0 1 .272-.09c34.006 88.53 48.408 162.834 52.358 185.862-29.432 12.374-61.752 19.208-95.646 19.208zm140.236-43.584c-3.32-19.052-16.66-88.688-47.452-173.618 17.27-2.686 34.072-3.748 49.828-3.748 51.748 0 92.23 11.33 101.634 14.204-11.182 67.444-49.794 125.808-104.01 163.162z"/><path fill="#D1D1D1" d="M511.994 219.308c-.382 0-.758.028-1.142.028v45.804c.38 0 .758-.018 1.142-.018 62.446 0 119.528 23.2 163.126 61.412-6.902 9.416-44.332 56.202-127.876 87.768-12.14-22.194-24.642-43.188-36.392-61.968V473.29c2.476-.706 4.954-1.41 7.434-2.144a828.402 828.402 0 0 1 18.928 39.526c-2.776.796-5.514 1.592-8.234 2.478a323.314 323.314 0 0 0-18.128 6.52v53.228a418.976 418.976 0 0 1 44.428-18.332c34.006 88.53 48.408 162.834 52.358 185.862-29.428 12.374-61.746 19.208-95.646 19.208-.382 0-.758-.024-1.142-.024v45.05c.382 0 .758.028 1.142.028 161.598 0 293.07-131.292 293.07-292.684.002-161.388-131.47-292.698-293.068-292.698zm71.614 269.316c-4.972-11.692-10.326-23.29-15.874-34.72 86.64-35.696 128.434-85.236 137.102-96.45 33.43 41.432 53.748 93.756 54.682 150.77-11.122-2.282-58.23-11.068-114.522-11.068-18.164 0-37.282.914-56.448 3.278-1.624-3.932-3.24-7.852-4.94-11.81zm68.622 227.428c-3.32-19.052-16.66-88.688-47.452-173.618 17.27-2.686 34.072-3.748 49.828-3.748 51.748 0 92.23 11.33 101.634 14.204-11.182 67.444-49.794 125.808-104.01 163.162z"/></svg>',Email:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>',Evernote:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon evernote-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#14cc45"/><path fill="#595757" d="M347.671 193.259v87.51h-87.51z"/><path fill="#595757" d="M788.047 323.645s3.65-77.491-73.84-103.02c0 0-89.479-12.867-151.41-11.91 0 0-8.595-53.23-103.33-53.23 0 0-89.556-1.244-89.892 70.526v61.671s2.848 14.991-27.833 14.991h-81.581s-34.28 5.282-34.28 72.934c0 0 3.133 120.082 41.322 200.24 0 0 9.398 34.667 58.228 46.577 0 0 95.822 25.477 123.991 21.722 0 0 58.228 22.137 62.008-111.874 0 0 3.755-19.935 6.266 11.392 0 0-1.89 68.948 57.607 72.702 0 0 45.723 12.557 73.892 10.045 0 0 37.568 2.15 37.568 64.158 0 0 13.152 71.665-34.435 71.665h-65.763s-18.149 4.428-18.149-21.877c0 0-4.997-21.878 26.305-21.878h15.534v-43.756h-43.082s-66.332-6.317-66.332 50.047v75.135s9.347 49.866 66.332 49.866h121.273s48.441.44 76.61-90.359c0-.078 48.52-182.323 22.991-435.767zM625.272 486.523c0-21.877 18.02-51.16 39.432-51.16s36.48 36.118 36.48 58.022c-28.79-7.897-45.827-9.606-75.912-6.862z"/></svg>',Facebook:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon facebook-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#3c599b"/><path fill="#fff" d="M353.357 400.378h68.151v-66.235c0-29.206.737-74.247 21.952-102.142 22.348-29.542 53.026-49.622 105.794-49.622 85.976 0 122.18 12.263 122.18 12.263L654.4 295.61s-28.407-8.213-54.903-8.213c-26.512 0-50.243 9.5-50.243 35.995v76.988h108.687L650.352 499H549.254v342.602H421.508V499h-68.15v-98.622z"/></svg>',Flipboard:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon flipboard-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#e12828"/><path fill="#fff" d="M263.487 261.893H445.92V809.17H263.487V261.893z"/><path fill="#fce9e9" d="M445.92 261.893h364.842v182.435H445.92V261.893z"/><path fill="#f6bebe" d="M445.92 444.328h182.435v182.435H445.92V444.328z"/></svg>',Gitee:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon gitee-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#C71D23"/><path fill="#fff" d="M772.953 454.723H480.17v.006a25.46 25.46 0 0 0-25.46 25.453l-.025 63.649a25.46 25.46 0 0 0 25.46 25.466l178.242-.007a25.46 25.46 0 0 1 25.459 25.46v12.73c0 42.18-34.198 76.378-76.378 76.378H365.583a25.46 25.46 0 0 1-25.46-25.46V416.533h-.006c0-42.18 34.192-76.378 76.378-76.378h356.388v-.013a25.46 25.46 0 0 0 25.46-25.446l.057-63.65h.013a25.46 25.46 0 0 0-25.46-25.471l-356.432.012c-105.453 0-190.946 85.493-190.946 190.946v356.433a25.46 25.46 0 0 0 25.46 25.46H626.56c94.913 0 171.852-76.94 171.852-171.852V480.182a25.46 25.46 0 0 0-25.46-25.46z"/></svg>',GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Gitlab:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon gitlab-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#E8F0FF"/><path fill="#E24329" d="m512 808 110-340H402z"/><path fill="#FC6D26" d="M512 808 402 468H247z"/><path fill="#E24329" d="M247 468h155l-67-204c-4-11-19-11-22 0z"/><path fill="#FC6D26" d="m512 808 110-340h156z"/><path fill="#FCA326" d="m778 468 33 104c3 10-1 19-9 25L512 808z"/><path fill="#E24329" d="M778 468H622l68-204c3-11 18-11 21 0z"/><path fill="#FCA326" d="M512 808 222 597c-8-5-12-16-9-25l34-104z"/></svg>',Gmail:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon gmail-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#DB4437"/><path fill="#E67C73" d="M277.48 285.567h465.767v441.362H277.48V285.567z"/><path fill="#FFF" d="M282.543 285.567h-10.645c-25.962 0-47.122 21.808-47.122 48.705v343.952c0 26.897 21.08 48.705 47.122 48.705h24.976V407.954l213.49 169.95 213.489-169.95V726.93h24.975c26.04 0 47.123-21.809 47.123-48.705V334.272c0-26.897-21.134-48.705-47.123-48.705h-10.644L510.364 480.44 282.542 285.567z"/></svg>',Instagram:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon instagram-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#181818"/><path fill="#fff" d="M512 348.16c-88.222 0-163.84 71.417-163.84 163.84 0 88.222 71.417 163.84 163.84 163.84 88.222 0 163.84-71.417 163.84-163.84 0-88.222-75.618-163.84-163.84-163.84zm0 268.866c-58.814 0-105.026-46.212-105.026-105.026S453.186 406.974 512 406.974 617 453.186 617 512s-46.186 105-105 105zM680.041 306.15c-21 0-37.81 16.804-37.81 37.809s16.805 37.81 37.81 37.81 37.81-16.805 37.81-37.81-16.805-37.81-37.81-37.81z"/><path fill="#FFF" d="M659.036 196.923h-16.804c-50.413-4.2-210.051-4.2-260.464 0-96.623-4.2-180.644 71.418-184.845 168.041v16.804c-4.2 50.413-4.2 210.051 0 260.464-4.2 96.623 71.418 180.644 168.041 184.845h16.804c50.413 4.2 210.051 4.2 260.464 0 96.623 4.2 180.644-71.418 184.845-168.041V381.768c4.2-96.623-71.418-180.644-168.041-184.845zM759.86 696.845c-12.604 29.407-33.609 50.412-58.815 58.814-121.83 16.805-247.86 16.805-373.891 0-29.407-12.603-50.412-33.608-58.814-58.814-12.604-63.015-16.805-126-12.604-184.845-4.2-63.015 0-126 12.604-184.845 12.603-29.407 33.608-50.412 58.814-58.814 121.83-16.805 247.86-16.805 373.891 0 29.407 12.603 50.412 33.608 58.815 58.814 12.603 63.015 16.804 126 12.603 184.845 4.2 63.015 0 126-12.603 184.845z"/></svg>',Lark:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon lark-icon" viewBox="0 0 700 700"><path fill="#fdfdfd" d="M0 350C0 156.7 156.7 0 350 0s350 156.7 350 350-156.7 350-350 350S0 543.3 0 350Z"/><path fill="#326ffd" d="M94.683 255.472c-1.188.99-3.547 1.424-3.565 2.971-.892 77.877-1.647 155.803.853 233.645.135 4.185 3.811 7.709 6.987 10.437 8.041 6.906 16.845 13.026 26.179 18.048 15.915 8.564 32.118 16.959 49.299 22.567 22.582 7.37 45.902 12.712 69.402 16.176 16.45 2.425 33.243 1.892 49.863 1.404 85.699-2.518 170.495-42.242 226.974-107.047 13.128-15.062 24.349-31.701 35.801-48.072.482-.689-.29-1.655-.435-2.483-11.645 12.501-23.322 25.66-38.015 34.376-38.027 22.561-80.103 18.178-120.414 4.963-24.658-8.083-49.594-15.711-73.208-26.468-32.043-14.597-63.264-31.14-93.363-49.411-50.119-30.424-92.859-71.794-136.358-111.106Z"/><path fill="#00d5b8" d="M373.34 355.289c22.389-21.264 43.857-43.542 67.167-63.793 15.84-13.761 40.614-23.584 58.792-32.162-13.932-44.24-30.142-84.389-60.513-120.46-3.54-4.204-7.91-9.366-13.399-9.603-81.245-3.519-162.641-2.296-243.958-1.541-1.72.016-3.262 2.127-3.451 3.836-.209 1.893 1.026 3.902 2.457 5.159 21.134 18.566 43.735 35.416 64.865 53.985 52.859 46.45 91.839 105.023 128.04 164.579Z"/><path fill="#133c99" d="M302.636 406.089c63.531 28.909 161.471 77.441 225.923 24.345 10.473-8.628 22.415-16.393 29.694-27.844 19.077-30.011 31.761-63.645 48.432-95.056 8.019-15.112 17.249-23.738 28.765-36.905-17.982-10.513-43.141-16.899-63.455-18.431-44.467-3.354-94.982 6.952-129.899 36.91-29.717 25.495-55.957 54.804-84.849 81.23-16.051 14.681-36.135 24.874-54.611 35.751Z"/></svg>',Lines:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon lines-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#00C300"/><path fill="#fff" d="M861.44 469.76C861.44 313.28 704 186.08 512 186.08s-349.44 127.2-349.44 283.68C162.56 608 287 727.52 455 752c11.52 2.4 27 7.68 30.72 17.28a71.04 71.04 0 0 1 0 31.68l-5.28 29.76c0 8.64-7.2 34.56 30.24 19a1104 1104 0 0 0 274.56-202.56 251.52 251.52 0 0 0 75-175zM375.2 562.88h-69.12a17.76 17.76 0 0 1-18-18v-139.2a17.76 17.76 0 0 1 18-18 18 18 0 0 1 18 18v120.48h51a19 19 0 0 1 18 19 18 18 0 0 1-18 18zm72-18a18 18 0 1 1-36.48 0v-139.2a18 18 0 0 1 36.48 0zm167.04 0a18 18 0 0 1-12.48 17.28H596a18 18 0 0 1-14.4-7.2l-69.6-96v85.92a18 18 0 1 1-36.48 0v-139.2A18 18 0 0 1 488 388.16h5.76a18 18 0 0 1 14.4 7.2l71.52 96v-85.92a18 18 0 1 1 36.48 0zm112.32-87.84a18 18 0 0 1 18 18 17.76 17.76 0 0 1-18 18h-51v32.64h51a19 19 0 0 1 18 19 18 18 0 0 1-18 18H656a18 18 0 0 1-18-18v-139.2a18 18 0 0 1 18-18.28h69.12a18 18 0 0 1 18 18 18 18 0 0 1-18 19h-49.44v32.64zm0 0"/></svg>',Linkedin:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon linkedin-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#4376B1"/><path fill="#F1F2F2" d="M838.301 555.94v225.157h-130.54V571.03c0-52.746-18.847-88.766-66.112-88.766-36.069 0-57.496 24.25-66.959 47.732-3.436 8.391-4.322 20.045-4.322 31.814v219.277h-130.55s1.752-355.784 0-392.613h130.56v55.637c-.263.438-.633.867-.867 1.285h.866v-1.285c17.349-26.694 48.287-64.856 117.651-64.856 85.884 0 150.273 56.114 150.273 176.685zm-535.05-356.72c-44.655 0-73.87 29.314-73.87 67.826 0 37.695 28.368 67.855 72.157 67.855h.847c45.532 0 73.842-30.16 73.842-67.855-.866-38.512-28.31-67.825-72.975-67.825zM237.14 781.098h130.5V388.474h-130.5v392.623z"/></svg>',Pinterest:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon pinterest-icon" viewBox="0 0 1024 1024"><path fill="#fff" d="M512 1023.147c282.773 0 512-228.288 512-509.888 0-281.622-229.227-509.91-512-509.91S0 231.637 0 513.26c0 281.6 229.227 509.888 512 509.888z"/><path fill="#CA242D" d="M512 3.35C229.248 3.35 0 231.658 0 513.258c0 216.128 134.848 400.789 325.312 475.05-4.63-40.277-8.427-102.378 1.685-146.453 9.28-39.872 59.84-253.483 59.84-253.483s-15.168-30.634-15.168-75.541c0-70.933 41.302-123.797 92.715-123.797 43.819 0 64.896 32.725 64.896 71.765 0 43.627-27.819 109.099-42.56 169.963-12.224 50.773 25.707 92.33 75.84 92.33 91.03 0 160.981-95.68 160.981-233.344 0-122.133-88.064-207.317-214.058-207.317-145.814 0-231.36 108.693-231.36 221.163 0 43.648 16.853 90.645 37.93 116.245a15.19 15.19 0 0 1 3.371 14.699c-3.797 15.936-12.65 50.773-14.336 57.92-2.09 9.216-7.573 11.328-17.28 6.698-64.043-29.781-104.085-122.538-104.085-197.653 0-160.747 117.162-308.459 338.389-308.459 177.408 0 315.627 125.888 315.627 294.614 0 175.829-111.254 317.269-265.472 317.269-51.84 0-100.715-26.859-117.163-58.752l-32.021 121.28c-11.371 44.48-42.56 99.883-63.638 133.867A516.01 516.01 0 0 0 511.168 1024c282.752 0 512-228.31 512-509.91C1024 231.66 794.752 3.35 512 3.35z"/></svg>',Pocket:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon pocket-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#EE4056"/><path fill="#fff" d="M716.52 309.066c12.549 0 23.172 4.394 31.87 13.182 8.697 8.788 13.023 19.48 13.023 32.006v150.4c0 33.975-6.568 66.41-19.705 97.307-13.138 30.918-30.76 57.487-52.89 79.685-22.106 22.197-48.562 39.864-79.367 52.888-30.804 13.024-63.081 19.547-96.876 19.547a246.897 246.897 0 0 1-97.215-19.547c-30.805-13.046-57.306-30.668-79.504-52.888-22.198-22.198-39.865-48.767-53.003-79.663a246.311 246.311 0 0 1-19.728-97.33V354.255c0-12.321 4.44-22.945 13.319-31.847a43.489 43.489 0 0 1 31.87-13.341H716.52zM512.574 617.339c9.06 0 16.989-3.216 23.738-9.581l117.103-112.415a32.622 32.622 0 0 0 10.691-24.62c0-9.469-3.33-17.533-9.966-24.191a32.958 32.958 0 0 0-24.237-10.012c-9.06 0-16.988 3.171-23.737 9.56l-93.547 89.808-93.614-89.809a33.185 33.185 0 0 0-23.443-9.559c-9.468 0-17.532 3.33-24.19 9.967-6.66 6.682-9.967 14.722-9.967 24.236 0 9.83 3.443 18.03 10.419 24.599l117.33 112.413c6.342 6.342 14.179 9.56 23.466 9.56l-.046.044z"/></svg>',QQ:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon qq-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#5eaade"/><path fill="#fff" d="M805.25 585.542c-15-48.188-32.25-88.688-58.781-154.97 4.125-174.093-68.25-314.905-234.938-314.905-168.562 0-239.344 143.625-234.844 314.906-26.625 66.375-43.78 106.594-58.78 154.969-31.876 102.656-21.563 145.125-13.688 146.062 16.875 2.063 65.718-77.25 65.718-77.25 0 45.938 23.625 105.844 74.813 149.063-24.75 7.593-80.344 28.03-67.125 50.437 10.688 18.094 183.938 11.531 233.906 5.906 49.969 5.625 223.219 12.188 233.906-5.906 13.22-22.312-42.468-42.844-67.125-50.437 51.188-43.313 74.813-103.22 74.813-149.063 0 0 48.844 79.313 65.719 77.25 7.969-1.031 18.281-43.5-13.594-146.062z"/></svg>',Qzone:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon qzone-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#0985DD"/><path fill="#fff" d="M722.38 595.24c22.486-4.056 11.345-12.424 2.156-11.346-16.685 1.72-40.43 1.925-66.562 1.284l3.029 17.79a656.641 656.641 0 0 0 61.402-7.702l-.025-.026zm68.95-174.915a5.287 5.287 0 0 0-4.493-3.645L598.42 389.29l-84.326-170.628c-1.925-3.594-7.958-3.594-9.857 0L419.885 389.29l-188.417 27.39a5.338 5.338 0 0 0-4.466 3.645 5.493 5.493 0 0 0 1.488 5.57l136.36 132.92-32.088 187.519a5.263 5.263 0 0 0 2.13 5.39c1.695 1.284 3.851 1.463 5.776.385l168.651-88.407 168.524 88.638 2.567.642 3.209-1.079c1.72-1.283 2.566-3.208 2.13-5.34l-24.591-143.648c-27.21 2.156-54.37 3.183-76.42 3.183-77.267 0-135.075-3.645-135.948-3.645a16.48 16.48 0 0 1-14.785-11.757 16.247 16.247 0 0 1 5.981-17.764l155.431-113.05c-99.959-7.906-183.873-6.418-184.721-6.418-13.502.642-25.67-3.645.642-14.375 4.518-1.694 109.2-23.72 230.362-7.445 6.673.847 12.013 5.75 13.733 12.194a16.61 16.61 0 0 1-6.263 17.302L497.204 571.598c27.826 5.802 100.37 12.014 160.745 13.502l-4.519-26.312 136.308-132.97a5.338 5.338 0 0 0 1.54-5.544l.051.051z"/></svg>',Reddit:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon reddit-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#ff4501"/><path fill="#fff" d="M617.199 680.55c5.666 5.974 5.666 11.742 0 17.34-21.845 23.143-56.9 34.714-105.199 34.714s-83.354-11.571-105.199-34.714c-5.666-5.598-5.666-11.366 0-17.34a10.445 10.445 0 0 1 7.919-3.379c3.174 0 5.803 1.127 7.919 3.38 16.93 18.295 46.728 27.408 89.361 27.408 42.325 0 72.09-9.113 89.361-27.409a10.445 10.445 0 0 1 7.919-3.379c3.174 0 5.803 1.127 7.919 3.38zm-176.06-136.635c9.182 9.694 13.756 21.47 13.756 35.294 0 13.79-4.574 25.565-13.756 35.26a44.134 44.134 0 0 1-33.28 14.54c-13.073 0-24.234-4.847-33.587-14.54a49.015 49.015 0 0 1-13.995-35.26c0-14.2 4.642-26.147 13.995-35.84 9.353-9.728 20.514-14.575 33.587-14.575 13.04 0 24.132 5.051 33.28 15.12zm222.584 35.294c0 13.79-4.642 25.565-13.995 35.26a44.954 44.954 0 0 1-33.587 14.54c-13.04 0-24.132-4.847-33.28-14.54a49.493 49.493 0 0 1-13.756-35.26c0-13.824 4.574-25.669 13.756-35.567 9.148-9.9 20.24-14.848 33.28-14.848 13.073 0 24.234 4.847 33.587 14.575 9.353 9.693 13.995 21.64 13.995 35.84zM796.433 512c0-18.295-6.144-33.963-18.5-47.036a59.494 59.494 0 0 0-44.92-19.592c-17.647 0-32.768 6.724-45.465 20.138-45.841-33.587-100.66-51.507-164.455-53.725l33.314-158.482 105.746 25.19c0 13.825 4.573 25.6 13.755 35.295 9.148 9.694 20.241 14.54 33.314 14.54 13.04 0 24.235-4.915 33.553-14.813 9.353-9.899 13.995-21.743 13.995-35.567s-4.642-25.669-13.995-35.567a44.578 44.578 0 0 0-33.553-14.814c-19.046 0-33.143 9.318-42.325 27.99L550.06 228.112c-6.69-1.877-11.094 1.126-13.21 8.977l-36.488 174.695c-63.454 2.594-117.897 20.718-163.363 54.272a59.187 59.187 0 0 0-46.011-20.685c-17.613 0-32.598 6.52-44.92 19.592a66.082 66.082 0 0 0-18.5 47.036c0 13.073 3.243 25.02 9.762 35.84 6.52 10.82 15.258 19.046 26.18 24.644a152.303 152.303 0 0 0-3.174 31.335c0 53.009 24.678 98.372 74.035 136.09 49.323 37.682 108.715 56.524 178.176 56.524 69.769 0 129.365-18.842 178.688-56.525 49.357-37.717 74.001-83.08 74.001-136.09 0-11.946-1.229-22.561-3.686-31.914 10.581-5.598 19.046-13.722 25.395-24.337 6.315-10.65 9.49-22.528 9.49-35.567z"/></svg>',Rss:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon rss-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#FD9B00"/><path fill="#fff" d="M687.981 740.39c0-225.92-183.617-409.777-409.21-409.777v-97.205c279.353 0 506.617 227.506 506.617 506.98H687.98zm-74.841 0h-97.538c0-63.567-24.688-123.245-69.43-167.993-44.762-44.856-104.24-69.556-167.54-69.556v-97.176c184.44 0 334.508 150.046 334.508 334.725zM346.038 605.166c37.35 0 67.514 30.357 67.514 67.39 0 37.146-30.163 67.177-67.514 67.177-37.219 0-67.458-30.03-67.458-67.176 0-37.034 30.24-67.391 67.458-67.391z"/></svg>',Steam:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon steam-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="488" fill="#fff"/><path fill="#13227a" d="M1008 512c0 274-222.4 496-496.8 496-227.6 0-419.2-152.6-478-360.8l190.4 78.6c12.8 64.2 69.8 112.8 137.8 112.8 78.4 0 143.8-64.8 140.4-147l169-120.4c104.2 2.6 191.6-81.8 191.6-187 0-103.2-84-187-187.4-187s-187.4 84-187.4 187v2.4L369.2 558c-31-1.8-61.4 6.8-87 24.2L16 472.2C36.4 216.8 250.2 16 511.2 16 785.6 16 1008 238 1008 512zM327.4 768.6l-61-25.2a105.58 105.58 0 0 0 54.4 51.6c53.8 22.4 115.6-3.2 138-56.8 10.8-26 11-54.6.2-80.6-10.8-26-31-46.4-57-57.2-25.8-10.8-53.4-10.4-77.8-1.2l63 26c39.6 16.4 58.4 61.8 41.8 101.4-16.6 39.8-62 58.4-101.6 42zM675 508.8c-68.8 0-124.8-56-124.8-124.6s56-124.6 124.8-124.6 124.8 56 124.8 124.6S744 508.8 675 508.8zm.2-31.2c51.8 0 93.8-42 93.8-93.6 0-51.8-42-93.6-93.8-93.6s-93.8 42-93.8 93.6c.2 51.6 42.2 93.6 93.8 93.6z"/></svg>',Twitter:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon twitter-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512"/><path fill="#FFF" d="m560 473 186-216h-44L540 445 411 257H262l195 284-195 226h44l171-198 136 198h149zM322 290h68l312 445h-68z"/></svg>',Wechat:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon wechat-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#2AAE67"/><path fill="#FFF" d="M501 417c-14 0-25-12-25-26s11-26 25-26 26 12 26 26-12 26-26 26m-144 0c-15 0-26-12-26-26s11-26 26-26 25 12 25 26-11 26-25 26m72-150c-120 0-217 82-217 183 0 55 29 104 75 138a15 15 0 0 1 6 11l-1 5-9 37-2 5c0 4 4 8 8 8l4-2 47-27c4-3 8-4 12-4l6 1a255 255 0 0 0 83 10c-5-14-7-29-7-45 0-92 88-166 197-166h9c-16-87-103-154-211-154"/><path fill="#FFF" d="M692 561c-13 0-23-10-23-23 0-12 10-22 23-22 12 0 22 10 22 22 0 13-10 23-22 23m-121 0c-12 0-23-10-23-23 0-12 11-22 23-22s23 10 23 22c0 13-11 23-23 23m179 141c38-28 62-69 62-115 0-84-81-152-181-152s-180 68-180 152 80 152 180 152a212 212 0 0 0 65-9l9 3 40 23 3 1a6 6 0 0 0 6-6l-1-5-8-30v-4c0-4 2-8 5-10"/></svg>',Weibo:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon weibo-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#D52C2B"/><path fill="#D52C2B" d="M256 601c0 68 91 124 203 124 113 0 203-56 203-124s-90-123-203-123c-112 0-203 55-203 123"/><path fill="#FFF" d="M464 715c-99 9-185-35-191-98-7-64 68-123 168-133 99-10 185 34 191 98 7 64-69 123-168 133m199-212c-9-2-15-4-10-15 9-23 10-44 0-58-19-27-73-26-134-1 0 0-19 8-14-7 9-29 8-54-7-68-33-33-121 1-196 75-57 55-90 114-90 165 0 97 127 156 252 156 163 0 271-93 271-167 0-44-38-69-72-80m108-177c-39-43-98-59-151-48-13 3-20 14-18 27 3 12 15 19 27 17 39-8 80 3 108 34 27 29 36 70 24 108a22 22 0 0 0 14 28c12 4 25-3 29-14 18-53 5-112-33-152"/><path fill="#FFF" d="M711 379a78 78 0 0 0-74-23c-11 2-17 12-15 22v1c2 10 12 17 23 15a38 38 0 0 1 36 11c10 10 12 24 8 36a19 19 0 0 0 13 25c10 3 21-3 25-13a74 74 0 0 0-16-74M470 599c-4 6-12 9-18 6-6-2-7-8-4-14s11-9 17-6c6 2 8 8 5 14m-32 40a38 38 0 0 1-46 15c-15-7-20-25-10-39 10-15 29-21 45-15 15 7 20 24 11 39m36-106c-47-12-101 11-121 52-21 41-1 87 47 102 49 16 108-8 128-53 20-44-5-89-54-101"/></svg>',Whatsapp:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon whatsapp-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#31B84C"/><path fill="#fff" d="m192.021 832 45.227-164.33a315.413 315.413 0 0 1-42.539-158.529C194.731 334.251 337.707 192 513.344 192c84.587-.213 165.76 33.28 225.387 93.013A314.453 314.453 0 0 1 832 509.376c-.085 174.848-143.04 317.141-318.656 317.141h-.15a319.61 319.61 0 0 1-152.277-38.613L192 832h.021zm241.686-455.467c-6.443-15.445-13.014-13.354-17.92-13.61-4.63-.214-9.942-.256-15.254-.256a29.227 29.227 0 0 0-21.226 9.898c-7.296 7.958-27.84 27.136-27.84 66.134s28.501 76.672 32.49 81.962c3.968 5.291 56.15 85.334 136 119.638 19.008 8.17 33.814 13.056 45.398 16.704 19.072 6.037 36.437 5.184 50.133 3.157 15.296-2.283 47.125-19.2 53.76-37.675 6.613-18.56 6.613-34.389 4.65-37.717-1.983-3.264-7.295-5.27-15.274-9.237-7.957-3.947-47.125-23.126-54.4-25.771-7.296-2.667-12.587-3.968-17.92 3.947-5.312 7.936-20.565 25.792-25.195 31.061-4.65 5.312-9.301 5.973-17.258 2.005-7.979-3.968-33.622-12.33-64-39.338-23.68-20.992-39.68-46.955-44.331-54.912-4.65-7.915-.47-12.203 3.52-16.15 3.563-3.541 7.936-9.258 11.904-13.866 3.99-4.651 5.333-7.958 7.979-13.227 2.645-5.29 1.322-9.92-.64-13.888-2.006-3.968-17.92-42.987-24.555-58.859h-.021z"/></svg>',Youtube:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon youtube-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#DD1829"/><path fill="#fff" d="M800.305 372.2c-12.805-42.429-22.873-65.942-65.303-71.064 0 0-113.644-5.761-226.64-5.761-111.716 0-222.797 5.761-222.797 5.761-44.992 5.122-55.7 29.915-67.223 71.065 0 0-11.524 65.527-11.524 131.886 0 68.066 11.524 137.008 11.524 137.008 8.963 39.87 27.354 65.943 67.223 71.065 0 0 123.292 7.682 240.724 7.682 106.78 0 208.714-7.682 208.714-7.682 39.87-7.682 53.78-28.635 65.303-71.065 0 0 11.523-63.022 11.523-128.045 0-69.288-11.524-140.85-11.524-140.85zM448.82 619.97V393.33l174.781 113.32L448.82 619.97z"/></svg>',Zhihu:'<svg xmlns="http://www.w3.org/2000/svg" class="vp-social-media-icon zhihu-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#006CE2"/><path fill="#fff" d="M513.65 491.261H411.551c1.615-16.154 5.815-60.095 5.815-84.973 0-24.88-.323-60.742-.323-60.742h102.744V329.39c0-21.647-9.37-31.34-17.124-31.34h-178.67s5.169-17.77 10.015-36.186c4.846-18.417 15.832-44.264 15.832-44.264-63.003 4.2-67.958 50.941-81.743 92.729-13.787 41.785-24.556 62.356-44.586 107.912 27.786 0 55.249-13.57 66.879-32.309 11.631-18.74 16.908-40.71 16.908-40.71h62.035v59.019c0 21.107-3.878 87.45-3.878 87.45H254.742c-19.386 0-29.724 48.894-29.724 48.894h133.76c-8.4 75.82-26.493 106.191-51.91 152.716-25.418 46.525-92.728 99.406-92.728 99.406 41.033 11.63 86.589-3.555 105.974-21.972 19.386-18.417 35.863-49.756 47.817-72.838 11.954-23.081 21.972-65.124 21.972-65.124L498.462 766.86s4.846-24.233 6.461-39.418c1.616-15.186-.755-26.385-4.63-35.433-3.878-9.046-15.509-21.54-31.018-39.634-15.507-18.094-48.034-52.879-48.034-52.879s-15.832 11.63-28.108 21.001c9.046-21.97 16.262-79.695 16.262-79.695h122.343v-20.249c.003-17.66-7.319-29.29-18.089-29.29zm287.337-200.747h-234.35a4.308 4.308 0 0 0-4.309 4.308v435.099a4.308 4.308 0 0 0 4.308 4.308h40.226l14.7 50.402 81.096-50.402h98.328a4.308 4.308 0 0 0 4.308-4.308v-435.1a4.308 4.308 0 0 0-4.308-4.308zM755.97 684.47h-52.343l-61.548 39.095-10.823-39.095h-18.738V338.116H755.97v346.355z"/></svg>'}},3781:(e,t,i)=>{i.d(t,{U:()=>n});const n=JSON.parse('{"article":{"/":{"path":"/article/","indexes":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,8,9,14,15,16,17,18,19,20,21,22,23,24,32,0,112,113,114,6,7,115,116,117,118,119,120,33,10,89,11,12,107,121,122,123,108,124,125,109,126,110,127,128,129,90,91,92,93,94,95,96,97,98,13,111,99,100,101,102,130,1,2,3,5,4,27,26,25,105,106,28,29,30,31,103,104]}},"star":{"/":{"path":"/star/","indexes":[28,32,103,0]}},"timeline":{"/":{"path":"/timeline/","indexes":[34,35,112,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,113,114,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,6,8,9,7,115,116,117,14,15,118,119,16,17,120,33,10,89,11,12,107,121,122,123,108,18,124,125,109,126,110,19,20,127,128,129,90,91,92,93,94,95,96,97,98,13,111,99,100,101,102,21,22,23,24,130,1,2,3,5,4,32,27,26,25,105,106,28,29,30,31,103,104,0]}}}')},4776:(e,t,i)=>{i.d(t,{M:()=>n});const n=JSON.parse('["/demo/page.html","/demo/","/demo/disable.html","/demo/encrypt.html","/demo/markdown.html","/demo/layout.html","/jmeter/","/jmeter/core/","/jmeter/study.html","/jmeter/basic/basic.html","/jmeter/basic/","/jmeter/script/","/jmeter/sundry/","/jmeter/script/beanshell/","/auto/se/base/el_operate.html","/auto/se/base/el_position/css_and_xpath.html","/auto/se/pytest/execute_cmd.html","/auto/se/pytest/plugin.html","/auto/se/base/browser_ctrl.html","/auto/se/pytest/basic_use.html","/auto/se/pytest/fixture.html","/nonu/auto_intro.html","/auto/se/intro/ui_and_selenium_intro.html","/auto/se/base/el_position/el_RelativeLocator.html","/auto/se/base/el_position/el_basic.html","/posts/cherry.html","/posts/dragonfruit.html","/posts/strawberry.html","/posts/banana/2.html","/posts/banana/1.html","/posts/apple/4.html","/posts/apple/3.html","/posts/tomato.html","/auto/se/","/jmeter/core/component.html","/jmeter/core/para.html","/jmeter/script/JSR223/JSR223.html","/jmeter/script/beanshell/ctx.html","/jmeter/script/beanshell/intro.html","/jmeter/script/beanshell/prev.html","/jmeter/script/beanshell/props.html","/jmeter/script/beanshell/vars.html","/jmeter/guide/assert/duration.html","/jmeter/guide/assert/intro.html","/jmeter/guide/assert/json.html","/jmeter/guide/assert/response.html","/jmeter/guide/config/counter.html","/jmeter/guide/config/csv.html","/jmeter/guide/config/http_cookie.html","/jmeter/guide/config/http_header.html","/jmeter/guide/config/http_request%20_defaults.html","/jmeter/guide/config/intro.html","/jmeter/guide/config/random_variable.html","/jmeter/guide/config/user_%20Defined_%20Variables.html","/jmeter/guide/controllers/intro.html","/jmeter/guide/listeners/intro.html","/jmeter/guide/processor/intro.html","/jmeter/guide/test_plan/para_detail.html","/jmeter/guide/threads/concurrency.html","/jmeter/guide/threads/important.html","/jmeter/guide/threads/step.html","/jmeter/guide/timers/intro.html","/jmeter/guide/controllers/logical/Weighted.html","/jmeter/guide/controllers/logical/for_each.html","/jmeter/guide/controllers/logical/if.html","/jmeter/guide/controllers/logical/intro.html","/jmeter/guide/controllers/logical/loop.html","/jmeter/guide/controllers/logical/once.html","/jmeter/guide/controllers/logical/random.html","/jmeter/guide/controllers/logical/runtime.html","/jmeter/guide/controllers/logical/simple.html","/jmeter/guide/controllers/logical/switch.html","/jmeter/guide/controllers/logical/throughput.html","/jmeter/guide/controllers/logical/transaction.html","/jmeter/guide/controllers/logical/while.html","/jmeter/guide/controllers/samplers/http_request.html","/jmeter/guide/controllers/samplers/intro.html","/jmeter/guide/controllers/samplers/jdbc_request.html","/jmeter/guide/processor/post/jdbc_connection.html","/jmeter/guide/processor/post/json_extractor.html","/jmeter/guide/processor/post/regular_extractor.html","/jmeter/guide/processor/pre/user_para.html","/jmeter/basic/Instal_and_config.html","/jmeter/basic/first_demo.html","/jmeter/basic/intro.html","/jmeter/basic/software_intro.html","/jmeter/guide/test_plan/intro.html","/jmeter/guide/threads/Thread_Group.html","/jmeter/guide/threads/ultimate.html","/jmeter/guide/","/jmeter/guide/assert/","/jmeter/guide/config/","/jmeter/guide/controllers/","/jmeter/guide/listeners/","/jmeter/guide/plugin/","/jmeter/guide/processor/","/jmeter/guide/test_plan/","/jmeter/guide/threads/","/jmeter/guide/timers/","/jmeter/guide/controllers/logical/","/jmeter/guide/controllers/samplers/","/jmeter/guide/processor/post/","/jmeter/guide/processor/pre/","/posts/apple/2.html","/posts/apple/1.html","/posts/banana/4.html","/posts/banana/3.html","/auto/se/advanced/","/auto/se/base/","/auto/se/project_practical/","/auto/se/pytest/","/auto/se/base/el_position/","/jmeter/sundry/get_para_across_thread.html","/jmeter/guide/plugin/items.html","/jmeter/guide/plugin/start.html","/jmeter/sundry/curve_model.html","/jmeter/sundry/test_type.html","/auto/se/sundry/CSS_Selector_pseudo.html","/auto/se/pytest/parameters.html","/auto/se/sundry/headless_diff.html","/auto/se/sundry/request.html","/auto/se/advanced/complex_scenes.html","/auto/se/advanced/mouse_and_key.html","/auto/se/advanced/wait.html","/auto/se/intro/","/auto/se/intro/selenium4_and_selenium3.html","/auto/se/project_practical/basic_use.html","/auto/se/sundry/","/auto/se/sundry/fixture_side_effects.html","/auto/se/sundry/pytest_all_old.html","/intro.html"]')},4923:(e,t,i)=>{},5939:(e,t,i)=>{i.d(t,{B:()=>V});var n={};i.r(n);var r={};i.r(r);var a={};i.r(a);var l={};i.r(l),i.d(l,{default:()=>b});var s={};i.r(s),i.d(s,{default:()=>k});var o={};i.r(o);var d={};i.r(d);var h={};i.r(h),i.d(h,{default:()=>T});var c={};i.r(c),i.d(c,{default:()=>S});var p={};i.r(p),i.d(p,{default:()=>L});var g=i(2514),m=i(9348),u=i(9281);const b={enhance:({app:e})=>{e.component("CodeTabs",m.S),e.component("Tabs",u.t)}};var y=i(2229),x=i(3533);const k={enhance:({app:e})=>{e.component("CodeDemo",y.A),e.component("MdDemo",x.A)}};var f=i(1297),v=i(1011),B=i(9417),A=i(7803),w=i(9523),E=i(6254),j=i(9404);const T={enhance:({app:e})=>{(0,A.L4)("VPIcon")||e.component("VPIcon",(e=>(0,E.h)(j.G,{type:"iconify",prefix:"fa6-solid:",...e})))},setup:()=>{(0,w.r9V)("https://cdn.jsdelivr.net/npm/iconify-icon@2")}};var F=i(9566),_=i(2524),C=i(2759);const S={enhance:({app:e})=>{(0,A.L4)("Badge")||e.component("Badge",_.A),(0,A.L4)("VPCard")||e.component("VPCard",C.A)},setup:()=>{},rootComponents:[]};var J=i(9843),M=i(1213),z=i(4899),D=i(9125),q=i(7646),P=i(3639),R=i(1216),H=i(4341);(0,P.M_)((e=>{const t=e.title,i=!1!==e.index,n=e.icon;return i?{title:t,content:n?()=>[(0,E.h)((0,E.g2)("VPIcon"),{icon:n}),t]:null,order:e.order,index:e.index}:null}));const L={enhance:({app:e,router:t})=>{const{scrollBehavior:i}=t.options;t.options.scrollBehavior=async(...e)=>(await q.lE.wait(),i(...e)),(0,q.X4)(e),e.component("BloggerInfo",R.tI),e.component("SocialMedias",R.rS),e.component("GlobalEncrypt",H.J),e.component("LocalEncrypt",H.n)},setup:()=>{(0,q.fv)(),(0,q.i$)(),(0,R.su)()},layouts:{Layout:q.PE,NotFound:q.Mk,BlogCategory:R.Pn,BlogHome:R.qX,BlogType:R.z7,Timeline:R.Kf}},V=[n,r,a,g,l,s,o,d,f,v,B,h,F,c,J,M,z,D,p].map((e=>e.default)).filter(Boolean)},6653:(e,t,i)=>{i.d(t,{K:()=>n});const n=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":{"tokens":["$2b$10$W/ZdGyo54hbFdx3o5Wq2gesu1L3DZvhxMUD9OztgjBVPV3kdlk/1S"],"hint":"Password: 1234"}}},"author":{"name":"专业治头秃","url":"https://github.com/hekun97"},"logo":"https://theme-hope-assets.vuejs.press/logo.svg","repo":"vuepress-theme-hope/vuepress-theme-hope","docsDir":"src","footer":"默认页脚","displayFooter":true,"blog":{"description":"一个测试攻城师","intro":"/intro.html","medias":{"Baidu":"https://example.com","BiliBili":"https://example.com","Bitbucket":"https://example.com","Dingding":"https://example.com","Discord":"https://example.com","Dribbble":"https://example.com","Email":"mailto:info@example.com","Evernote":"https://example.com","Facebook":"https://example.com","Flipboard":"https://example.com","Gitee":"https://example.com","GitHub":"https://example.com","Gitlab":"https://example.com","Gmail":"mailto:info@example.com","Instagram":"https://example.com","Lark":"https://example.com","Lines":"https://example.com","Linkedin":"https://example.com","Pinterest":"https://example.com","Pocket":"https://example.com","QQ":"https://example.com","Qzone":"https://example.com","Reddit":"https://example.com","Rss":"https://example.com","Steam":"https://example.com","Twitter":"https://example.com","Wechat":"https://example.com","Weibo":"https://example.com","Whatsapp":"https://example.com","Youtube":"https://example.com","Zhihu":"https://example.com","VuePressThemeHope":{"icon":"https://theme-hope-assets.vuejs.press/logo.svg","link":"https://theme-hope.vuejs.press"}}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":["/","/demo/",{"text":"博文","icon":"pen-to-square","prefix":"/posts/","children":[{"text":"苹果","icon":"pen-to-square","prefix":"apple/","children":[{"text":"苹果1","icon":"pen-to-square","link":"1"},{"text":"苹果2","icon":"pen-to-square","link":"2"},"3","4"]},{"text":"香蕉","icon":"pen-to-square","prefix":"banana/","children":[{"text":"香蕉 1","icon":"pen-to-square","link":"1"},{"text":"香蕉 2","icon":"pen-to-square","link":"2"},"3","4"]},{"text":"樱桃","icon":"pen-to-square","link":"cherry"},{"text":"火龙果","icon":"pen-to-square","link":"dragonfruit"},"tomato","strawberry"]},{"text":"Jmeter","icon":"UI","link":"/jmeter/"},{"text":"Selenium","icon":"UI","link":"/auto/se/"}],"sidebar":{"/":["",{"text":"如何使用","icon":"laptop-code","prefix":"demo/","link":"demo/","children":"structure"},"intro",{"text":"幻灯片","icon":"person-chalkboard","link":"https://ecosystem.vuejs.press/zh/plugins/markdown/revealjs/demo.html"}],"/auto/se/":"structure","/jmeter":"structure"}}}}')},8123:(e,t,i)=>{i.d(t,{v:()=>n});const n={"/demo/":["markdown","layout","page","disable","encrypt"],"/auto/se/":[{text:"介绍",prefix:"intro/",collapsible:!0,icon:"circle-info",children:["ui_and_selenium_intro","selenium4_and_selenium3"]},{text:"基础",prefix:"base/",collapsible:!0,icon:"splotch",children:[{text:"元素定位",prefix:"el_position/",collapsible:!0,icon:"gem",children:["el_basic","css_and_xpath","el_RelativeLocator"]},"el_operate","browser_ctrl"]},{text:"进阶",prefix:"advanced/",collapsible:!0,icon:"gem",children:["complex_scenes","wait","mouse_and_key"]},{text:"Pytest",prefix:"pytest/",collapsible:!0,icon:"leaf",children:["basic_use","fixture","plugin","execute_cmd","parameters"]},{text:"项目",prefix:"project_practical/",collapsible:!0,icon:"folder-tree",children:["basic_use"]},{text:"杂项",prefix:"sundry/",collapsible:!0,icon:"circle-info",children:["CSS_Selector_pseudo","fixture_side_effects","headless_diff","pytest_all_old","request"]}],"/jmeter":["study",{text:"基础入门",prefix:"basic/",collapsible:!0,icon:"splotch",children:["basic","intro","Instal_and_config","software_intro","first_demo"]},{text:"指南",prefix:"guide/",collapsible:!0,icon:"splotch",children:[{text:"测试计划",prefix:"test_plan/",collapsible:!0,icon:"splotch",children:["intro","para_detail"]},{text:"线程组",prefix:"threads/",collapsible:!0,icon:"splotch",children:["important","concurrency","step","ultimate","Thread_Group"]},{text:"控制器",prefix:"controllers/",collapsible:!0,icon:"splotch",children:["intro",{text:"取样器",prefix:"samplers/",collapsible:!0,icon:"splotch",children:["intro","http_request","jdbc_request"]},{text:"逻辑控制器",prefix:"logical/",collapsible:!0,icon:"splotch",children:["intro","if","transaction","loop","while","for_each","runtime","once","simple","random","throughput","switch","Weighted"]}]},{text:"处理器",prefix:"processor/",collapsible:!0,icon:"splotch",children:["intro",{text:"前置处理器",prefix:"pre/",collapsible:!0,icon:"splotch",children:["user_para"]},{text:"后置处理器",prefix:"post/",collapsible:!0,icon:"splotch",children:["jdbc_connection","json_extractor","regular_extractor"]}]},{text:"断言",prefix:"assert/",collapsible:!0,icon:"splotch",children:["intro","response","json","duration"]},{text:"定时器",prefix:"timers/",collapsible:!0,icon:"splotch",children:["intro"]},{text:"插件",prefix:"plugin/",collapsible:!0,icon:"splotch",children:["start","items"]},{text:"配置元件",prefix:"config/",collapsible:!0,icon:"splotch",children:["intro","csv","http_header","http_cookie","http_request _defaults","user_ Defined_ Variables","random_variable","counter"]},{text:"监听器",prefix:"listeners/",collapsible:!0,icon:"splotch",children:["intro"]}]},{text:"脚本",prefix:"script/",collapsible:!0,icon:"splotch",children:[{text:"BeanShell",prefix:"beanshell/",collapsible:!0,icon:"splotch",children:["intro","ctx","vars","props","prev"]},{text:"JSR223",prefix:"JSR223/",collapsible:!0,children:["JSR223"]}]},{text:"杂项",prefix:"sundry/",collapsible:!0,icon:"splotch",children:["get_para_across_thread","curve_model","test_type"]},{text:"核心功能",prefix:"core/",collapsible:!0,icon:"lightbulb",children:["component","para"]}]}},8164:(e,t,i)=>{i.d(t,{J:()=>r,c:()=>n});const n=JSON.parse("{}"),r=Object.fromEntries([["/",{loader:()=>i.e(4470).then(i.bind(i,6349)),meta:{title:"博客主页",icon:"house"}}],["/intro.html",{loader:()=>i.e(3912).then(i.bind(i,8737)),meta:{date:1741007131e3,cover:"/assets/images/cover3.jpg",excerpt:"\n<p>将你的个人介绍和档案放置在此处。</p>\n",readingTime:{minutes:.08,words:23},title:"介绍页",icon:"circle-info",type:"article"}}],["/demo/",{loader:()=>i.e(3320).then(i.bind(i,2659)),meta:{date:1741007131e3,category:["使用指南"],readingTime:{minutes:.07,words:22},title:"主要功能与配置演示",icon:"laptop-code",type:"article"}}],["/demo/disable.html",{loader:()=>i.e(2756).then(i.bind(i,8824)),meta:{date:1741007131e3,category:["使用指南"],tag:["禁用"],excerpt:"<p>你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。</p>\n",readingTime:{minutes:.43,words:128},title:"布局与功能禁用",icon:"gears",order:4,type:"article"}}],["/demo/encrypt.html",{loader:()=>i.e(2581).then(i.bind(i,4263)),meta:{date:1741007131e3,category:["使用指南"],tag:["加密"],isEncrypted:!0,readingTime:{minutes:.51,words:154},title:"密码加密的文章",icon:"lock",type:"article"}}],["/demo/layout.html",{loader:()=>i.e(6216).then(i.bind(i,1225)),meta:{date:1741007131e3,category:["指南"],tag:["布局"],excerpt:'<p>布局包括:</p>\n<ul>\n<li><a href="https://theme-hope.vuejs.press/zh/guide/layout/navbar.html" target="_blank" rel="noopener noreferrer">导航栏</a></li>\n<li><a href="https://theme-hope.vuejs.press/zh/guide/layout/sidebar.html" target="_blank" rel="noopener noreferrer">侧边栏</a></li>\n<li><a href="https://theme-hope.vuejs.press/zh/guide/layout/footer.html" target="_blank" rel="noopener noreferrer">页脚</a></li>\n</ul>',readingTime:{minutes:.53,words:159},title:"布局",icon:"object-group",order:2,type:"article"}}],["/demo/markdown.html",{loader:()=>i.e(8711).then(i.bind(i,9639)),meta:{date:1741007131e3,category:["使用指南"],tag:["Markdown"],excerpt:"<p>VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。</p>\n<p>你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。</p>\n",readingTime:{minutes:3.47,words:1041},title:"Markdown 展示",icon:"fa6-brands:markdown",order:2,type:"article"}}],["/demo/page.html",{loader:()=>i.e(645).then(i.bind(i,3106)),meta:{author:"Ms.Hope",date:15778368e5,localizedDate:"2020年1月1日",category:["使用指南"],tag:["页面配置","使用指南"],sticky:!0,cover:"/assets/images/cover1.jpg",excerpt:"<p><code>more</code> 注释之前的内容被视为文章摘要。</p>\n",readingTime:{minutes:1.76,words:529},title:"页面配置",icon:"file",order:3,type:"article"}}],["/jmeter/",{loader:()=>i.e(6364).then(i.bind(i,7443)),meta:{date:1742139779e3,category:["Jmeter","性能测试"],tag:["Catalog"],readingTime:{minutes:.06,words:19},title:"性能测试",icon:"lightbulb",type:"article"}}],["/jmeter/study.html",{loader:()=>i.e(9309).then(i.bind(i,2210)),meta:{date:1742139779e3,category:["性能测试"],tag:["basic","study"],sticky:!0,excerpt:"\n<p>学习 JMeter 进行性能测试的路线可以分阶段规划，以下是系统化的学习路径建议：</p>\n<hr>\n<h2><strong>阶段一：基础入门</strong></h2>\n<ol>\n<li><strong>理解性能测试基础</strong>\n<ul>\n<li>性能测试类型：负载测试、压力测试、并发测试、稳定性测试等。</li>\n<li>核心指标：响应时间、并发数、吞吐量（TPS、QPS）、错误率、点击数、资源利用率（CPU/内存/网络）等。</li>\n<li>常见性能问题：内存泄漏、线程阻塞、数据库锁等。</li>\n</ul>\n</li>\n<li><strong>JMeter入门介绍</strong>\n<ul>\n<li>JMeter支持哪些测试场景？</li>\n<li>JMeter有哪些特征？</li>\n<li>JMetert的扩展性体现在哪里？</li>\n<li>JMeter实际使用场景</li>\n</ul>\n</li>\n<li><strong>JMeter 安装与配置</strong>\n<ul>\n<li>下载并安装 Java（JMeter 依赖 Java 环境）。</li>\n<li>下载 JMeter 并解压，更改语言为中文，配置环境变量（可选）。</li>\n<li>熟悉JMeter目录结构。</li>\n</ul>\n</li>\n<li><strong>启动 JMeter GUI</strong>。\n<ul>\n<li>熟悉 JMeter GUI界面布局。</li>\n<li>熟悉元件和组件。</li>\n<li>熟悉变量和属性。</li>\n</ul>\n</li>\n<li><strong>第一个测试计划</strong>\n<ul>\n<li>创建线程组（Thread Group）并配置并发用户数、循环次数。</li>\n<li>添加 HTTP 请求元件，配置协议、服务器地址、路径。</li>\n<li>添加监听器（如 View Results Tree、Summary Report）查看结果。</li>\n</ul>\n</li>\n</ol>",readingTime:{minutes:5.06,words:1519},title:"学习路线",icon:"pen-to-square",order:1,type:"article"}}],["/nonu/auto_intro.html",{loader:()=>i.e(95).then(i.bind(i,2781)),meta:{date:1741278449e3,category:["UI自动化测试"],tag:["介绍"],sticky:!0,excerpt:"\n<h2><strong>一、什么是自动化测试？</strong></h2>\n<p><strong>自动化测试</strong> 是通过编写脚本或使用工具，代替人工执行测试用例，自动验证软件功能、性能、安全性等是否符合预期。其核心目标是 <strong>提升测试效率</strong> 和 <strong>保证质量稳定性</strong>。</p>\n<p><strong>示例</strong>：<br>\n电商网站的登录功能，每次迭代后需测试 50 种场景，人工耗时 2 小时 → 自动化脚本 10 分钟完成。</p>\n<h2>二、什么项目适合做自动化测试</h2>\n<table>\n<thead>\n<tr>\n<th>条件</th>\n<th>原因</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>需求变动不频繁</td>\n<td>代码经常变更维护不方便</td>\n</tr>\n<tr>\n<td>项目周期长</td>\n<td>项目短，上线之后不需要再去测试</td>\n</tr>\n<tr>\n<td>项目需要回归测试</td>\n<td>不用回归测试的也不需要写自动化</td>\n</tr>\n</tbody>\n</table>",readingTime:{minutes:4.12,words:1235},title:"自动化测试介绍",icon:"pen-to-square",order:1,type:"article"}}],["/posts/cherry.html",{loader:()=>i.e(2345).then(i.bind(i,1786)),meta:{date:16416864e5,localizedDate:"2022年1月9日",category:["樱桃"],tag:["红","小","圆"],excerpt:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",readingTime:{minutes:.11,words:33},title:"樱桃",icon:"pen-to-square",type:"article"}}],["/posts/dragonfruit.html",{loader:()=>i.e(5853).then(i.bind(i,6223)),meta:{date:16417728e5,localizedDate:"2022年1月10日",category:["火龙果","水果"],tag:["红","大"],excerpt:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",readingTime:{minutes:.12,words:36},title:"火龙果",icon:"pen-to-square",type:"article"}}],["/posts/strawberry.html",{loader:()=>i.e(8461).then(i.bind(i,4266)),meta:{date:16418592e5,localizedDate:"2022年1月11日",category:["水果","草莓"],tag:["红","小"],excerpt:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",readingTime:{minutes:.11,words:34},title:"草莓",icon:"pen-to-square",type:"article"}}],["/posts/tomato.html",{loader:()=>i.e(6218).then(i.bind(i,4943)),meta:{date:16419456e5,localizedDate:"2022年1月12日",category:["蔬菜"],tag:["红","圆"],sticky:!0,cover:"/assets/images/cover2.jpg",excerpt:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",readingTime:{minutes:.13,words:38},title:"番茄",icon:"pen-to-square",type:"article"}}],["/auto/se/",{loader:()=>i.e(2793).then(i.bind(i,2542)),meta:{date:1741624426e3,category:["介绍"],tag:["介绍"],excerpt:"<h3><strong>一、学习路线规划</strong></h3>\n<h4><strong>阶段 1：基础入门（1-2周）</strong></h4>\n<ol>\n<li>\n<p><strong>前置知识</strong></p>\n<ul>\n<li>掌握一门编程语言（Python/Java 为主，推荐 Python 语法简洁）。</li>\n<li>了解 HTML/CSS 基础（元素标签、选择器）。</li>\n<li>熟悉浏览器开发者工具（Chrome DevTools）。</li>\n</ul>\n</li>\n<li>\n<p><strong>环境搭建</strong></p>\n<ul>\n<li>安装 Python/Java、Selenium 库、浏览器驱动（ChromeDriver）。</li>\n<li>编写第一个脚本：打开网页并获取标题。</li>\n</ul>\n</li>\n<li>\n<p><strong>核心操作</strong></p>\n<ul>\n<li>浏览器控制：前进/后退、窗口切换、Cookie 管理。</li>\n<li>元素定位：ID、XPath、CSS 选择器（重点掌握）。</li>\n</ul>\n</li>\n</ol>",readingTime:{minutes:2.59,words:777},title:"Selenium",icon:"lightbulb",type:"article"}}],["/jmeter/basic/Instal_and_config.html",{loader:()=>i.e(1943).then(i.bind(i,2110)),meta:{date:1742745308e3,category:["JMeter"],tag:["安装","配置"],sticky:!0,excerpt:'\n<h2>一、环境搭建</h2>\n<ol>\n<li>安装JDK；</li>\n<li>安装JMeter。</li>\n</ol>\n<div class="hint-container tip">\n<p class="hint-container-title">提示</p>\n<ul>\n<li>\n<p>安装过程过程比较简单自己从网络上查找教程，记得将语言改为中文。</p>\n</li>\n<li>\n<p>还有Mac下如果关闭终端后不能使用，记得按如下步骤修改。</p>\n<ol>\n<li>\n<p><strong>编辑</strong>：<code>vim ~/.zshrc</code></p>\n</li>\n<li>\n<p><strong>添加</strong>：在<code>.zshrc</code>文件中新增一行<code>source ~/.bash_profile</code></p>\n</li>\n<li>\n<p><strong>使环境变量生效</strong>：<code>source ~/.zshrc</code></p>\n</li>\n</ol>\n</li>\n</ul>\n</div>',readingTime:{minutes:2.73,words:818},title:"JMeter安装与配置",icon:"pen-to-square",order:3,type:"article"}}],["/jmeter/basic/",{loader:()=>i.e(1609).then(i.bind(i,3245)),meta:{date:1741624426e3,category:["性能测试"],tag:["基础"],readingTime:{minutes:.07,words:22},title:"基础入门",icon:"splotch",order:2,type:"article"}}],["/jmeter/basic/basic.html",{loader:()=>i.e(4895).then(i.bind(i,2323)),meta:{date:1742139779e3,category:["性能测试"],tag:["基础","介绍"],sticky:!0,excerpt:"\n<p>理解性能测试基础是学习性能测试工具的前提。以下是核心概念和知识的详细展开，帮助新手建立系统性认知：</p>\n<hr>\n<h2><strong>一、 性能测试的核心目标</strong></h2>\n<ul>\n<li><strong>验证系统能力</strong>：系统能否在预期用户量和请求量下正常运行？</li>\n<li><strong>发现性能瓶颈</strong>：CPU、内存、磁盘 I/O、网络、数据库、代码等环节是否存在瓶颈？</li>\n<li><strong>评估稳定性</strong>：高负载或长时间运行下，系统是否会出现崩溃、内存泄漏等问题？</li>\n<li><strong>优化依据</strong>：通过测试结果指导开发、运维团队进行调优。</li>\n</ul>",readingTime:{minutes:6.74,words:2023},title:"性能测试基础",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/basic/first_demo.html",{loader:()=>i.e(4389).then(i.bind(i,4669)),meta:{date:1742745308e3,category:["JMeter"],tag:["hello world"],sticky:!0,excerpt:'\n<h2>需求</h2>\n<p>使用JMeter使用谷歌搜索【hello world】，并查看请求和响应信息</p>\n<h2>操作步骤</h2>\n<ol>\n<li>\n<p>启动JMeter；</p>\n</li>\n<li>\n<p>在【测试计划】下添加【线程组】；</p>\n</li>\n<li>\n<p>在【线程组】下添加【HTTP请求】取样器；</p>\n</li>\n<li>\n<p>填写【HTTP请求】的相关请求数据；</p>\n<figure><img src="/assets/jmeter/image-20250323003936442.png" alt="HTTP请求-谷歌" tabindex="0" loading="lazy"><figcaption>HTTP请求-谷歌</figcaption></figure>\n<div class="hint-container tip">\n<p class="hint-container-title">提示</p>\n<p>如果【参数】中的【编码】不勾选，那么浏览器将无法直接识别【hello world】中间的空格。</p>\n</div>\n</li>\n<li>\n<p>在【线程组】下添加【察看结果树】监听器；</p>\n</li>\n<li>\n<p>点击【启动】按钮运行，并查看结果。</p>\n<figure><img src="/assets/jmeter/image-20250323004245052.png" alt="查看运行结果" tabindex="0" loading="lazy"><figcaption>查看运行结果</figcaption></figure>\n</li>\n</ol>',readingTime:{minutes:.67,words:202},title:"第一个测试计划",icon:"pen-to-square",order:5,type:"article"}}],["/jmeter/basic/intro.html",{loader:()=>i.e(9435).then(i.bind(i,1226)),meta:{date:1742745308e3,category:["JMeter"],tag:["介绍"],sticky:!0,excerpt:"\n<h2>一、JMeter 概述</h2>\n<p>JMeter 是 Apache 基金会下的开源性能测试工具，主要用于模拟高并发负载并分析系统性能。其设计灵活，支持多种协议和扩展，适用于服务端、网络、数据库等场景的性能验证。</p>\n<hr>\n<h2>二、JMeter 支持的测试场景</h2>\n<h3>1. <strong>Web 应用测试</strong></h3>\n<ul>\n<li>HTTP/HTTPS 请求模拟（REST、SOAP、GraphQL）。</li>\n<li>动态页面处理（Cookie、Session、Token 管理）。</li>\n<li>静态资源（CSS/JS/图片）加载性能测试。</li>\n</ul>",readingTime:{minutes:4.09,words:1228},title:"JMeter入门介绍",icon:"pen-to-square",order:2,type:"article"}}],["/jmeter/basic/software_intro.html",{loader:()=>i.e(8133).then(i.bind(i,5784)),meta:{date:1742745308e3,category:["JMeter"],tag:["介绍"],sticky:!0,excerpt:'\n<h2>一、JMeter面板介绍</h2>\n<figure><img src="/assets/jmeter/1896874-20200425095521117-1271559523.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>\n<h3>1. 常用的菜单栏</h3>\n<h4>分布式运行相关的，后面再展开讲解哦</h4>\n<figure><img src="/assets/jmeter/1896874-20200425102038185-1305530759.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>',readingTime:{minutes:6.24,words:1872},title:"JMeter软件介绍",icon:"pen-to-square",order:4,type:"article"}}],["/jmeter/core/",{loader:()=>i.e(2146).then(i.bind(i,9685)),meta:{date:1742139779e3,category:["Jmeter","性能测试"],tag:["Core"],readingTime:{minutes:.06,words:19},title:"核心功能",icon:"lightbulb",type:"article"}}],["/jmeter/core/component.html",{loader:()=>i.e(5121).then(i.bind(i,5323)),meta:{date:1743347198e3,category:["JMeter"],tag:["Core","Component"],sticky:!0,excerpt:'\n<p>以下是 <strong>JMeter 核心元件学习清单</strong>，按功能分类并标注优先级（⭐️ 为必学核心）。</p>\n<hr>\n<div class="hint-container important">\n<p class="hint-container-title">前提条件</p>\n<p>先了解<a href="/jmeter/study.html#%E9%98%B6%E6%AE%B5%E4%BA%8C-%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD%E5%AD%A6%E4%B9%A0" target="_blank">JMeter核心元件学习表格</a></p>\n</div>',readingTime:{minutes:4.53,words:1360},title:"JMeter 核心元件",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/core/para.html",{loader:()=>i.e(1266).then(i.bind(i,3922)),meta:{date:1743347198e3,category:["JMeter"],tag:["Core","Parameter"],sticky:!0,excerpt:"\n<p>参数化是性能测试的核心技能，用于模拟真实用户行为，避免重复数据导致的缓存或数据库冲突。以下是 JMeter 中实现参数化与动态数据的三种主要方法及其应用场景。</p>\n<hr>\n<h2><strong>一、使用 CSV 文件实现参数化</strong></h2>\n<h3><strong>1. 核心元件：CSV Data Set Config</strong></h3>\n<ul>\n<li><strong>作用</strong>：从 CSV 文件逐行读取数据，分配给不同线程（用户）。</li>\n<li><strong>适用场景</strong>：多用户登录、批量订单提交、测试数据多样性需求。</li>\n</ul>",readingTime:{minutes:4.42,words:1327},title:"JMeter 参数化与动态数据详解",icon:"pen-to-square",order:2,type:"article"}}],["/jmeter/guide/",{loader:()=>i.e(4203).then(i.bind(i,1493)),meta:{date:1741624426e3,category:["JMeter"],tag:["指南"],readingTime:{minutes:.06,words:17},title:"指南",icon:"splotch",order:33,type:"article"}}],["/jmeter/script/",{loader:()=>i.e(2454).then(i.bind(i,4608)),meta:{date:1741624426e3,category:["性能测试"],tag:["script"],readingTime:{minutes:.06,words:19},title:"脚本",icon:"splotch",order:44,type:"article"}}],["/jmeter/sundry/",{loader:()=>i.e(374).then(i.bind(i,6123)),meta:{date:1741624426e3,category:["性能测试"],tag:["杂项"],readingTime:{minutes:.07,words:20},title:"杂项",icon:"splotch",order:55,type:"article"}}],["/jmeter/sundry/curve_model.html",{loader:()=>i.e(5607).then(i.bind(i,5221)),meta:{date:1742139779e3,excerpt:'\n<p>性能测试曲线模型是一条随着测试时间不断变化的曲线，与<strong>服务器资源</strong>、<strong>用户数</strong>或其他的性能指标密切相关的曲线。如下图所示。</p>\n<figure><img src="/assets/jmeter/202401251757064.png" alt="performance curve" tabindex="0" loading="lazy"><figcaption>performance curve</figcaption></figure>\n<h2>曲线图关键点</h2>\n<ul>\n<li><strong>横轴</strong>：从左到右表现了Number of Concurrent Users（并发用户数）的不断增长。</li>\n<li><strong>曲线</strong>：\n<ul>\n<li><strong></strong>：资源的利用情况，包括硬件资源和软件资源；</li>\n<li><strong></strong>：吞吐量，这里是指每秒事务数（TPS）；</li>\n<li><strong></strong>：响应时间。</li>\n</ul>\n</li>\n<li><strong>区域</strong>：\n<ul>\n<li><strong>Light Load</strong> ：轻负载区</li>\n<li><strong>Heavy Load</strong> ：重负载区</li>\n<li><strong>Buckle Zone</strong>：塌陷区 。</li>\n</ul>\n</li>\n<li><strong>关键点</strong>：\n<ul>\n<li><strong>The Optimum Number of Concurrent Users</strong>：最佳并发用户数</li>\n<li><strong>The Maximum Number of Concurrent Users</strong>：最大并发用户数</li>\n</ul>\n</li>\n</ul>',readingTime:{minutes:2.19,words:656},title:"性能测试曲线模型",type:"article"}}],["/jmeter/sundry/get_para_across_thread.html",{loader:()=>i.e(1022).then(i.bind(i,191)),meta:{date:1743347198e3,excerpt:'\n<ul>\n<li>用过 Jmeter 的同学应该都知道，Jmeter 不支持跨线程传递参数</li>\n<li>哎，那我想跨线程传递参数，要咋整呢？别急，接下来我们就来讲解如何不使用代码就可以解决此问题</li>\n<li>官方也有正式说明，所以这并不是 Bug 哦</li>\n</ul>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202007/1896874-20200713102945512-268679554.jpg" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200713102945512-268679554.jpg" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:3.63,words:1089},title:"Jmeter 跨线程组取参数值的方法",type:"article"}}],["/jmeter/sundry/test_type.html",{loader:()=>i.e(5375).then(i.bind(i,442)),meta:{date:1742139779e3,excerpt:'\n<p>性能测试是确保系统在高负载、复杂场景下稳定运行的关键环节。以下是常见性能测试类型的详细解析，涵盖定义、目标、执行方法及实际案例，帮助你精准选择测试策略。</p>\n<hr>\n<div class="hint-container important">\n<p class="hint-container-title">前提条件</p>\n<p>已熟悉性能测试曲线，可参考：<a href="/jmeter/sundry/curve_model.html" target="_blank">性能测试曲线模型</a>。</p>\n</div>\n<h2><strong>一、基准测试</strong></h2>',readingTime:{minutes:10.69,words:3207},title:"详解性能测试类型",type:"article"}}],["/posts/apple/1.html",{loader:()=>i.e(7186).then(i.bind(i,1373)),meta:{date:16409952e5,localizedDate:"2022年1月1日",category:["苹果"],tag:["红","大","圆"],excerpt:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",readingTime:{minutes:.11,words:34},title:"苹果 1",icon:"pen-to-square",type:"article"}}],["/posts/apple/2.html",{loader:()=>i.e(2475).then(i.bind(i,9716)),meta:{date:16410816e5,localizedDate:"2022年1月2日",category:["苹果"],tag:["红","大","圆"],excerpt:"\n<p>一个被星标了的苹果文章。</p>\n",readingTime:{minutes:.16,words:48},title:"苹果 2",icon:"pen-to-square",type:"article"}}],["/posts/apple/3.html",{loader:()=>i.e(660).then(i.bind(i,570)),meta:{date:1641168e6,localizedDate:"2022年1月3日",category:["苹果","水果"],tag:["红","大","圆"],excerpt:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",readingTime:{minutes:.12,words:36},title:"苹果 3",icon:"pen-to-square",type:"article"}}],["/posts/apple/4.html",{loader:()=>i.e(8365).then(i.bind(i,1405)),meta:{date:16412544e5,localizedDate:"2022年1月4日",category:["苹果","水果"],tag:["红","大","圆"],excerpt:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",readingTime:{minutes:.12,words:36},title:"苹果 4",icon:"pen-to-square",type:"article"}}],["/posts/banana/1.html",{loader:()=>i.e(2325).then(i.bind(i,2199)),meta:{date:16413408e5,localizedDate:"2022年1月5日",category:["香蕉","水果"],tag:["黄","弯曲的","长"],excerpt:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",readingTime:{minutes:.13,words:38},title:"香蕉 1",icon:"pen-to-square",type:"article"}}],["/posts/banana/2.html",{loader:()=>i.e(8336).then(i.bind(i,2394)),meta:{date:16414272e5,localizedDate:"2022年1月6日",category:["香蕉","水果"],tag:["黄","弯曲的","长"],excerpt:"\n<p>一个被数字 <code>10</code> 星标了的香蕉文章。</p>\n",readingTime:{minutes:.18,words:55},title:"香蕉 2",icon:"pen-to-square",type:"article"}}],["/posts/banana/3.html",{loader:()=>i.e(3911).then(i.bind(i,7589)),meta:{date:16415136e5,localizedDate:"2022年1月7日",category:["香蕉"],tag:["黄","弯曲的","长"],excerpt:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",readingTime:{minutes:.12,words:36},title:"香蕉 3",icon:"pen-to-square",type:"article"}}],["/posts/banana/4.html",{loader:()=>i.e(8986).then(i.bind(i,4570)),meta:{date:16416e8,localizedDate:"2022年1月8日",category:["香蕉"],tag:["黄","弯曲的","长"],excerpt:"\n<h2>标题 2</h2>\n<p>这里是内容。</p>\n<h3>标题 3</h3>\n<p>这里是内容。</p>\n",readingTime:{minutes:.12,words:36},title:"香蕉 4",icon:"pen-to-square",type:"article"}}],["/auto/se/advanced/",{loader:()=>i.e(636).then(i.bind(i,78)),meta:{date:1741624426e3,category:["进阶"],tag:["进阶"],readingTime:{minutes:.06,words:18},title:"进阶",icon:"gem",order:3,type:"article"}}],["/auto/se/advanced/complex_scenes.html",{loader:()=>i.e(2034).then(i.bind(i,1045)),meta:{date:1741624426e3,excerpt:'<p>以下是 <strong>Selenium 中处理复杂交互操作</strong> 的完整指南，涵盖下拉框选择、弹窗处理、滚动条控制、文件上传及 Frame 切换，附带代码示例和避坑技巧：</p>\n<hr>\n<h1>复杂场景处理</h1>\n<h3><strong>一、下拉框选择（Select 元素）</strong></h3>\n<h4><strong>1. 核心方法</strong></h4>\n<p>针对 HTML 原生 <code>&lt;select&gt;</code> 元素，使用 <code>Select</code> 类：</p>\n<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium.webdriver.support.ui </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> Select</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">select_element </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">find_element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(By.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66">ID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"dropdown"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">select </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF"> Select</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(select_element)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 选择方式，这里针对的是标签&lt;option&gt;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">select.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">select_by_value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"value1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)     </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 按 value 属性选择</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">select.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">select_by_visible_text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Text"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 按显示文本选择</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">select.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">select_by_index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)            </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"># 按索引（从0开始）</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',readingTime:{minutes:5.79,words:1738},title:"复杂场景处理",type:"article"}}],["/auto/se/advanced/mouse_and_key.html",{loader:()=>i.e(8593).then(i.bind(i,7159)),meta:{date:1741624426e3,excerpt:'<p>以下是 <strong>Selenium 中鼠标和键盘操作</strong> 的详细指南，涵盖常见场景、代码示例及最佳实践：</p>\n<hr>\n<h1>鼠标和键盘操作</h1>\n<p>Selenium 通过 <code>ActionChains</code> 类模拟复杂的用户交互（鼠标、键盘、触控），需导入：</p>\n<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> selenium.webdriver.common.action_chains </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ActionChains</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',readingTime:{minutes:3.35,words:1006},title:"鼠标和键盘操作",type:"article"}}],["/auto/se/advanced/wait.html",{loader:()=>i.e(71).then(i.bind(i,6879)),meta:{date:1741624426e3,excerpt:"\n<h2><strong>一、隐式等待（Implicit Wait）</strong></h2>\n<h4><strong>1. 定义与特点</strong></h4>\n<ul>\n<li><strong>全局生效</strong>：对所有 <code>find_element</code> 和 <code>find_elements</code> 操作生效。</li>\n<li><strong>固定超时</strong>：设置一次后，后续所有元素查找均等待至元素出现或超时。</li>\n<li><strong>简单但低效</strong>：无法针对不同元素设置特定条件（如可见、可点击）。</li>\n</ul>",readingTime:{minutes:5.64,words:1692},title:"等待及动态元素处理",type:"article"}}],["/auto/se/base/",{loader:()=>i.e(2411).then(i.bind(i,7352)),meta:{date:1741624426e3,category:["基础"],tag:["基础"],readingTime:{minutes:.06,words:18},title:"基础",icon:"splotch",order:2,type:"article"}}],["/auto/se/base/browser_ctrl.html",{loader:()=>i.e(1663).then(i.bind(i,9857)),meta:{date:1741624426e3,category:["UI自动化测试"],tag:["selenium","元素定位"],sticky:!0,excerpt:"\n<p>以下是 <strong>Selenium 中浏览器控制</strong> 的核心操作详解，包含前进/后退、窗口切换及 Cookie 管理的代码示例与最佳实践。</p>\n<h2><strong>一、导航控制：前进/后退</strong></h2>\n<h3><strong>1. 核心方法</strong></h3>\n<ul>\n<li><strong>后退</strong>：<code>driver.back()</code></li>\n<li><strong>前进</strong>：<code>driver.forward()</code></li>\n<li><strong>刷新</strong>：<code>driver.refresh()</code></li>\n<li><strong>关闭当前窗口</strong>：<code>driver.close()</code></li>\n<li><strong>关闭浏览器驱动对象</strong>：<code>driver.quit()</code></li>\n</ul>",readingTime:{minutes:5.75,words:1725},title:"浏览器控制",icon:"pen-to-square",order:3,type:"article"}}],["/auto/se/base/el_operate.html",{loader:()=>i.e(2889).then(i.bind(i,5635)),meta:{date:1741970796e3,category:["UI自动化测试"],tag:["selenium","操作元素"],sticky:!0,excerpt:'\n<p>以下是 Selenium 中 <strong>定位元素后的常用操作方法</strong> 的详细解析，包含核心方法、实战场景及避坑指南：</p>\n<hr>\n<h2>一、基础交互操作</h2>\n<h3>1. 点击元素：<code>click()</code></h3>\n<h4>用途</h4>\n<p>触发元素的点击事件（如按钮、链接、复选框）。</p>\n<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">login_button </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">find_element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(By.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66">ID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"login-btn"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">login_button.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">click</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>',readingTime:{minutes:3.38,words:1014},title:"操作元素",icon:"pen-to-square",order:2,type:"article"}}],["/auto/se/intro/",{loader:()=>i.e(9660).then(i.bind(i,6348)),meta:{date:1741624426e3,readingTime:{minutes:.04,words:13},title:"介绍",icon:"circle-info",order:1,type:"article"}}],["/auto/se/intro/selenium4_and_selenium3.html",{loader:()=>i.e(3932).then(i.bind(i,7847)),meta:{date:1741624426e3,excerpt:"\n<p>以下是 <strong>Selenium 4.0</strong> 与 <strong>Selenium 3.0</strong> 的主要区别，从功能改进、API 变化到生态适配进行对比：</p>\n<h3><strong>一、核心改进</strong></h3>\n<table>\n<thead>\n<tr>\n<th><strong>特性</strong></th>\n<th><strong>Selenium 3.0</strong></th>\n<th><strong>Selenium 4.0</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>相对定位器</strong></td>\n<td>❌ 不支持</td>\n<td>✅ 新增 <code>RelativeLocator</code>（基于元素位置关系定位，如 <code>above()</code>, <code>below()</code>, <code>near()</code>）</td>\n</tr>\n<tr>\n<td><strong>Chrome DevTools 支持</strong></td>\n<td>❌ 需依赖第三方库（如 <code>puppeteer</code>）</td>\n<td>✅ 原生集成 <code>ChromeDevTools</code>，支持网络拦截、性能分析、地理位置模拟等</td>\n</tr>\n<tr>\n<td><strong>多标签页/窗口管理</strong></td>\n<td>❌ 需通过 <code>driver.switchTo().window()</code> 切换</td>\n<td>✅ 新增 <code>newWindow()</code> 方法，直接指定打开类型（标签页或窗口）</td>\n</tr>\n<tr>\n<td><strong>文档结构</strong></td>\n<td>❌ 文档分散且部分过时</td>\n<td>✅ 官网文档全面重构，提供更清晰的模块化指南和示例</td>\n</tr>\n</tbody>\n</table>",readingTime:{minutes:2.29,words:688},title:"Selenium 4 和 Selenium 3",type:"article"}}],["/auto/se/intro/ui_and_selenium_intro.html",{loader:()=>i.e(6868).then(i.bind(i,812)),meta:{date:1741278449e3,category:["UI自动化测试"],tag:["介绍","selenium"],sticky:!0,excerpt:"\n<h2>一、UI自动化测试</h2>\n<h3>1. 什么是UI自动化</h3>\n<p>通过程序脚本模拟人工操作对web应用以及app应用进行系统验证的过程（聚焦UI层）。</p>\n<h3>2. UI自动化测试在什么阶段开始</h3>\n<p>手工测试完成之后才做自动化测试，相当于是编写自动化测试代码（通过手工测试能够清楚的知道自动化测试的步骤以及结果）。</p>\n<h3>3. UI测试步骤举例</h3>\n<ol>\n<li>V1 通过手工测试完成之后，有10个功能。</li>\n<li>针对V1版本的10个功能，进行自动化的代码编写。</li>\n<li>V2 增加了10个功能（总共有20个功能）， V2版本的测试过程中，新增的10个功能使用手工测试，老的10个功能通过自动化来进行回归测试。</li>\n</ol>",readingTime:{minutes:4.24,words:1272},title:"UI自动化测试和Selenium介绍",icon:"pen-to-square",order:2,type:"article"}}],["/auto/se/project_practical/",{loader:()=>i.e(5399).then(i.bind(i,418)),meta:{date:1741624426e3,category:["项目"],tag:["项目"],readingTime:{minutes:.06,words:19},title:"项目",icon:"folder-tree",order:5,type:"article"}}],["/auto/se/project_practical/basic_use.html",{loader:()=>i.e(6169).then(i.bind(i,8387)),meta:{date:1741624426e3,excerpt:"<p>以下是 <strong>pytest 测试框架</strong> 的核心使用指南，涵盖基础用法、断言方法、Fixture（setup/teardown）机制和常用插件：</p>\n<hr>\n<h1>pytest基础和断言</h1>\n<h3><strong>一、pytest 基础使用</strong></h3>\n<h4>1. 特点</h4>\n<ol>\n<li>非常容易上手，入门简单，文档丰富，文档中有很多参考实例；</li>\n<li>支持简单的单元测试和复杂的功能测试；</li>\n<li>支持参数化；</li>\n<li>执行测试用例过程中，支持跳过操作；</li>\n<li>支持重复执行失败的case；</li>\n<li>支持运行由Nose，unittest编写的测试case；</li>\n<li>pytest支持很多第三方插件；</li>\n<li>方便的和持续集成工具集成。</li>\n</ol>",readingTime:{minutes:3.54,words:1061},title:"pytest基础和断言",type:"article"}}],["/auto/se/pytest/",{loader:()=>i.e(8393).then(i.bind(i,4375)),meta:{date:1741624426e3,category:["Pytest"],tag:["Pytest"],readingTime:{minutes:.05,words:15},title:"Pytest",icon:"leaf",order:4,type:"article"}}],["/auto/se/pytest/basic_use.html",{loader:()=>i.e(1891).then(i.bind(i,882)),meta:{date:1741624426e3,category:["UI自动化测试","selenium"],tag:["selenium","元素定位","pytest","base"],sticky:!0,excerpt:"\n<p>以下是 <strong>pytest 测试框架</strong> 的核心使用指南，涵盖基础用法、断言方法、Fixture（setup/teardown）机制和常用插件：</p>\n<hr>\n<h2><strong>一、pytest 基础使用</strong></h2>\n<h3>1. 特点</h3>\n<ol>\n<li>非常容易上手，入门简单，文档丰富，文档中有很多参考实例；</li>\n<li>支持简单的单元测试和复杂的功能测试；</li>\n<li>支持参数化；</li>\n<li>执行测试用例过程中，支持跳过操作；</li>\n<li>支持重复执行失败的case；</li>\n<li>支持运行由Nose，unittest编写的测试case；</li>\n<li>pytest支持很多第三方插件；</li>\n<li>方便的和持续集成工具集成。</li>\n</ol>",readingTime:{minutes:2.71,words:814},title:"基础和断言",icon:"pen-to-square",order:1,type:"article"}}],["/auto/se/pytest/execute_cmd.html",{loader:()=>i.e(1413).then(i.bind(i,3882)),meta:{date:1741710583e3,category:["UI自动化测试","selenium"],tag:["selenium","元素定位","pytest","cmd"],sticky:!0,excerpt:'\n<p>以下是 <strong>pytest 执行命令的详细指南</strong>，涵盖目录、模块、用例筛选及常用参数组合，助你精准控制测试范围：</p>\n<hr>\n<h3><strong>一、基础执行命令</strong></h3>\n<h4><strong>1. 运行所有测试</strong></h4>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pytest</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',readingTime:{minutes:2.4,words:720},title:"执行命令",icon:"pen-to-square",order:4,type:"article"}}],["/auto/se/pytest/fixture.html",{loader:()=>i.e(8080).then(i.bind(i,1468)),meta:{date:1741624426e3,category:["UI自动化测试","selenium"],tag:["selenium","元素定位","pytest","fixture"],sticky:!0,excerpt:"\n<h3><strong>一、Fixture 基础</strong></h3>\n<h4><strong>1. 什么是 Fixture？</strong></h4>\n<ul>\n<li><strong>定义</strong>：Fixture 是 pytest 中用于 <strong>封装测试依赖</strong> 的机制，替代传统的 <code>setup/teardown</code> 方法。</li>\n<li><strong>功能</strong>：\n<ul>\n<li>提供测试数据</li>\n<li>初始化/清理资源（如数据库连接、临时文件）</li>\n<li>共享配置逻辑</li>\n</ul>\n</li>\n</ul>",readingTime:{minutes:5.66,words:1697},title:"夹具（Fixture）",icon:"pen-to-square",order:2,type:"article"}}],["/auto/se/pytest/parameters.html",{loader:()=>i.e(4273).then(i.bind(i,5424)),meta:{date:1741798759e3,excerpt:'\n<p>以下是关于 <strong>pytest 参数化（<code>@pytest.mark.parametrize</code>）</strong> 的详细指南，涵盖基础语法、高级用法及实战技巧：</p>\n<hr>\n<h2><strong>一、参数化核心概念</strong></h2>\n<h3><strong>1. 作用</strong></h3>\n<p>通过 <strong>多组输入数据驱动同一测试逻辑</strong>，避免重复编写测试代码，提升覆盖率和可维护性。</p>\n<h3><strong>2. 基本语法</strong></h3>\n<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> pytest</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">@pytest</span><span style="--shiki-light:#4078F2;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mark</span><span style="--shiki-light:#4078F2;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">parametrize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"参数名1, 参数名2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">值1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF"> 值2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">值3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF"> 值4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)])</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_example</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic">参数名1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic"> 参数名2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">):</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    assert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> 逻辑表达式</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',readingTime:{minutes:3.35,words:1004},title:"参数化",type:"article"}}],["/auto/se/pytest/plugin.html",{loader:()=>i.e(3238).then(i.bind(i,6376)),meta:{date:1741710583e3,category:["UI自动化测试","selenium"],tag:["selenium","元素定位","pytest","plugin"],sticky:!0,excerpt:'\n<p>以下是 <strong>pytest 常用插件</strong> 的详细解析，涵盖核心功能、使用场景及实战示例：</p>\n<hr>\n<h3><strong>一、测试体验增强</strong></h3>\n<h4><strong>1. pytest-sugar</strong></h4>\n<ul>\n<li>\n<p><strong>功能</strong>：美化控制台输出，显示进度条和彩色结果。</p>\n</li>\n<li>\n<p><strong>安装</strong>：</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pytest-sugar</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>效果</strong>：</p>\n<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">✓</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test_pass.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ✔</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">✗</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test_fail.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ✘</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></li>\n<li>\n<p><strong>特性</strong>：</p>\n<ul>\n<li>自动隐藏冗长的 <code>Traceback</code> 信息（可配置）</li>\n<li>支持 <code>--plain</code> 参数恢复原始输出</li>\n</ul>\n</li>\n</ul>',readingTime:{minutes:2.91,words:873},title:"常用插件",icon:"pen-to-square",order:3,type:"article"}}],["/auto/se/sundry/CSS_Selector_pseudo.html",{loader:()=>i.e(4185).then(i.bind(i,1629)),meta:{date:1742139779e3,excerpt:"\n<p>以下是 <strong>Selenium 中 CSS Selector 伪类选择器</strong> 的详细解析，涵盖常用伪类、适用场景及实战代码示例：</p>\n<hr>\n<h2>一、伪类选择器核心概念</h2>\n<h3>1. 定义</h3>\n<p>伪类选择器用于 <strong>定义元素的特殊状态</strong> 或 <strong>基于DOM结构的逻辑定位</strong>，以 <code>:</code> 符号开头。</p>\n<h3>2. 与伪元素的区别</h3>\n<ul>\n<li><strong>伪类</strong>（Pseudo-classes）：描述元素状态（如悬停、焦点）</li>\n<li><strong>伪元素</strong>（Pseudo-elements）：选择元素的特定部分（如 <code>::before</code>，<code>::first-line</code>）<br>\n<strong>注意</strong>：Selenium 主要支持伪类选择器，不支持伪元素选择元素。</li>\n</ul>",readingTime:{minutes:3.31,words:993},title:"CSS Selector 伪类选择器",type:"article"}}],["/auto/se/sundry/",{loader:()=>i.e(9377).then(i.bind(i,356)),meta:{date:1741624426e3,readingTime:{minutes:.04,words:13},title:"杂项",icon:"circle-info",order:10,type:"article"}}],["/auto/se/sundry/fixture_side_effects.html",{loader:()=>i.e(5721).then(i.bind(i,2866)),meta:{date:1741624426e3,excerpt:"\n<h3><strong>一、为什么需要避免 Fixture 副作用？</strong></h3>\n<p><strong>副作用（Side Effects）</strong> 指 Fixture 在测试过程中 <strong>意外修改了共享资源的状态</strong>，导致：</p>\n<ul>\n<li><strong>测试污染</strong>：测试 A 修改了资源，影响测试 B 的结果</li>\n<li><strong>随机失败</strong>：测试执行顺序不同导致结果不稳定</li>\n<li><strong>调试困难</strong>：问题难以复现，尤其是并行测试时</li>\n</ul>",readingTime:{minutes:2.95,words:886},title:"Fixture 副作用",type:"article"}}],["/auto/se/sundry/headless_diff.html",{loader:()=>i.e(7702).then(i.bind(i,4195)),meta:{date:1741798759e3,excerpt:"\n<p>在 <strong>Headless 模式（无头模式）</strong> 下，部分浏览器窗口控制方法的行为可能与常规模式不同。以下是具体差异的总结：</p>\n<hr>\n<h3><strong>一、可能表现不同的方法</strong></h3>\n<table>\n<thead>\n<tr>\n<th><strong>方法</strong></th>\n<th><strong>常规模式行为</strong></th>\n<th><strong>Headless 模式注意事项</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>maximize_window()</code></td>\n<td>窗口最大化，显示地址栏和工具栏</td>\n<td><strong>可能无效</strong>，部分驱动（如 Chrome）在 Headless 下默认以固定分辨率运行</td>\n</tr>\n<tr>\n<td><code>set_window_size()</code></td>\n<td>精确调整窗口尺寸</td>\n<td><strong>受驱动限制</strong>，部分浏览器可能忽略或默认固定分辨率（如 Firefox Headless 默认 1366x768）</td>\n</tr>\n<tr>\n<td><code>set_window_position()</code></td>\n<td>调整窗口在屏幕中的位置</td>\n<td><strong>通常无效</strong>，Headless 模式无实际屏幕坐标系统</td>\n</tr>\n<tr>\n<td><code>fullscreen_window()</code></td>\n<td>全屏隐藏浏览器 UI</td>\n<td><strong>可能无效</strong>，无实际界面可操作</td>\n</tr>\n</tbody>\n</table>",readingTime:{minutes:1.74,words:521},title:"Headless下浏览器窗口控制方法",type:"article"}}],["/auto/se/sundry/pytest_all_old.html",{loader:()=>i.e(5888).then(i.bind(i,8811)),meta:{date:1741624426e3,excerpt:'\n<h3>3.1. 目标</h3>\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1. 能够安装 pytest 框架</span></span>\n<span class="line"><span>2. 能够了解 pytest 主函数的运行方式</span></span>\n<span class="line"><span>3. 能够掌握 pytest 命令行的运行方式</span></span>\n<span class="line"><span>4. 能够掌握 setup 和 teardown 方法</span></span>\n<span class="line"><span>5. 能够掌握 setup_class 和 teardown_class 方法</span></span>\n<span class="line"><span>6. 能够理解 pytest 配置文件的含义</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',readingTime:{minutes:10.24,words:3072},title:"pytest测试框架（旧）",type:"article"}}],["/auto/se/sundry/request.html",{loader:()=>i.e(5032).then(i.bind(i,8787)),meta:{date:1741710583e3,excerpt:"\n<p>在 Selenium 中结合 pytest 使用 <strong><code>Fixture</code></strong> 时，<code>request</code> 是一个非常重要的内置 Fixture 参数。它允许你在 Fixture 中访问当前测试用例的上下文信息（如参数、测试函数名称、模块等），从而实现动态控制 Fixture 的行为。以下是 <code>request</code> 的详细解析和典型用法：</p>\n<h3><strong>1. <code>request</code> 的核心作用</strong></h3>\n<p><code>request</code> 是 pytest 提供的一个内置 Fixture，当你在自定义 Fixture 中声明 <code>request</code> 参数时，pytest 会自动注入当前测试请求的上下文对象。通过 <code>request</code>，你可以：</p>",readingTime:{minutes:3.04,words:911},title:"request",type:"article"}}],["/jmeter/guide/assert/",{loader:()=>i.e(9898).then(i.bind(i,5761)),meta:{date:1741624426e3,category:["JMeter"],tag:["assert"],readingTime:{minutes:.05,words:16},title:"断言",icon:"splotch",order:6,type:"article"}}],["/jmeter/guide/assert/duration.html",{loader:()=>i.e(4656).then(i.bind(i,4148)),meta:{date:1743183812e3,category:["JMeter"],tag:["Assert","Duration"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<p>约定响应时间，响应时间如果超出约定，则断言为失败</p>\n<h2>断言持续时间</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200825110659890-1450517067.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200825110659890-1450517067.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:.72,words:217},title:"断言持续时间",icon:"pen-to-square",order:-12,type:"article"}}],["/jmeter/guide/assert/intro.html",{loader:()=>i.e(8460).then(i.bind(i,5973)),meta:{date:1743183812e3,category:["JMeter"],tag:["assert","介绍"],sticky:!0,excerpt:"\n<h2>断言的介绍</h2>\n<ul>\n<li>可以断言服务器的响应内容</li>\n<li>在性能测试脚本中使用断言，一般是为了<strong>调试脚本</strong></li>\n<li>在接口自动化测试中使用断言，一般是为了严谨的校验<strong>接口响应内容</strong>是否符合预期</li>\n</ul>\n<h2>断言成功与否</h2>\n<ul>\n<li>断言成功与否，可以通过<strong>监听器-断言结果</strong>查看</li>\n<li>如果断言失败，则将此请求标记为失败，还会显示在<strong>察看结果树</strong>中，错误率会显示在聚合报告中</li>\n</ul>",readingTime:{minutes:.96,words:288},title:"入门介绍",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/guide/assert/json.html",{loader:()=>i.e(7378).then(i.bind(i,3997)),meta:{date:1743183812e3,category:["JMeter"],tag:["Assert","Json"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<p>可以对 JSON 格式的响应内容进行断言</p>\n<h2>JSON 断言</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200825114057201-753123499.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200825114057201-753123499.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:1.39,words:418},title:"JSON 断言",icon:"pen-to-square",order:3,type:"article"}}],["/jmeter/guide/assert/response.html",{loader:()=>i.e(9763).then(i.bind(i,534)),meta:{date:1743183812e3,category:["JMeter"],tag:["Assert","Response"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<p>不仅可以对响应内容进行断言，还能对请求内容进行断言</p>\n<h2>响应断言</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200825092607564-1160861641.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200825092607564-1160861641.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:2.24,words:671},title:"响应断言",icon:"pen-to-square",order:2,type:"article"}}],["/jmeter/guide/config/",{loader:()=>i.e(958).then(i.bind(i,3583)),meta:{date:1741624426e3,category:["JMeter"],tag:["config"],readingTime:{minutes:.06,words:18},title:"配置元件",icon:"splotch",order:9,type:"article"}}],["/jmeter/guide/config/counter.html",{loader:()=>i.e(8742).then(i.bind(i,8112)),meta:{date:1743183812e3,category:["JMeter"],tag:["counter","csv"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<ul>\n<li>计数器的作用：循环递增生成数字</li>\n<li>计数器使用 long 来存储值，因此取值范围是 <strong>-2 ^ 63</strong> 到 <strong>2 ^ 63-1</strong></li>\n<li>可以在线程组任意地方添加计数器</li>\n</ul>\n<h2>计数器</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200625201757726-1437495883.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200625201757726-1437495883.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:2.22,words:667},title:"详解 Counter 计数器",icon:"pen-to-square",order:-1,type:"article"}}],["/jmeter/guide/config/csv.html",{loader:()=>i.e(6098).then(i.bind(i,8741)),meta:{date:1743183812e3,category:["JMeter"],tag:["config","csv"],sticky:!0,excerpt:'\n<h2>了解一哈什么是 CSV 文件</h2>\n<ul>\n<li>为了实现简单的数据存储，是一个纯文本的文件</li>\n<li>最通用的一种文件格式，它可以非常容易地被导入各种PC表格及数据库中</li>\n<li>CSV 文件可以用记事本、excel打开；用记事本打开的话，每一列数据都用逗号隔开</li>\n</ul>\n<h2>为什么要用 CSV 数据文件？</h2>\n<ul>\n<li>从外部导入测试数据，相当于数据参数化</li>\n<li>通过从文件中导入大量的测试数据，来模拟大量真实用户发送并发请求</li>\n</ul>\n<h2>CSV 数据文件设置</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200624155812960-1450149285.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200624155812960-1450149285.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:2.97,words:891},title:"CSV 数据文件配置",icon:"pen-to-square",order:2,type:"article"}}],["/jmeter/guide/config/http_cookie.html",{loader:()=>i.e(8337).then(i.bind(i,991)),meta:{date:1743183812e3,category:["JMeter"],tag:["config","HTTP_Cookie"],sticky:!0,excerpt:"\n<h2>简单介绍</h2>\n<h4>功能一</h4>\n<ul>\n<li>首先，它像网络浏览器一样存储和发送 cookie</li>\n<li>如果有一个HTTP请求，并且响应包含 cookie，则 cookie 管理器会<strong>自动存储</strong>该 cookie，并将其用于后面对该特定网站的所有请求</li>\n<li>cookie 管理自动存储的 cookie 不会出现在 Cookie Manager 的界面上，但是可以使用通过查看结果树看到它</li>\n</ul>\n<h4>功能二</h4>\n<ul>\n<li>JMeter 会检查收到的 Cookie 是否对该URL有效，这意味着<strong>不会存储跨域 Cookie</strong></li>\n<li>如果有错误的行为或希望使用跨域cookie，请定义 JMeter 属性</li>\n</ul>",readingTime:{minutes:2.87,words:862},title:"HTTP Cookie管理器",icon:"pen-to-square",order:4,type:"article"}}],["/jmeter/guide/config/http_header.html",{loader:()=>i.e(610).then(i.bind(i,8747)),meta:{date:1743183812e3,category:["JMeter"],tag:["samplers","HTTP header"],sticky:!0,excerpt:'\n<h2>HTTP 信息头管理器</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200619191026231-151570626.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200619191026231-151570626.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:1.43,words:430},title:"详解 HTTP 信息头管理器",icon:"pen-to-square",order:3,type:"article"}}],["/jmeter/guide/config/http_request%20_defaults.html",{loader:()=>i.e(2881).then(i.bind(i,1724)),meta:{date:1743183812e3,category:["JMeter"],tag:["Request","Config"],sticky:!0,excerpt:'\n<h2>HTTP 请求默认值界面介绍</h2>\n<figure><img src="/assets/jmeter/1896874-20200619145213878-1405545719.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>\n<p>乍眼一看，其实跟 HTTP Request 的界面基本一样，少了一点点东西而已，所以这里就不介绍每个字段的含义了，来说下注意事项</p>\n<h3>重点</h3>\n<ul>\n<li>HTTP 请求默认值可以直接添加到<strong>线程组下面</strong>，也可以添加到某个 <strong>HTTP 请求下面</strong></li>\n<li>如果是在线程组下的 HTTP 请求默认值，那么它的<strong>作用域</strong>就是该线程组下的<strong>所有 HTTP 请求</strong>，包括子级、孙子级、孙孙子级的 HTTP 请求</li>\n<li>如果实在某个 HTTP 请求下的 HTTP 请求默认值，那么它的<strong>作用域</strong>就只针对<strong>这个 HTTP 请求</strong></li>\n<li>线程组的 HTTP 请求默认值的<strong>优先级小于</strong>HTTP 请求下的 HTTP请求默认值</li>\n<li>当然啦，所有 HTTP 请求默认值的<strong>优先级</strong>都比 HTTP 请求<strong>低</strong></li>\n</ul>',readingTime:{minutes:2.85,words:856},title:"HTTP请求默认值",icon:"pen-to-square",order:6,type:"article"}}],["/jmeter/guide/config/intro.html",{loader:()=>i.e(5456).then(i.bind(i,2069)),meta:{date:1743183812e3,category:["JMeter"],tag:["config","介绍"],sticky:!0,excerpt:'\n<h2>配置元件介绍</h2>\n<ul>\n<li>配置元件和取样器的关系十分紧密</li>\n<li>比如说常用的：HTTP默认值，设置数据库连接，FTP连接等</li>\n</ul>\n<h2>有什么配置元件</h2>\n<figure><img src="/assets/jmeter/1896874-20200618151856614-2073071082.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>\n<p><strong>后面，我们会对每个常用的配置元件单独讲解哦！</strong></p>',readingTime:{minutes:.3,words:91},title:"入门介绍",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/guide/config/random_variable.html",{loader:()=>i.e(5342).then(i.bind(i,9911)),meta:{date:1743183812e3,category:["JMeter"],tag:["config","Random_Variable"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<p>Random Variable 用于生成随机<strong>数字字符串</strong>并将其存储在变量中，以备后用</p>\n<h4>相比 __Random 的优势</h4>\n<ul>\n<li>__Random 函数也可以生成随机数字字符串，但如果要重复引用的话，需要结合用户自定义变量控件（User Defined Variables）</li>\n<li>使用 Random Variable 可以生成完随机数字字符串后存储在变量中，可以直接重复引用</li>\n</ul>\n<h2>随机变量（Random Variable）</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200819102951059-419699572.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200819102951059-419699572.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:2.41,words:724},title:"详解随机变量",icon:"pen-to-square",order:-6,type:"article"}}],["/jmeter/guide/config/user_%20Defined_%20Variables.html",{loader:()=>i.e(9243).then(i.bind(i,3752)),meta:{date:1743183812e3,category:["JMeter"],tag:["config","Defined"],sticky:!0,excerpt:'\n<h2>用户自定义变量</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200622103023755-988297635.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200622103023755-988297635.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:1.34,words:401},title:"用户自定义变量",icon:"pen-to-square",order:17,type:"article"}}],["/jmeter/guide/controllers/",{loader:()=>i.e(8129).then(i.bind(i,1614)),meta:{date:1741624426e3,category:["JMeter"],tag:["指南"],readingTime:{minutes:.06,words:18},title:"控制器",icon:"splotch",order:3,type:"article"}}],["/jmeter/guide/controllers/intro.html",{loader:()=>i.e(3235).then(i.bind(i,5682)),meta:{date:1743183812e3,category:["JMeter"],tag:["controllers","介绍"],sticky:!0,excerpt:'\n<h2>Controllers 简介</h2>\n<ul>\n<li><strong>Jmeter有两种类型的控制器</strong>：Samplers（取样器）和Logical Controllers（逻辑控制器）；它们驱动着测试的进行</li>\n<li><strong>取样器</strong>：让Jmeter 发送请求到服务器</li>\n<li><strong>逻辑控制器</strong>：可以自定义决定发送请求的时机的逻辑</li>\n<li>控制器是为了控制取样器的执行条件</li>\n</ul>\n<figure><img src="/assets/jmeter/image-20250326231625847.png" alt="取样器" tabindex="0" loading="lazy"><figcaption>取样器</figcaption></figure>',readingTime:{minutes:.39,words:116},title:"入门介绍",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/guide/listeners/",{loader:()=>i.e(7901).then(i.bind(i,5643)),meta:{date:1741624426e3,category:["JMeter"],tag:["listeners"],readingTime:{minutes:.06,words:17},title:"监听器",icon:"splotch",order:10,type:"article"}}],["/jmeter/guide/listeners/intro.html",{loader:()=>i.e(879).then(i.bind(i,8425)),meta:{date:1743183812e3,category:["JMeter"],tag:["Listeners","介绍"],sticky:!0,excerpt:"\n<h2>Listeners 的简介</h2>\n<p>监听器提供了在Jmeter运行时，收集运行信息的权利</p>\n<h2>常见的监听器</h2>\n<ul>\n<li>**Graph Results ：**在图表上绘制响应时间</li>\n<li>**View Result Tree：**最常用的查看结果树，显示Samplers请求和响应的详细信息，可以通过多种格式显示（如：HTML、XML）</li>\n<li>其他监听器提供摘要或聚合信息</li>\n</ul>\n<h2>保存数据到本地</h2>\n<ul>\n<li>每个监听器都可以将收集到的数据<strong>保存到指定文件</strong></li>\n<li>可以指定要保持的字段，以及文件的格式（CSV还是XML文件）</li>\n</ul>",readingTime:{minutes:1.52,words:456},title:"入门介绍",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/guide/plugin/",{loader:()=>i.e(6079).then(i.bind(i,8128)),meta:{date:1741624426e3,category:["JMeter"],tag:["指南"],readingTime:{minutes:.06,words:17},title:"插件",icon:"splotch",order:8,type:"article"}}],["/jmeter/guide/plugin/items.html",{loader:()=>i.e(8503).then(i.bind(i,8443)),meta:{date:1743183812e3,excerpt:'\n<table>\n<thead>\n<tr>\n<th>序号</th>\n<th>插件包</th>\n<th>插件</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>3 Basic Graphs</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>2</td>\n<td>5 Additional Graphs（5个其他图表）</td>\n<td>Response Codes</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>Bytes Throughput</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>Connect Times</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>Latency</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>Hits/s</td>\n<td></td>\n</tr>\n<tr>\n<td>3</td>\n<td>Composite Timeline Graph（复合时间线图）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>4</td>\n<td>Custom JMeter Functions（自定义 JMeter 函数）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>5</td>\n<td>Custom Thread Groups（自定义线程组）</td>\n<td><a href="/jmeter/guide/threads/step.html" target="_blank">Stepping Thread Group</a>（阶梯加压线程组）</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td><a href="/jmeter/guide/threads/ultimate.html" target="_blank">Ultimate Thread Group</a>（终极线程组）</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td><a href="/jmeter/guide/threads/concurrency.html" target="_blank">Concurrency Thread Group</a>（并发线程组）</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>Arrivals Thread Group（抵达线程组）</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>Free-Form Arrivals Thread Group（自由到达线程组）</td>\n<td></td>\n</tr>\n<tr>\n<td>6</td>\n<td>Dummy Sampler（虚拟采样器）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>7</td>\n<td>Flexible File Writer（灵活的文件写入器）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>8</td>\n<td>HTTP Simple Table Server（HTTP 简单表服务器）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>9</td>\n<td>Inter-Thread Communication（线程间通信）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>10</td>\n<td>JSON/YAML Plugins (deprecated)（JSON/YAML 插件（已弃用））</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>11</td>\n<td>KPI VS KPI Graphs（KPIVS KPI 图表）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>12</td>\n<td>PerfMon (Servers Performance Monitoring)（PerfMon（服务器性能监控））</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>13</td>\n<td>Plugins Manager（插件管理器）</td>\n<td></td>\n<td>自带的插件</td>\n</tr>\n<tr>\n<td>14</td>\n<td>Selenium/WebDriver Support（Selenium/WebDriver 支持）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>15</td>\n<td>Throughput Shaping Timer（吞吐量整形计时器）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>16</td>\n<td>UDP Protocol Support（支持 UDP 协议）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>17</td>\n<td>Weighted Switch Controller（权重控制器）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>18</td>\n<td>jmeter - Core（核心）</td>\n<td></td>\n<td>自带的插件</td>\n</tr>\n<tr>\n<td>19</td>\n<td>jmeter - FTP Protocol Support（FTP 协议支持）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>20</td>\n<td>jmeter - HTTP Protocol Support（HTTP 协议支持）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>21</td>\n<td>jmeter - JDBC Support（JDBC 支持）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>22</td>\n<td>Jmeter - JMS Support（JMS 支持）</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>23</td>\n<td>jmeter - JUnit Support</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>24</td>\n<td>Jmeter - Java Components</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>25</td>\n<td>jmeter - LDAP Protocol Support</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>26</td>\n<td>jmeter - Mail/SMIP Support</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>27</td>\n<td>jmeter - MongoDB Support</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>28</td>\n<td>jmeter - OS Process Support</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>29</td>\n<td>jmeter - TCP Protocol Support</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>30</td>\n<td>jmeter - Various Core Components</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>31</td>\n<td>jpgc - Standard Set</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>',readingTime:{minutes:1.07,words:320},title:"插件列表",type:"article"}}],["/jmeter/guide/plugin/start.html",{loader:()=>i.e(4899).then(i.bind(i,5444)),meta:{date:1743183812e3,excerpt:'\n<h2><strong>前言</strong></h2>\n<ul>\n<li>jmeter4.0以上，如现在最新的5.2.1版本是有<strong>集成插件</strong>的</li>\n<li>只需要在官网下载 plugins-manager.jar 包，放在jmeter安装路径的<code>lib/ext</code>目录下即可使用：<a href="https://jmeter-plugins.org/install/Install/" target="_blank" rel="noopener noreferrer">https://jmeter-plugins.org/install/Install/</a></li>\n<li>但并不能满足所有需求，仍然需要安装其他插件</li>\n<li><a href="https://jmeter-plugins.org/stats/%EF%BC%9A%E5%8F%AF%E4%BB%A5%E6%9F%A5%E7%9C%8B%E7%9B%AE%E5%89%8D%E6%9C%80%E6%B5%81%E8%A1%8C%E7%9A%84%E6%8F%92%E4%BB%B6" target="_blank" rel="noopener noreferrer">https://jmeter-plugins.org/stats/：可以查看目前最流行的插件</a></li>\n</ul>',readingTime:{minutes:.99,words:296},title:"jmeter插件入门篇",type:"article"}}],["/jmeter/guide/processor/",{loader:()=>i.e(3580).then(i.bind(i,4026)),meta:{date:1741624426e3,category:["JMeter"],tag:["processor"],readingTime:{minutes:.06,words:17},title:"处理器",icon:"splotch",order:5,type:"article"}}],["/jmeter/guide/processor/intro.html",{loader:()=>i.e(9766).then(i.bind(i,9949)),meta:{date:1743183812e3,category:["JMeter"],tag:["processor","介绍"],sticky:!0,excerpt:'\n<h2>前置处理器</h2>\n<ul>\n<li>在发出取样器<strong>请求前</strong>执行一些操作</li>\n<li>用的比较多的是：设置一些参数、修改取样器的设置、脚本预处理</li>\n</ul>\n<h4>有什么前置处理器</h4>\n<figure><img src="/assets/jmeter/1896874-20200617175741944-1861675942.png" alt="前置处理器" tabindex="0" loading="lazy"><figcaption>前置处理器</figcaption></figure>\n<h2>后置处理器</h2>\n<ul>\n<li>在取样器请求<strong>发出后</strong>执行一些操作</li>\n<li>用的比较多的是：处理响应数据，提取某个值</li>\n</ul>',readingTime:{minutes:.52,words:157},title:"入门介绍",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/guide/test_plan/",{loader:()=>i.e(4634).then(i.bind(i,3419)),meta:{date:1741624426e3,category:["JMeter"],tag:["指南"],readingTime:{minutes:.06,words:19},title:"测试计划",icon:"splotch",order:1,type:"article"}}],["/jmeter/guide/test_plan/intro.html",{loader:()=>i.e(8476).then(i.bind(i,8377)),meta:{date:1742745308e3,category:["JMeter"],tag:["测试计划","概述"],sticky:!0,excerpt:'\n<h2>一、测试计划的作用</h2>\n<ul>\n<li>测试计划描述了 Jmeter 在执行时，一系列的步骤</li>\n<li>一个完整的测试计划包含了一个或多个【线程组、逻辑控制器、采样器、监听器、定时器、断言和配置元素】</li>\n</ul>\n<h2>二、添加元件</h2>\n<figure><img src="/assets/jmeter/1896874-20200426132704174-1329470436.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>\n<ul>\n<li>通过右键点击树中的元件，选中要添加的元件</li>\n<li>也可以通过合并（merge）或打开（open）从文件中加载和添加元件</li>\n</ul>',readingTime:{minutes:2.59,words:777},title:"入门介绍",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/guide/test_plan/para_detail.html",{loader:()=>i.e(6184).then(i.bind(i,7400)),meta:{date:1743183812e3,category:["JMeter"],tag:["测试计划","详解","参数"],sticky:!0,excerpt:'\n<h2>一、概述</h2>\n<p>本篇主要讲解测试计划的所有参数内容。</p>\n<figure><img src="/assets/jmeter/1896874-20200503194917613-1313384110.png" alt="测试计划参数" tabindex="0" loading="lazy"><figcaption>测试计划参数</figcaption></figure>\n<h2>二、前置条件</h2>\n<ol>\n<li>已了解测试计划的作用：参考<a href="/jmeter/guide/test_plan/intro.html" target="_blank">测试计划的作用</a></li>\n</ol>',readingTime:{minutes:2.1,words:630},title:"测试计划参数详解",icon:"pen-to-square",order:2,type:"article"}}],["/jmeter/guide/threads/",{loader:()=>i.e(2213).then(i.bind(i,330)),meta:{date:1741624426e3,category:["JMeter"],tag:["线程组"],readingTime:{minutes:.06,words:19},title:"线程组",icon:"splotch",order:2,type:"article"}}],["/jmeter/guide/threads/Thread_Group.html",{loader:()=>i.e(3605).then(i.bind(i,315)),meta:{date:1742745308e3,category:["JMeter"],tag:["基础","thread"],sticky:!0,excerpt:'\n<p>Thread Group：基础线程组</p>\n<h2>一、线程组介绍</h2>\n<p><strong>路径</strong>：右键点击 测试计划 --&gt; 添加 --&gt; 线程（用户） --&gt; 线程组</p>\n<figure><img src="/assets/jmeter/202402291144269.png" alt="添加线程组" tabindex="0" loading="lazy"><figcaption>添加线程组</figcaption></figure>\n<h3>1. 简单理解</h3>\n<ul>\n<li>线程组是一个测试计划的开始点</li>\n<li>在一个测试计划中的所有元件都必须在某个线程组下</li>\n<li>线程组决定 Jmeter 执行测试计划的<strong>线程数</strong></li>\n</ul>',readingTime:{minutes:6.3,words:1889},title:"线程组",icon:"pen-to-square",order:-1,type:"article"}}],["/jmeter/guide/threads/concurrency.html",{loader:()=>i.e(4902).then(i.bind(i,2926)),meta:{date:1743183812e3,category:["JMeter"],tag:["Thread","Concurrency"],sticky:!0,excerpt:"\n<p>Concurrency Thread Group：并发线程组</p>\n<h2>Concurrency Thread Group的介绍</h2>\n<ul>\n<li>Concurrency Thread Group提供了用于配置多个线程计划的简化方法</li>\n<li>该线程组目的是为了保持并发水平，意味着如果并发线程不够，则在运行线程中启动额外的线程</li>\n<li>和Standard Thread Group不同，它不会预先创建所有线程，因此不会使用额外的内存</li>\n<li>对于上篇讲到的Stepping Thread Group来说，Concurrency Thread Group是个更好的选择，因为它允许线程优雅地完成其工作</li>\n<li>Concurrency Thread Group提供了更好的用户行为模拟，因为它使您可以更轻松地控制测试的时间，并创建替换线程以防线程在过程中完成</li>\n</ul>",readingTime:{minutes:4.11,words:1232},title:"Concurrency Thread Group",icon:"pen-to-square",order:4,type:"article"}}],["/jmeter/guide/threads/important.html",{loader:()=>i.e(8595).then(i.bind(i,3451)),meta:{date:1743183812e3,category:["JMeter"],tag:["Threads","Important"],sticky:!0,excerpt:"\n<h2>重点一</h2>\n<p>每个测试计划至少需要有一个线程组</p>\n<h2>线程组下不同组件的执行优先级/顺序</h2>\n<ol>\n<li>配置元件、监听器</li>\n<li>前置处理器</li>\n<li>定时器</li>\n<li>逻辑控制器</li>\n<li>取样器</li>\n<li>后置处理器</li>\n<li>断言</li>\n</ol>\n<h2>取样器执行顺序</h2>\n<p>在没有逻辑控制器情况下，取样器是按从上往下的顺序执行的</p>\n<p>持续更新ing.....</p>\n",readingTime:{minutes:.45,words:135},title:"线程组中的一些重点事项",icon:"pen-to-square",order:2,type:"article"}}],["/jmeter/guide/threads/step.html",{loader:()=>i.e(1159).then(i.bind(i,8122)),meta:{date:1743183812e3,category:["JMeter"],tag:["Thread","Stepping"],sticky:!0,excerpt:"\n<p>Stepping Thread Group：阶梯加压线程组</p>\n<h2>前言</h2>\n<ul>\n<li>Stepping Thread Group是第一个自定义线程组</li>\n<li>但，随着版本的迭代，已经有更好的线程组代替Stepping Thread Group了【Concurrency Thread Group】，所以说Stepping Thread Group已经是过去式了</li>\n<li>但，咱们还是要介绍下的滴</li>\n</ul>\n<h2>Stepping Thread Group的特性</h2>\n<ul>\n<li>有预览图显示估计的负载</li>\n<li>可延迟启动线程组</li>\n<li>可持续增加线程负载</li>\n<li>可设置最大负载的持续运行时间</li>\n</ul>",readingTime:{minutes:2.38,words:713},title:"Stepping Thread Group",icon:"pen-to-square",order:6,type:"article"}}],["/jmeter/guide/threads/ultimate.html",{loader:()=>i.e(2998).then(i.bind(i,5068)),meta:{date:1742636675e3,category:["JMeter"],tag:["Thread","Ultimate"],sticky:!0,excerpt:'\n<p>Ultimate Thread Group：终极线程组</p>\n<p>“Ultimate”意味着将不会有进一步的线程组插件的需要。每个人都可以在JMeter用:</p>\n<ul>\n<li>无限数量的线程场景</li>\n<li>每个线程场景的ramp-up time, shutdown time, flight time</li>\n<li>当然，还有值得信赖的负载预览图</li>\n</ul>\n<h2>一、添加方式</h2>\n<p>右键测试计划-&gt;添加-&gt;Threads(Users)-&gt;jp@gc - Ultimate Thread Group</p>\n<figure><img src="/assets/jmeter/2565457-20230820160724366-1550111674.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>',readingTime:{minutes:2.22,words:667},title:"Ultimate Thread Group",icon:"pen-to-square",order:7,type:"article"}}],["/jmeter/guide/timers/",{loader:()=>i.e(1434).then(i.bind(i,7201)),meta:{date:1741624426e3,category:["JMeter"],tag:["timers"],readingTime:{minutes:.06,words:17},title:"定时器",icon:"splotch",order:7,type:"article"}}],["/jmeter/guide/timers/intro.html",{loader:()=>i.e(9212).then(i.bind(i,5365)),meta:{date:1743183812e3,category:["JMeter"],tag:["Timers","介绍"],sticky:!0,excerpt:'\n<h2>不使用定时器时</h2>\n<ul>\n<li>Jmeter 线程将按<strong>顺序执行</strong>各个取样器而不会中途暂停</li>\n<li>Jmeter 可能会在很短时间内发出过多请求，从而使服务器不堪重负</li>\n</ul>\n<h2>使用定时器时</h2>\n<ul>\n<li>可以在<strong>取样器</strong>下添加定时器，这样定时器只会作用于当前取样器</li>\n<li>也可以在<strong>线程组</strong>下添加多个定时器，统计定时器的总和，然后作用于线程组下的所有取样器</li>\n</ul>\n<h2>有什么定时器</h2>\n<figure><img src="/assets/jmeter/1896874-20200617180020924-1951139427.png" alt="定时器" tabindex="0" loading="lazy"><figcaption>定时器</figcaption></figure>',readingTime:{minutes:.57,words:172},title:"入门介绍",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/script/JSR223/JSR223.html",{loader:()=>i.e(3659).then(i.bind(i,9580)),meta:{date:1743238201e3,category:["JMeter"],tag:["介绍","JSR223"],sticky:!0,excerpt:"\n<h2>JSR223 介绍</h2>\n<ul>\n<li>JMeter 支持使用编程语言来开发测试，最常用的莫过于 <strong>BeanShell</strong></li>\n<li>但是 BeanShell 脚本的<strong>效率却不高</strong></li>\n<li>针对此种情况，JMeter 给了测试开发人员更多的选择，引入了 <strong>JSR223</strong> 组件元素，提供了使用多种编程语言开发测试的可能性，其中包括了性能较高的Groovy语言</li>\n<li>在使用 JSR223 组件元素开发测试时，可以使用其内置的变量，有助于精简脚本，提高开发测试的效率</li>\n<li>JSR223 定义了可集成在Java平台上运行的一系列脚本语言，比如 Groovy，JavaScript 等</li>\n</ul>",readingTime:{minutes:.83,words:250},title:"入门介绍",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/script/beanshell/",{loader:()=>i.e(1149).then(i.bind(i,7492)),meta:{date:1741624426e3,category:["性能测试"],tag:["BeanShell"],readingTime:{minutes:.06,words:18},title:"BeanShell",icon:"splotch",order:44,type:"article"}}],["/jmeter/script/beanshell/ctx.html",{loader:()=>i.e(4944).then(i.bind(i,7338)),meta:{date:1743238201e3,category:["JMeter"],tag:["ctx","Beanshell"],sticky:!0,excerpt:'\n<h2>前提</h2>\n<p>BeanShell 有的内置变量，JSR223 也会有对应的变量，这里 JSR223 效率更高，所以以它为栗子</p>\n<h2>简单介绍</h2>\n<ul>\n<li>ctx 变量是JMeter JSR223功能最强大的内置变量之一</li>\n<li>通过它可以轻松的访问当前线程的上下文</li>\n<li>在 JMeter 内部，ctx 映射为 org.apache.jmeter.threads 的 JMeterContext 类</li>\n<li>由于JMeterContext 不具有线程安全性，故仅适用于在单线程中使用</li>\n<li>官方文档： <a href="https://jmeter.apache.org/api/org/apache/jmeter/threads/JMeterContext.html" target="_blank" rel="noopener noreferrer">https://jmeter.apache.org/api/org/apache/jmeter/threads/JMeterContext.html</a></li>\n</ul>',readingTime:{minutes:1.3,words:390},title:"BeanShell 内置变量 ctx",icon:"pen-to-square",order:2,type:"article"}}],["/jmeter/script/beanshell/intro.html",{loader:()=>i.e(8239).then(i.bind(i,4213)),meta:{date:1743238201e3,category:["JMeter"],tag:["介绍","Beanshell"],sticky:!0,excerpt:'\n<h2><strong>Bean Shell 官方介绍</strong></h2>\n<ul>\n<li>BeanShell 是一种完全符合Java语法规范的脚本语言，并且又拥有自己的一些语法和方法</li>\n<li>BeanShell 是一种松散类型的脚本语言(这点和 JS 类似)</li>\n<li>BeanShell 是用 Java 写成的,一个小型的、免费的、可以下载的、嵌入式的Java源代码解释器，具有对象脚本语言特性，非常精简的解释器 jar 文件大小为175k</li>\n<li>BeanShell 执行标准 Java 语句和表达式，另外包括一些脚本命令和语法</li>\n</ul>\n<p>官网:<a href="http://www.beanshell.org/" target="_blank" rel="noopener noreferrer">http://www.BeanShell.org/</a></p>',readingTime:{minutes:1.45,words:434},title:"入门介绍",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/script/beanshell/prev.html",{loader:()=>i.e(2976).then(i.bind(i,5022)),meta:{date:1743238201e3,category:["JMeter"],tag:["prev","Beanshell"],sticky:!0,excerpt:'\n<h2>前提</h2>\n<p>BeanShell 有的内置变量，JSR223 也会有对应的变量，这里 JSR223 效率更高，所以以它为栗子</p>\n<h2>简单介绍</h2>\n<ul>\n<li>prev 提供对<strong>当前</strong>取样器结果的访问能力</li>\n<li>prev 映射 org.apache.jmeter.samplers 的 SampleResult 类</li>\n<li>官方文档： <a href="https://jmeter.apache.org/api/org/apache/jmeter/samplers/SampleResult.html" target="_blank" rel="noopener noreferrer">https://jmeter.apache.org/api/org/apache/jmeter/samplers/SampleResult.html</a></li>\n</ul>',readingTime:{minutes:1.79,words:537},title:"BeanShell 内置变量 prev",icon:"pen-to-square",order:5,type:"article"}}],["/jmeter/script/beanshell/props.html",{loader:()=>i.e(7043).then(i.bind(i,4496)),meta:{date:1743238201e3,category:["JMeter"],tag:["props","Beanshell"],sticky:!0,excerpt:'\n<h2>前提</h2>\n<p>BeanShell 有的内置变量，JSR223 也会有对应的变量，这里 JSR223 效率更高，所以以它为栗子</p>\n<h2>简单介绍</h2>\n<ul>\n<li>props 映射 java.util 的 Properties 类</li>\n<li>与 vars 作用大致相同，区别的是 vars 是对<strong>变量</strong>进行读写操作， 而 props 主要是对<strong>属性</strong>进行读写操作</li>\n<li>vars 只能在当前线程组内使用，props 可以跨线程组使用 ，因为属性可以跨线程组但是变量不行</li>\n<li>vars 只能保存 String 或者 Object，props 可以是 Hashtable 或者 Object</li>\n<li>java.util.Properties 这个类是<strong>线程安全</strong>的；多个线程可以共享一个 Properties 对象，而不需要外部同步</li>\n<li>官方文档： <a href="https://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/Properties.html" target="_blank" rel="noopener noreferrer">https://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/Properties.html</a></li>\n</ul>',readingTime:{minutes:1.39,words:418},title:"BeanShell 内置变量 props",icon:"pen-to-square",order:4,type:"article"}}],["/jmeter/script/beanshell/vars.html",{loader:()=>i.e(7995).then(i.bind(i,8143)),meta:{date:1743238201e3,category:["JMeter"],tag:["vars","Beanshell"],sticky:!0,excerpt:'\n<h2>前提</h2>\n<p>BeanShell 有的内置变量，JSR223 也会有对应的变量，这里 JSR223 效率更高，所以以它为栗子</p>\n<h2>简单介绍</h2>\n<ul>\n<li>vars 是最常用的JMeter变量之一</li>\n<li>在 JMeter 内部，映射 org.apache.jmeter.threads 的 JMeterVariables 类</li>\n<li>vars 提供了对当前线程变量的读写能力</li>\n<li>所有的 JMeter 变量都是 <strong>java字符串</strong></li>\n<li>如果你需要把数据存放到一个 JMeter 变量中，需要先将它转换成字符串</li>\n<li>官方文档：<a href="https://jmeter.apache.org/api/org/apache/jmeter/threads/JMeterVariables.html" target="_blank" rel="noopener noreferrer">https://jmeter.apache.org/api/org/apache/jmeter/threads/JMeterVariables.html</a></li>\n</ul>',readingTime:{minutes:1.45,words:435},title:"BeanShell 内置变量 vars",icon:"pen-to-square",order:3,type:"article"}}],["/auto/se/base/el_position/",{loader:()=>i.e(2181).then(i.bind(i,5338)),meta:{date:1741624426e3,category:["元素定位"],tag:["元素定位"],readingTime:{minutes:.08,words:24},title:"元素定位",icon:"gem",order:1,type:"article"}}],["/auto/se/base/el_position/css_and_xpath.html",{loader:()=>i.e(5304).then(i.bind(i,780)),meta:{date:1741970796e3,category:["UI自动化测试"],tag:["selenium","CSS Selector","XPath"],sticky:!0,excerpt:'\n<p>以下是 <strong>CSS Selector</strong> 与 <strong>XPath</strong> 定位方式的全面对比解析，包含语法结构、典型场景及实战技巧：</p>\n<hr>\n<h2>一、CSS Selector 定位详解</h2>\n<h3>1. 核心语法与优势</h3>\n<h4>基础结构</h4>\n<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">find_element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(By.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66">CSS_SELECTOR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"css_expression"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',readingTime:{minutes:3.75,words:1124},title:"CSS Selector 与 XPath 定位",icon:"pen-to-square",order:2,type:"article"}}],["/auto/se/base/el_position/el_RelativeLocator.html",{loader:()=>i.e(9729).then(i.bind(i,8871)),meta:{date:1741278449e3,category:["UI自动化测试"],tag:["selenium","元素定位","RelativeLocator"],sticky:!0,excerpt:'\n<p>以下是基于 <strong>Python</strong> 的 Selenium 4.0 中 <code>RelativeLocator</code>（相对定位器）的使用方法详解，包含实际场景示例和注意事项：</p>\n<hr>\n<h3><strong>一、环境准备</strong></h3>\n<ol>\n<li>确保使用 <strong>Selenium ≥ 4.0</strong>：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> seleniu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">m&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4.0.0</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div></li>\n<li>浏览器驱动（如 ChromeDriver）需兼容 Selenium 4.0。</li>\n</ol>',readingTime:{minutes:2.55,words:764},title:"相对定位器RelativeLocator",icon:"pen-to-square",order:3,type:"article"}}],["/auto/se/base/el_position/el_basic.html",{loader:()=>i.e(6553).then(i.bind(i,8645)),meta:{date:1741192766e3,category:["UI自动化测试"],tag:["selenium","元素定位"],sticky:!0,excerpt:'\n<p>以下是 Selenium 中 <strong>全部 8 种标准元素定位方式</strong> 的完整解析，包含语法示例、适用场景及实战技巧，助你精准操控 Web 页面元素：</p>\n<hr>\n<h2>一、基础定位方式（W3C 标准）</h2>\n<p>Selenium 官方支持的 <strong>8 种定位策略</strong>（通过 <code>By</code> 类实现）：</p>\n<hr>\n<h3>1. ID 定位</h3>\n<h4>语法</h4>\n<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">element </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">find_element</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(By.</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66">ID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"element_id"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',readingTime:{minutes:4.95,words:1484},title:"元素定位",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/guide/controllers/logical/",{loader:()=>i.e(6093).then(i.bind(i,1368)),meta:{date:1741624426e3,category:["JMeter"],tag:["Logic_Controllers"],readingTime:{minutes:.06,words:19},title:"逻辑控制器",icon:"splotch",order:3,type:"article"}}],["/jmeter/guide/controllers/logical/Weighted.html",{loader:()=>i.e(500).then(i.bind(i,9976)),meta:{date:1743183812e3,category:["JMeter"],tag:["Controller","Weight"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<ul>\n<li>它能分配其子项目（Child Item）的权重，从而控制子项的执行概率</li>\n<li>它是一个插件，需要额外下载哦</li>\n</ul>\n<h4>插件下载地址</h4>\n<p><a href="https://jmeter-plugins.org/" target="_blank" rel="noopener noreferrer">https://jmeter-plugins.org/</a></p>\n<h2>权重控制器</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200821120821010-928828860.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200821120821010-928828860.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:1.27,words:381},title:"详解 Weighted Switch Controller 权重控制器",icon:"pen-to-square",order:-5,type:"article"}}],["/jmeter/guide/controllers/logical/for_each.html",{loader:()=>i.e(6220).then(i.bind(i,5626)),meta:{date:1743183812e3,category:["JMeter"],tag:["Controller","ForEach"],sticky:!0,excerpt:'\n<h2>前言</h2>\n<ul>\n<li>ForEach 控制器一般和用户自定义变量/JDBC结果变量一起使用，用于可以遍历读取相关的返回值</li>\n<li>该控制器下的 Samplers 和控制器都会被执行一次或多次，每次读取不同的变量值</li>\n<li>ForEach 控制器和正则提取器是个好搭档，因为正则提取出来的变量值会用_分隔，而 ForEach 可以省略 _</li>\n</ul>\n<h2>ForEach</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202007/1896874-20200703141347472-1283755239.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200703141347472-1283755239.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:2.7,words:811},title:"详解 ForEach控制器",icon:"pen-to-square",order:6,type:"article"}}],["/jmeter/guide/controllers/logical/if.html",{loader:()=>i.e(3014).then(i.bind(i,7008)),meta:{date:1743183812e3,category:["JMeter"],tag:["Controller","if"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<p>可以通过条件来控制是否运行其下面的测试元件（子元素）</p>\n<h2>If 控制器</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200819162227921-246062408.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200819162227921-246062408.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:2.11,words:632},title:"If 控制器",icon:"pen-to-square",order:2,type:"article"}}],["/jmeter/guide/controllers/logical/intro.html",{loader:()=>i.e(8735).then(i.bind(i,9085)),meta:{date:1743183812e3,category:["JMeter"],tag:["Controller","介绍"],sticky:!0,excerpt:'\n<h2>Logic Controllers的简介</h2>\n<ul>\n<li>逻辑控制器可以自定义决定<strong>发送请求的时机的逻辑</strong></li>\n<li>还可以更改其子元件的<strong>请求的顺序</strong></li>\n<li>逻辑控制器可以组合使用，然后获取不同的结果</li>\n</ul>\n<h2>逻辑控制器的栗子</h2>\n<figure><img src="/assets/jmeter/1896874-20200518192523242-1910561687.png" alt="示例" tabindex="0" loading="lazy"><figcaption>示例</figcaption></figure>',readingTime:{minutes:.65,words:196},title:"介绍",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/guide/controllers/logical/loop.html",{loader:()=>i.e(3587).then(i.bind(i,2711)),meta:{date:1743183812e3,category:["JMeter"],tag:["Controller","Loop"],sticky:!0,excerpt:'\n<h2>前言</h2>\n<p>这应该是最简单的控制器了，我们快速过一遍</p>\n<figure><img src="/assets/jmeter/image-20250329005023185.png" alt="循环控制器" tabindex="0" loading="lazy"><figcaption>循环控制器</figcaption></figure>\n<h2>线程组结构树</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200627163538298-29981636.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200627163538298-29981636.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:.69,words:206},title:"循环控制器",icon:"pen-to-square",order:4,type:"article"}}],["/jmeter/guide/controllers/logical/once.html",{loader:()=>i.e(7260).then(i.bind(i,9830)),meta:{date:1743183812e3,category:["JMeter"],tag:["Controller","if"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<p>在每个线程内，该控制器下的内容只会被执行一遍，无论循环多少次，都只执行一遍</p>\n<h4>实际应用场景</h4>\n<p>对于需要登录的测试，可以将登录请求放置在此控制器中，因为每个线程只需要登录一次即可建立会话</p>\n<h2>仅一次控制器</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200820140742606-369567489.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200820140742606-369567489.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:1,words:300},title:"详解仅一次控制器",icon:"pen-to-square",order:-18,type:"article"}}],["/jmeter/guide/controllers/logical/random.html",{loader:()=>i.e(7326).then(i.bind(i,1796)),meta:{date:1743183812e3,category:["JMeter"],tag:["Controller","Random"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<p>当该控制器下有多个子项时，每次循环会随机执行其中一个</p>\n<h4>实际应用</h4>\n<p>支持我们在做容量测试的时候，随机分配业务比例，最大程度的模拟用户场景</p>\n<h2>随机控制器</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200824104146262-1368370173.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200824104146262-1368370173.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:1.25,words:375},title:"详解 Random Controller 随机控制器",icon:"pen-to-square",order:-15,type:"article"}}],["/jmeter/guide/controllers/logical/runtime.html",{loader:()=>i.e(9109).then(i.bind(i,1059)),meta:{date:1743183812e3,category:["JMeter"],tag:["Controller","Runtime"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<p>一种设置运行时间的控制器，它的效果就是使该控制器下的子项运行时间为【Runtime】中的数值（单位：s）</p>\n<h2>Runtime Controller</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200820154313623-2126984558.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200820154313623-2126984558.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:.97,words:292},title:"详解Runtime控制器",icon:"pen-to-square",order:8,type:"article"}}],["/jmeter/guide/controllers/logical/simple.html",{loader:()=>i.e(9823).then(i.bind(i,9179)),meta:{date:1743183812e3,category:["JMeter"],tag:["Controller","Simple"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<p>最基本的控制器，<strong>对 Jmeter 测试运行没有任何影响</strong>，可以将某些请求归集在一个简单控制器中，视为一个模块，使得脚本结构更清晰</p>\n<h2>简单控制器</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200820151610734-322496432.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200820151610734-322496432.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:.42,words:126},title:"简单控制器",icon:"pen-to-square",order:-16,type:"article"}}],["/jmeter/guide/controllers/logical/switch.html",{loader:()=>i.e(3821).then(i.bind(i,7800)),meta:{date:1743183812e3,category:["JMeter"],tag:["Controller","Switch"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<p>控制哪个子项将被执行，学过 java 的同学应该很清楚 switch 是做么该的</p>\n<h2>Switch 控制器</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200824114839253-2005724007.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200824114839253-2005724007.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:1.9,words:570},title:"详解 Switch Controller 开关控制器",icon:"pen-to-square",order:-12,type:"article"}}],["/jmeter/guide/controllers/logical/throughput.html",{loader:()=>i.e(663).then(i.bind(i,4291)),meta:{date:1743183812e3,category:["JMeter"],tag:["Controller","throughput"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<p>自行调整该控制器下的子项的<strong>执行****频率</strong></p>\n<h2>吞吐量控制器</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200820164840646-181958552.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200820164840646-181958552.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:2.64,words:793},title:"详解 Throughput Controller 吞吐量控制器",icon:"pen-to-square",order:-13,type:"article"}}],["/jmeter/guide/controllers/logical/transaction.html",{loader:()=>i.e(7177).then(i.bind(i,967)),meta:{date:1743183812e3,category:["JMeter"],tag:["Controller","Transaction"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<p>可以添加多个取样器（sampler），这样就把多个取样器当做一个完整的事务</p>\n<h2>事务控制器（Transaction Controller ）</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200820130932290-969853787.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200820130932290-969853787.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:1.67,words:501},title:"事务控制器",icon:"pen-to-square",order:3,type:"article"}}],["/jmeter/guide/controllers/logical/while.html",{loader:()=>i.e(6792).then(i.bind(i,8653)),meta:{date:1743183812e3,category:["JMeter"],tag:["Controller","while"],sticky:!0,excerpt:'\n<h2>简单介绍</h2>\n<p>和 java 里面的 while 循环一样，将一直运行其所有子项，直到条件为 false 为止</p>\n<h2>while 控制器</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202008/1896874-20200824132108346-1144300682.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200824132108346-1144300682.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:.82,words:247},title:"详解 while 控制器",icon:"pen-to-square",order:5,type:"article"}}],["/jmeter/guide/controllers/samplers/",{loader:()=>i.e(375).then(i.bind(i,3401)),meta:{date:1741624426e3,category:["JMeter"],tag:["Samplers"],readingTime:{minutes:.06,words:17},title:"取样器",icon:"splotch",order:2,type:"article"}}],["/jmeter/guide/controllers/samplers/http_request.html",{loader:()=>i.e(7909).then(i.bind(i,128)),meta:{date:1743183812e3,category:["JMeter"],tag:["request","samplers","hhtp"],sticky:!0,excerpt:'\n<h2>HTTP Request 介绍</h2>\n<p>用来发送 HTTP、HTTPS 协议请求</p>\n<h2>HTTP Request 界面</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200618184506345-301273000.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200618184506345-301273000-3169333.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:6.06,words:1817},title:"HTTP Request",icon:"pen-to-square",order:2,type:"article"}}],["/jmeter/guide/controllers/samplers/intro.html",{loader:()=>i.e(6673).then(i.bind(i,9160)),meta:{date:1743183812e3,category:["JMeter"],tag:["Samplers","介绍"],sticky:!0,excerpt:"\n<h2>Samplers 简介</h2>\n<ul>\n<li>取样器指示Jmeter向服务器发送请求并等待响应</li>\n<li>多个取样器按照它们在树中出现的顺序运行</li>\n<li>取样器 + 控制器可以<strong>修改取样器的执行次数</strong></li>\n</ul>\n<h2>Jmeter自带的取样器</h2>\n<ul>\n<li>FTP Request</li>\n<li>HTTP Request (can be used for SOAP or REST Webservice also)</li>\n<li>JDBC Request</li>\n<li>Java object request</li>\n<li>JMS request</li>\n<li>JUnit Test request</li>\n<li>LDAP Request</li>\n<li>Mail request</li>\n<li>OS Process request</li>\n<li>TCP request</li>\n</ul>",readingTime:{minutes:1.25,words:374},title:"介绍",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/guide/controllers/samplers/jdbc_request.html",{loader:()=>i.e(7924).then(i.bind(i,4269)),meta:{date:1743183812e3,category:["JMeter"],tag:["samplers","JDBC","request"],sticky:!0,excerpt:'\n<h2>前言</h2>\n<ul>\n<li>JDBC Request 主要是向数据库发送一个 JDBC 请求（sql 语句），并获取返回的数据集</li>\n<li>它需要和数据库连接池配置（JDBC Connection Configuration）一起使用，可参考此篇博文：<a href="https://www.cnblogs.com/poloyy/p/13182706.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/poloyy/p/13182706.html</a></li>\n</ul>\n<h2>JDBC Request</h2>',readingTime:{minutes:3.16,words:948},title:"JDBC Request",icon:"pen-to-square",order:3,type:"article"}}],["/jmeter/guide/processor/post/",{loader:()=>i.e(2591).then(i.bind(i,3137)),meta:{date:1741624426e3,category:["JMeter"],tag:["processor","post"],readingTime:{minutes:.07,words:20},title:"后置处理器",icon:"splotch",order:3,type:"article"}}],["/jmeter/guide/processor/post/jdbc_connection.html",{loader:()=>i.e(8609).then(i.bind(i,8933)),meta:{date:1743183812e3,category:["JMeter"],tag:["config","JDBC","detail"],sticky:!0,excerpt:'\n<h2>前言</h2>\n<p>发起 jdbc 请求前，需要有 JDBC 连接配置，即先连上数据库，才能查询数据库</p>\n<h2>JDBC Connection Configuration</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200623173540819-2100232972.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200623173540819-2100232972.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:2.31,words:693},title:"详解 JDBC Connection Configuration",icon:"pen-to-square",order:1,type:"article"}}],["/jmeter/guide/processor/post/json_extractor.html",{loader:()=>i.e(5202).then(i.bind(i,4769)),meta:{date:1743183812e3,category:["JMeter"],tag:["processor","post","json"],sticky:!0,excerpt:"\n<h2>为什么要用 JSON 提取器</h2>\n<ul>\n<li>JSON 是目前大多数接口响应内容的数据格式</li>\n<li>在接口测试中，不同接口之间可能会有<strong>数据依赖</strong>，在 Jmeter 中可以通过后置处理器来提取接口的响应内容</li>\n<li>JSON 提取器是其中一个可以用来提取响应内容的元件</li>\n</ul>\n<h4>JSON 提取器的应用场景</h4>\n<ol>\n<li>提取某个特定的值</li>\n<li>提取多个值</li>\n<li>按条件取值</li>\n<li>提取值组成的列表</li>\n</ol>\n<h2>JSON 提取器</h2>\n",readingTime:{minutes:4.96,words:1489},title:"JSON 提取器",icon:"pen-to-square",order:3,type:"article"}}],["/jmeter/guide/processor/post/regular_extractor.html",{loader:()=>i.e(8868).then(i.bind(i,8305)),meta:{date:1743183812e3,category:["JMeter"],tag:["controllers","Regular_Extractor"],sticky:!0,excerpt:'\n<h2>有了 JSON 提取器为啥还要用正则提取器？</h2>\n<ul>\n<li>JSON 提取器<strong>只针对</strong>接口返回的响应内容</li>\n<li>如果想提取的是响应头、请求头的值，而非响应内容的值呢？</li>\n<li>这个时候正则提取器的作用就出来了，它可以提取请求任一部分的值</li>\n</ul>\n<h2>需知</h2>\n<ul>\n<li>正则表达式很多内容，在这篇文章中不会展开详细说的哦，主要还是说提取器的使用</li>\n<li>想详细学习正则表达式可以看这系列的文章：<a href="https://www.cnblogs.com/poloyy/category/1796055.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/poloyy/category/1796055.html</a></li>\n</ul>',readingTime:{minutes:6.39,words:1916},title:"正则提取器",icon:"pen-to-square",order:4,type:"article"}}],["/jmeter/guide/processor/pre/",{loader:()=>i.e(870).then(i.bind(i,5931)),meta:{date:1741624426e3,category:["JMeter"],tag:["processor","front"],readingTime:{minutes:.07,words:20},title:"前置处理器",icon:"splotch",order:2,type:"article"}}],["/jmeter/guide/processor/pre/user_para.html",{loader:()=>i.e(4280).then(i.bind(i,1565)),meta:{date:1743183812e3,category:["JMeter"],tag:["processor","font","user_parameter"],sticky:!0,excerpt:'\n<h2>用户参数</h2>\n<figure><a href="https://img2020.cnblogs.com/blog/1896874/202006/1896874-20200622110244366-364882082.png" target="_blank" rel="noopener noreferrer"><img src="/assets/jmeter/1896874-20200622110244366-364882082.png" alt="img" tabindex="0" loading="lazy"></a><figcaption>img</figcaption></figure>',readingTime:{minutes:1.47,words:442},title:"详解用户参数",icon:"pen-to-square",order:3,type:"article"}}],["/404.html",{loader:()=>i.e(7490).then(i.bind(i,3330)),meta:{title:""}}],["/nonu/",{loader:()=>i.e(9165).then(i.bind(i,7858)),meta:{title:"Nonu"}}],["/posts/",{loader:()=>i.e(8666).then(i.bind(i,4442)),meta:{title:"Posts"}}],["/auto/",{loader:()=>i.e(1240).then(i.bind(i,7148)),meta:{title:"Auto"}}],["/posts/apple/",{loader:()=>i.e(2653).then(i.bind(i,884)),meta:{title:"Apple"}}],["/posts/banana/",{loader:()=>i.e(8242).then(i.bind(i,8614)),meta:{title:"Banana"}}],["/jmeter/script/JSR223/",{loader:()=>i.e(2963).then(i.bind(i,7193)),meta:{title:"JSR223"}}],["/category/",{loader:()=>i.e(3583).then(i.bind(i,5045)),meta:{title:"分类",index:!1}}],["/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>i.e(4021).then(i.bind(i,1815)),meta:{title:"使用指南 分类",index:!1}}],["/category/%E6%8C%87%E5%8D%97/",{loader:()=>i.e(8622).then(i.bind(i,997)),meta:{title:"指南 分类",index:!1}}],["/category/jmeter/",{loader:()=>i.e(9855).then(i.bind(i,4331)),meta:{title:"Jmeter 分类",index:!1}}],["/category/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/",{loader:()=>i.e(7712).then(i.bind(i,3381)),meta:{title:"性能测试 分类",index:!1}}],["/category/ui%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/",{loader:()=>i.e(242).then(i.bind(i,2724)),meta:{title:"UI自动化测试 分类",index:!1}}],["/category/%E6%A8%B1%E6%A1%83/",{loader:()=>i.e(9080).then(i.bind(i,3967)),meta:{title:"樱桃 分类",index:!1}}],["/category/%E7%81%AB%E9%BE%99%E6%9E%9C/",{loader:()=>i.e(8280).then(i.bind(i,9219)),meta:{title:"火龙果 分类",index:!1}}],["/category/%E6%B0%B4%E6%9E%9C/",{loader:()=>i.e(8484).then(i.bind(i,9336)),meta:{title:"水果 分类",index:!1}}],["/category/%E8%8D%89%E8%8E%93/",{loader:()=>i.e(6112).then(i.bind(i,4939)),meta:{title:"草莓 分类",index:!1}}],["/category/%E8%94%AC%E8%8F%9C/",{loader:()=>i.e(3612).then(i.bind(i,3950)),meta:{title:"蔬菜 分类",index:!1}}],["/category/%E4%BB%8B%E7%BB%8D/",{loader:()=>i.e(8060).then(i.bind(i,2052)),meta:{title:"介绍 分类",index:!1}}],["/category/jmeter/",{loader:()=>i.e(9855).then(i.bind(i,4331)),meta:{title:"JMeter 分类",index:!1}}],["/category/%E8%8B%B9%E6%9E%9C/",{loader:()=>i.e(9793).then(i.bind(i,9831)),meta:{title:"苹果 分类",index:!1}}],["/category/%E9%A6%99%E8%95%89/",{loader:()=>i.e(334).then(i.bind(i,6351)),meta:{title:"香蕉 分类",index:!1}}],["/category/%E8%BF%9B%E9%98%B6/",{loader:()=>i.e(8721).then(i.bind(i,3367)),meta:{title:"进阶 分类",index:!1}}],["/category/%E5%9F%BA%E7%A1%80/",{loader:()=>i.e(5022).then(i.bind(i,1304)),meta:{title:"基础 分类",index:!1}}],["/category/%E9%A1%B9%E7%9B%AE/",{loader:()=>i.e(5459).then(i.bind(i,6644)),meta:{title:"项目 分类",index:!1}}],["/category/pytest/",{loader:()=>i.e(8979).then(i.bind(i,8175)),meta:{title:"Pytest 分类",index:!1}}],["/category/selenium/",{loader:()=>i.e(3568).then(i.bind(i,6315)),meta:{title:"selenium 分类",index:!1}}],["/category/%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D/",{loader:()=>i.e(7938).then(i.bind(i,317)),meta:{title:"元素定位 分类",index:!1}}],["/tag/",{loader:()=>i.e(1797).then(i.bind(i,9472)),meta:{title:"标签",index:!1}}],["/tag/%E7%A6%81%E7%94%A8/",{loader:()=>i.e(1331).then(i.bind(i,944)),meta:{title:"标签: 禁用",index:!1}}],["/tag/%E5%8A%A0%E5%AF%86/",{loader:()=>i.e(8496).then(i.bind(i,3977)),meta:{title:"标签: 加密",index:!1}}],["/tag/%E5%B8%83%E5%B1%80/",{loader:()=>i.e(609).then(i.bind(i,9163)),meta:{title:"标签: 布局",index:!1}}],["/tag/markdown/",{loader:()=>i.e(7931).then(i.bind(i,7177)),meta:{title:"标签: Markdown",index:!1}}],["/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",{loader:()=>i.e(602).then(i.bind(i,4615)),meta:{title:"标签: 页面配置",index:!1}}],["/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>i.e(1431).then(i.bind(i,8469)),meta:{title:"标签: 使用指南",index:!1}}],["/tag/catalog/",{loader:()=>i.e(9261).then(i.bind(i,8545)),meta:{title:"标签: Catalog",index:!1}}],["/tag/basic/",{loader:()=>i.e(8244).then(i.bind(i,369)),meta:{title:"标签: basic",index:!1}}],["/tag/study/",{loader:()=>i.e(5103).then(i.bind(i,6894)),meta:{title:"标签: study",index:!1}}],["/tag/%E4%BB%8B%E7%BB%8D/",{loader:()=>i.e(3870).then(i.bind(i,2162)),meta:{title:"标签: 介绍",index:!1}}],["/tag/%E7%BA%A2/",{loader:()=>i.e(4068).then(i.bind(i,9934)),meta:{title:"标签: 红",index:!1}}],["/tag/%E5%B0%8F/",{loader:()=>i.e(3215).then(i.bind(i,9494)),meta:{title:"标签: 小",index:!1}}],["/tag/%E5%9C%86/",{loader:()=>i.e(9048).then(i.bind(i,8744)),meta:{title:"标签: 圆",index:!1}}],["/tag/%E5%A4%A7/",{loader:()=>i.e(3047).then(i.bind(i,4414)),meta:{title:"标签: 大",index:!1}}],["/tag/%E5%AE%89%E8%A3%85/",{loader:()=>i.e(1496).then(i.bind(i,7405)),meta:{title:"标签: 安装",index:!1}}],["/tag/%E9%85%8D%E7%BD%AE/",{loader:()=>i.e(7889).then(i.bind(i,4310)),meta:{title:"标签: 配置",index:!1}}],["/tag/%E5%9F%BA%E7%A1%80/",{loader:()=>i.e(6080).then(i.bind(i,9586)),meta:{title:"标签: 基础",index:!1}}],["/tag/hello-world/",{loader:()=>i.e(7775).then(i.bind(i,866)),meta:{title:"标签: hello world",index:!1}}],["/tag/core/",{loader:()=>i.e(5509).then(i.bind(i,6869)),meta:{title:"标签: Core",index:!1}}],["/tag/component/",{loader:()=>i.e(7029).then(i.bind(i,1762)),meta:{title:"标签: Component",index:!1}}],["/tag/parameter/",{loader:()=>i.e(3021).then(i.bind(i,725)),meta:{title:"标签: Parameter",index:!1}}],["/tag/%E6%8C%87%E5%8D%97/",{loader:()=>i.e(9756).then(i.bind(i,3504)),meta:{title:"标签: 指南",index:!1}}],["/tag/script/",{loader:()=>i.e(9969).then(i.bind(i,76)),meta:{title:"标签: script",index:!1}}],["/tag/%E6%9D%82%E9%A1%B9/",{loader:()=>i.e(4335).then(i.bind(i,9805)),meta:{title:"标签: 杂项",index:!1}}],["/tag/%E9%BB%84/",{loader:()=>i.e(942).then(i.bind(i,3976)),meta:{title:"标签: 黄",index:!1}}],["/tag/%E5%BC%AF%E6%9B%B2%E7%9A%84/",{loader:()=>i.e(7817).then(i.bind(i,5777)),meta:{title:"标签: 弯曲的",index:!1}}],["/tag/%E9%95%BF/",{loader:()=>i.e(5519).then(i.bind(i,2999)),meta:{title:"标签: 长",index:!1}}],["/tag/%E8%BF%9B%E9%98%B6/",{loader:()=>i.e(799).then(i.bind(i,8492)),meta:{title:"标签: 进阶",index:!1}}],["/tag/selenium/",{loader:()=>i.e(4478).then(i.bind(i,510)),meta:{title:"标签: selenium",index:!1}}],["/tag/%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D/",{loader:()=>i.e(8376).then(i.bind(i,6211)),meta:{title:"标签: 元素定位",index:!1}}],["/tag/%E6%93%8D%E4%BD%9C%E5%85%83%E7%B4%A0/",{loader:()=>i.e(6744).then(i.bind(i,1706)),meta:{title:"标签: 操作元素",index:!1}}],["/tag/%E9%A1%B9%E7%9B%AE/",{loader:()=>i.e(3373).then(i.bind(i,9295)),meta:{title:"标签: 项目",index:!1}}],["/tag/pytest/",{loader:()=>i.e(9645).then(i.bind(i,3302)),meta:{title:"标签: Pytest",index:!1}}],["/tag/pytest/",{loader:()=>i.e(9645).then(i.bind(i,3302)),meta:{title:"标签: pytest",index:!1}}],["/tag/base/",{loader:()=>i.e(8463).then(i.bind(i,5694)),meta:{title:"标签: base",index:!1}}],["/tag/cmd/",{loader:()=>i.e(9922).then(i.bind(i,7477)),meta:{title:"标签: cmd",index:!1}}],["/tag/fixture/",{loader:()=>i.e(6443).then(i.bind(i,6660)),meta:{title:"标签: fixture",index:!1}}],["/tag/plugin/",{loader:()=>i.e(3769).then(i.bind(i,7453)),meta:{title:"标签: plugin",index:!1}}],["/tag/assert/",{loader:()=>i.e(4424).then(i.bind(i,286)),meta:{title:"标签: assert",index:!1}}],["/tag/assert/",{loader:()=>i.e(4424).then(i.bind(i,286)),meta:{title:"标签: Assert",index:!1}}],["/tag/duration/",{loader:()=>i.e(58).then(i.bind(i,7743)),meta:{title:"标签: Duration",index:!1}}],["/tag/json/",{loader:()=>i.e(40).then(i.bind(i,9810)),meta:{title:"标签: Json",index:!1}}],["/tag/response/",{loader:()=>i.e(3301).then(i.bind(i,3987)),meta:{title:"标签: Response",index:!1}}],["/tag/config/",{loader:()=>i.e(5748).then(i.bind(i,916)),meta:{title:"标签: config",index:!1}}],["/tag/counter/",{loader:()=>i.e(1318).then(i.bind(i,6358)),meta:{title:"标签: counter",index:!1}}],["/tag/csv/",{loader:()=>i.e(7418).then(i.bind(i,9896)),meta:{title:"标签: csv",index:!1}}],["/tag/http-cookie/",{loader:()=>i.e(6371).then(i.bind(i,8385)),meta:{title:"标签: HTTP_Cookie",index:!1}}],["/tag/samplers/",{loader:()=>i.e(803).then(i.bind(i,949)),meta:{title:"标签: samplers",index:!1}}],["/tag/http-header/",{loader:()=>i.e(5196).then(i.bind(i,2025)),meta:{title:"标签: HTTP header",index:!1}}],["/tag/request/",{loader:()=>i.e(7435).then(i.bind(i,2717)),meta:{title:"标签: Request",index:!1}}],["/tag/config/",{loader:()=>i.e(5748).then(i.bind(i,916)),meta:{title:"标签: Config",index:!1}}],["/tag/random-variable/",{loader:()=>i.e(5896).then(i.bind(i,4518)),meta:{title:"标签: Random_Variable",index:!1}}],["/tag/defined/",{loader:()=>i.e(5751).then(i.bind(i,9343)),meta:{title:"标签: Defined",index:!1}}],["/tag/controllers/",{loader:()=>i.e(6403).then(i.bind(i,737)),meta:{title:"标签: controllers",index:!1}}],["/tag/listeners/",{loader:()=>i.e(83).then(i.bind(i,4070)),meta:{title:"标签: listeners",index:!1}}],["/tag/listeners/",{loader:()=>i.e(83).then(i.bind(i,4070)),meta:{title:"标签: Listeners",index:!1}}],["/tag/processor/",{loader:()=>i.e(7902).then(i.bind(i,3038)),meta:{title:"标签: processor",index:!1}}],["/tag/%E6%B5%8B%E8%AF%95%E8%AE%A1%E5%88%92/",{loader:()=>i.e(3501).then(i.bind(i,1342)),meta:{title:"标签: 测试计划",index:!1}}],["/tag/%E6%A6%82%E8%BF%B0/",{loader:()=>i.e(296).then(i.bind(i,6184)),meta:{title:"标签: 概述",index:!1}}],["/tag/%E8%AF%A6%E8%A7%A3/",{loader:()=>i.e(561).then(i.bind(i,5139)),meta:{title:"标签: 详解",index:!1}}],["/tag/%E5%8F%82%E6%95%B0/",{loader:()=>i.e(8712).then(i.bind(i,7222)),meta:{title:"标签: 参数",index:!1}}],["/tag/%E7%BA%BF%E7%A8%8B%E7%BB%84/",{loader:()=>i.e(6224).then(i.bind(i,1600)),meta:{title:"标签: 线程组",index:!1}}],["/tag/thread/",{loader:()=>i.e(1402).then(i.bind(i,8877)),meta:{title:"标签: thread",index:!1}}],["/tag/thread/",{loader:()=>i.e(1402).then(i.bind(i,8877)),meta:{title:"标签: Thread",index:!1}}],["/tag/concurrency/",{loader:()=>i.e(6429).then(i.bind(i,1644)),meta:{title:"标签: Concurrency",index:!1}}],["/tag/threads/",{loader:()=>i.e(2635).then(i.bind(i,4050)),meta:{title:"标签: Threads",index:!1}}],["/tag/important/",{loader:()=>i.e(436).then(i.bind(i,4149)),meta:{title:"标签: Important",index:!1}}],["/tag/stepping/",{loader:()=>i.e(1104).then(i.bind(i,6586)),meta:{title:"标签: Stepping",index:!1}}],["/tag/ultimate/",{loader:()=>i.e(861).then(i.bind(i,7495)),meta:{title:"标签: Ultimate",index:!1}}],["/tag/timers/",{loader:()=>i.e(4356).then(i.bind(i,2265)),meta:{title:"标签: timers",index:!1}}],["/tag/timers/",{loader:()=>i.e(4356).then(i.bind(i,2265)),meta:{title:"标签: Timers",index:!1}}],["/tag/jsr223/",{loader:()=>i.e(2422).then(i.bind(i,8329)),meta:{title:"标签: JSR223",index:!1}}],["/tag/beanshell/",{loader:()=>i.e(6950).then(i.bind(i,6643)),meta:{title:"标签: BeanShell",index:!1}}],["/tag/ctx/",{loader:()=>i.e(3599).then(i.bind(i,4154)),meta:{title:"标签: ctx",index:!1}}],["/tag/beanshell/",{loader:()=>i.e(6950).then(i.bind(i,6643)),meta:{title:"标签: Beanshell",index:!1}}],["/tag/prev/",{loader:()=>i.e(5295).then(i.bind(i,2382)),meta:{title:"标签: prev",index:!1}}],["/tag/props/",{loader:()=>i.e(1804).then(i.bind(i,5009)),meta:{title:"标签: props",index:!1}}],["/tag/vars/",{loader:()=>i.e(2196).then(i.bind(i,7357)),meta:{title:"标签: vars",index:!1}}],["/tag/css-selector/",{loader:()=>i.e(2017).then(i.bind(i,3163)),meta:{title:"标签: CSS Selector",index:!1}}],["/tag/xpath/",{loader:()=>i.e(5141).then(i.bind(i,9028)),meta:{title:"标签: XPath",index:!1}}],["/tag/relativelocator/",{loader:()=>i.e(4784).then(i.bind(i,5076)),meta:{title:"标签: RelativeLocator",index:!1}}],["/tag/logic-controllers/",{loader:()=>i.e(5144).then(i.bind(i,7078)),meta:{title:"标签: Logic_Controllers",index:!1}}],["/tag/controller/",{loader:()=>i.e(7010).then(i.bind(i,2955)),meta:{title:"标签: Controller",index:!1}}],["/tag/weight/",{loader:()=>i.e(6162).then(i.bind(i,4858)),meta:{title:"标签: Weight",index:!1}}],["/tag/foreach/",{loader:()=>i.e(1452).then(i.bind(i,5375)),meta:{title:"标签: ForEach",index:!1}}],["/tag/if/",{loader:()=>i.e(2565).then(i.bind(i,11)),meta:{title:"标签: if",index:!1}}],["/tag/loop/",{loader:()=>i.e(5628).then(i.bind(i,4750)),meta:{title:"标签: Loop",index:!1}}],["/tag/random/",{loader:()=>i.e(3677).then(i.bind(i,4639)),meta:{title:"标签: Random",index:!1}}],["/tag/runtime/",{loader:()=>i.e(1014).then(i.bind(i,6307)),meta:{title:"标签: Runtime",index:!1}}],["/tag/simple/",{loader:()=>i.e(1944).then(i.bind(i,821)),meta:{title:"标签: Simple",index:!1}}],["/tag/switch/",{loader:()=>i.e(5214).then(i.bind(i,753)),meta:{title:"标签: Switch",index:!1}}],["/tag/throughput/",{loader:()=>i.e(4112).then(i.bind(i,6339)),meta:{title:"标签: throughput",index:!1}}],["/tag/transaction/",{loader:()=>i.e(9210).then(i.bind(i,8911)),meta:{title:"标签: Transaction",index:!1}}],["/tag/while/",{loader:()=>i.e(4439).then(i.bind(i,6319)),meta:{title:"标签: while",index:!1}}],["/tag/samplers/",{loader:()=>i.e(803).then(i.bind(i,949)),meta:{title:"标签: Samplers",index:!1}}],["/tag/request/",{loader:()=>i.e(7435).then(i.bind(i,2717)),meta:{title:"标签: request",index:!1}}],["/tag/hhtp/",{loader:()=>i.e(1246).then(i.bind(i,9766)),meta:{title:"标签: hhtp",index:!1}}],["/tag/jdbc/",{loader:()=>i.e(2703).then(i.bind(i,3345)),meta:{title:"标签: JDBC",index:!1}}],["/tag/post/",{loader:()=>i.e(4320).then(i.bind(i,1168)),meta:{title:"标签: post",index:!1}}],["/tag/detail/",{loader:()=>i.e(5347).then(i.bind(i,4464)),meta:{title:"标签: detail",index:!1}}],["/tag/json/",{loader:()=>i.e(40).then(i.bind(i,9810)),meta:{title:"标签: json",index:!1}}],["/tag/regular-extractor/",{loader:()=>i.e(7231).then(i.bind(i,2943)),meta:{title:"标签: Regular_Extractor",index:!1}}],["/tag/front/",{loader:()=>i.e(7669).then(i.bind(i,4080)),meta:{title:"标签: front",index:!1}}],["/tag/font/",{loader:()=>i.e(7276).then(i.bind(i,2698)),meta:{title:"标签: font",index:!1}}],["/tag/user-parameter/",{loader:()=>i.e(6359).then(i.bind(i,7616)),meta:{title:"标签: user_parameter",index:!1}}],["/article/",{loader:()=>i.e(7511).then(i.bind(i,6751)),meta:{title:"文章",index:!1}}],["/star/",{loader:()=>i.e(7199).then(i.bind(i,14)),meta:{title:"星标",index:!1}}],["/timeline/",{loader:()=>i.e(5464).then(i.bind(i,7556)),meta:{title:"时间轴",index:!1}}]])},8761:(e,t,i)=>{i.d(t,{U:()=>n});const n=JSON.parse('{"base":"/","lang":"zh-CN","title":"专业治头秃","description":"在零与一的裂缝中预判所有可能的崩坏","head":[],"locales":{}}')}},e=>{e.O(0,[1893,6654],(()=>e(e.s=3160))),e.O()}]);