"use strict";(self.webpackChunkcaelis_terra=self.webpackChunkcaelis_terra||[]).push([[5023],{6899:(i,e,s)=>{s.r(e),s.d(e,{comp:()=>n,data:()=>l});var t=s(6254);const a={},n=(0,s(6995).A)(a,[["render",function(i,e){return(0,t.uX)(),(0,t.CE)("div",null,e[0]||(e[0]=[(0,t.Fv)('<h1 id="ui自动化测试和selenium介绍" tabindex="-1"><a class="header-anchor" href="#ui自动化测试和selenium介绍"><span>UI自动化测试和Selenium介绍</span></a></h1><h2 id="一、ui自动化测试" tabindex="-1"><a class="header-anchor" href="#一、ui自动化测试"><span>一、UI自动化测试</span></a></h2><h3 id="_1-什么是ui自动化" tabindex="-1"><a class="header-anchor" href="#_1-什么是ui自动化"><span>1. 什么是UI自动化</span></a></h3><p>通过程序脚本模拟人工操作对web应用以及app应用进行系统验证的过程（聚焦UI层）。</p><h3 id="_2-ui自动化测试在什么阶段开始" tabindex="-1"><a class="header-anchor" href="#_2-ui自动化测试在什么阶段开始"><span>2. UI自动化测试在什么阶段开始</span></a></h3><p>手工测试完成之后才做自动化测试，相当于是编写自动化测试代码（通过手工测试能够清楚的知道自动化测试的步骤以及结果）。</p><h3 id="_3-ui测试步骤举例" tabindex="-1"><a class="header-anchor" href="#_3-ui测试步骤举例"><span>3. UI测试步骤举例</span></a></h3><ol><li>V1 通过手工测试完成之后，有10个功能。</li><li>针对V1版本的10个功能，进行自动化的代码编写。</li><li>V2 增加了10个功能（总共有20个功能）， V2版本的测试过程中，新增的10个功能使用手工测试，老的10个功能通过自动化来进行回归测试。</li></ol><h2 id="二、常用自动化框架" tabindex="-1"><a class="header-anchor" href="#二、常用自动化框架"><span>二、常用自动化框架</span></a></h2><h3 id="_1-主流的web自动化工具" tabindex="-1"><a class="header-anchor" href="#_1-主流的web自动化工具"><span>1. 主流的web自动化工具</span></a></h3><table><thead><tr><th>工具</th><th>描述</th><th>使用</th></tr></thead><tbody><tr><td>QTP</td><td>由惠普公司开发的一款自动化工具，支持web、桌面的自动化测试。 收费的商用工具。</td><td>很少人用</td></tr><tr><td>selenium</td><td>主要用来做web自动化测试的，开源的免费的工具，中文名硒。</td><td>本阶段学习</td></tr><tr><td>Cypress</td><td>Cypress 经常和 Selenium 相提并论；然而，Cypress 在结构和基础上与之有所不同。Cypress 不受 Selenium 限制。</td><td>后续学习</td></tr></tbody></table><h2 id="三、selenium介绍" tabindex="-1"><a class="header-anchor" href="#三、selenium介绍"><span>三、selenium介绍</span></a></h2><h3 id="_1-selenium特点" tabindex="-1"><a class="header-anchor" href="#_1-selenium特点"><span>1. selenium特点</span></a></h3><table><thead><tr><th>特点</th><th>说明</th></tr></thead><tbody><tr><td>开源</td><td>源代码开放，但是不一定免费，像Linux的不同版本</td></tr><tr><td>跨平台</td><td>平台指操作系统。 linux、windows、 mac操作系统</td></tr><tr><td>支持多种浏览器</td><td>firefox、chrome、 ie、edge、opera、safari</td></tr><tr><td>支持多语言</td><td>python、java、C#、js、Ruby、PHP</td></tr><tr><td>成熟稳定功能强大</td><td>被大公司使用。google、华为、百度、腾讯。</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p>后续大家在选择自动化工具的时，这几个特点就是选择工具的重要依据。</p></div><h3 id="_2-selenium发展史" tabindex="-1"><a class="header-anchor" href="#_2-selenium发展史"><span>2. selenium发展史</span></a></h3><ul><li><p>selenium 1.0</p><ul><li><p><strong>selenium IDE</strong>：是firefox的一款插件，通过它可以记录用户的操作并生成对应的自动化脚本。</p></li><li><p><strong>selenium grid</strong>：通过grid可以将脚本下发到不同的电脑在不同的浏览器上面执行。</p><figure><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031514404.png" alt="image-20200621105146357" tabindex="0" loading="lazy"><figcaption>image-20200621105146357</figcaption></figure></li><li><p><strong>selenium RC</strong>：由JS封装的一个工具，用来对浏览器进行操作的。</p></li></ul></li><li><p>selenium 2.0</p><ul><li>selenium 1.0 + webdriver</li><li>针对浏览器的操作都是通过webdriver来实现的。</li><li>支持的语言更多</li></ul></li><li><p>selenium 3.0</p><ul><li>删除了selenium RC</li><li>全面支持java8</li><li>支持macOS，支持safari浏览器</li><li>支持微软最新的EDGE浏览器，支持更多的浏览器</li></ul></li><li><p>selenium 4.0：参考文章 后续补充链接</p></li></ul><h3 id="_3-selenium工作原理" tabindex="-1"><a class="header-anchor" href="#_3-selenium工作原理"><span>3. selenium工作原理</span></a></h3><figure><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031514827.png" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="四、selenium环境搭建" tabindex="-1"><a class="header-anchor" href="#四、selenium环境搭建"><span>四、selenium环境搭建</span></a></h2><h3 id="_1-python开发工具安装" tabindex="-1"><a class="header-anchor" href="#_1-python开发工具安装"><span>1. python开发工具安装</span></a></h3><p>不需要安装，python阶段已经安装过了，就是Pycharm软件。</p><h3 id="_2-浏览器安装" tabindex="-1"><a class="header-anchor" href="#_2-浏览器安装"><span>2. 浏览器安装</span></a></h3><p>浏览器可按需使用Chorme、Firefox等浏览器。</p><h3 id="_3-selenium安装" tabindex="-1"><a class="header-anchor" href="#_3-selenium安装"><span>3. selenium安装</span></a></h3><ul><li><p>在线安装方式: 在终端输入 <code>pip install selenium</code></p></li><li><p>离线安装方式:</p><ul><li>获取selenium离线安装包并解压；</li><li>在终端进入到解压的目录，然后执行<code>python setup.py install</code>。</li></ul><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>适用于内网环境使用。</p></div></li><li><p>pycharm进行安装</p><ul><li><p>在file菜单中选择setting， 然后选择&quot;project- interpreter&quot;</p><figure><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031514777.png" alt="image-20200621112636954" tabindex="0" loading="lazy"><figcaption>image-20200621112636954</figcaption></figure><figure><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031519939.png" alt="image-20200621112852206" tabindex="0" loading="lazy"><figcaption>image-20200621112852206</figcaption></figure></li></ul></li><li><p>如何确认selenium安装完成：可以通过pip show selenium进行查看</p><figure><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401051208122.png" alt="CleanShot 2024-01-05 at 12.08.06@2x" tabindex="0" loading="lazy"><figcaption>CleanShot 2024-01-05 at 12.08.06@2x</figcaption></figure></li></ul><h3 id="_4-浏览器驱动安装" tabindex="-1"><a class="header-anchor" href="#_4-浏览器驱动安装"><span>4. 浏览器驱动安装</span></a></h3><ul><li><p>安装浏览器驱动之前，一定要知道自己浏览器的版本。</p><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401051209428.png" alt="CleanShot 2024-01-05 at 12.09.26@2x" style="zoom:50%;"><div class="hint-container warning"><p class="hint-container-title">注意</p><p>需要注意浏览器与浏览器驱动的版本， 不同的浏览器有不同的浏览器驱动，而且同一浏览器的不同版本也有不同的浏览器驱动。</p></div></li><li><p>通过<a href="https://googlechromelabs.github.io/chrome-for-testing/" target="_blank" rel="noopener noreferrer">Chrome for Testing</a> 获取对应的浏览器驱动</p></li><li><p>解压浏览器驱动文件，并将驱动文件复制到python的根目录或项目下，然后指定chrome驱动。<br> 查看python安装根目录：通过<code>where python</code>命令</p></li></ul><h2 id="五-入门示例" tabindex="-1"><a class="header-anchor" href="#五-入门示例"><span>五. 入门示例</span></a></h2><h3 id="_1-项目创建" tabindex="-1"><a class="header-anchor" href="#_1-项目创建"><span>1. 项目创建</span></a></h3><ul><li><p>项目名称不要 与第三方的模块名同名；</p></li><li><p>文件名称也不要与第三方的模块名或者是类名同名；</p></li><li><p>项目创建时不要使用虚拟环境。</p><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401051211182.png" alt="CleanShot 2024-01-05 at 12.10.38@2x" style="zoom:50%;"></li></ul><h3 id="_2-相关代码" tabindex="-1"><a class="header-anchor" href="#_2-相关代码"><span>2. 相关代码</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> time</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 1.导入selenium</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> selenium </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> webdriver</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 2.实例化浏览器驱动对象（创建浏览器驱动对象）</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">driver </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> webdriver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Chrome</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建谷歌浏览器驱动对象</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># driver = webdriver.Firefox()  # 创建火狐浏览器驱动对象</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 3.打开百度网站</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://www.baidu.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 4.等待3s（这里代表业务操作）</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 通过快捷导包的方式导入time模块，光标要在time后面按alt+enter</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 5.退出浏览器驱动(释放系统资源)</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">quit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-运行结果" tabindex="-1"><a class="header-anchor" href="#_3-运行结果"><span>3. 运行结果</span></a></h3><p>运行python文件mac下成功后如图</p><figure><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401051212977.png" alt="image-20231117171310779" tabindex="0" loading="lazy"><figcaption>image-20231117171310779</figcaption></figure>',36)]))}]]),l=JSON.parse('{"path":"/auto/ui/2.ui_and_selenium_intro.html","title":"UI自动化测试和Selenium介绍","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","category":"UI自动化测试","tag":["介绍","selenium"],"order":2,"sticky":true,"description":"UI自动化测试和Selenium介绍 一、UI自动化测试 1. 什么是UI自动化 通过程序脚本模拟人工操作对web应用以及app应用进行系统验证的过程（聚焦UI层）。 2. UI自动化测试在什么阶段开始 手工测试完成之后才做自动化测试，相当于是编写自动化测试代码（通过手工测试能够清楚的知道自动化测试的步骤以及结果）。 3. UI测试步骤举例 V1 通过...","head":[["meta",{"property":"og:url","content":"https://hekun97.github.io/auto/ui/2.ui_and_selenium_intro.html"}],["meta",{"property":"og:site_name","content":"专业治头秃"}],["meta",{"property":"og:title","content":"UI自动化测试和Selenium介绍"}],["meta",{"property":"og:description","content":"UI自动化测试和Selenium介绍 一、UI自动化测试 1. 什么是UI自动化 通过程序脚本模拟人工操作对web应用以及app应用进行系统验证的过程（聚焦UI层）。 2. UI自动化测试在什么阶段开始 手工测试完成之后才做自动化测试，相当于是编写自动化测试代码（通过手工测试能够清楚的知道自动化测试的步骤以及结果）。 3. UI测试步骤举例 V1 通过..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031514404.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-06T16:27:29.000Z"}],["meta",{"property":"article:tag","content":"介绍"}],["meta",{"property":"article:tag","content":"selenium"}],["meta",{"property":"article:modified_time","content":"2025-03-06T16:27:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"UI自动化测试和Selenium介绍\\",\\"image\\":[\\"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031514404.png\\",\\"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031514827.png\\",\\"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031514777.png\\",\\"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401031519939.png\\",\\"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401051208122.png\\",\\"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/AutomatedTest/202401051212977.png\\"],\\"dateModified\\":\\"2025-03-06T16:27:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"专业治头秃\\",\\"url\\":\\"https://github.com/hekun97\\"}]}"]]},"git":{"createdTime":1741278449000,"updatedTime":1741278449000,"contributors":[{"name":"hekun97","username":"hekun97","email":"hek97@qq.com","commits":1,"url":"https://github.com/hekun97"}]},"readingTime":{"minutes":4.24,"words":1272},"filePathRelative":"auto/ui/2.ui_and_selenium_intro.md","localizedDate":"2025年3月6日","excerpt":"\\n<h2>一、UI自动化测试</h2>\\n<h3>1. 什么是UI自动化</h3>\\n<p>通过程序脚本模拟人工操作对web应用以及app应用进行系统验证的过程（聚焦UI层）。</p>\\n<h3>2. UI自动化测试在什么阶段开始</h3>\\n<p>手工测试完成之后才做自动化测试，相当于是编写自动化测试代码（通过手工测试能够清楚的知道自动化测试的步骤以及结果）。</p>\\n<h3>3. UI测试步骤举例</h3>\\n<ol>\\n<li>V1 通过手工测试完成之后，有10个功能。</li>\\n<li>针对V1版本的10个功能，进行自动化的代码编写。</li>\\n<li>V2 增加了10个功能（总共有20个功能）， V2版本的测试过程中，新增的10个功能使用手工测试，老的10个功能通过自动化来进行回归测试。</li>\\n</ol>","autoDesc":true}')},6995:(i,e)=>{e.A=(i,e)=>{const s=i.__vccOpts||i;for(const[i,t]of e)s[i]=t;return s}}}]);