"use strict";(self.webpackChunkcaelis_terra=self.webpackChunkcaelis_terra||[]).push([[5607],{1705:(e,t,r)=>{r.r(t),r.d(t,{comp:()=>s,data:()=>a});var n=r(6254);const o={},s=(0,r(6995).A)(o,[["render",function(e,t){const r=(0,n.g2)("font");return(0,n.uX)(),(0,n.CE)("div",null,[t[10]||(t[10]=(0,n.Fv)('<h1 id="性能测试曲线模型" tabindex="-1"><a class="header-anchor" href="#性能测试曲线模型"><span>性能测试曲线模型</span></a></h1><p>性能测试曲线模型是一条随着测试时间不断变化的曲线，与<strong>服务器资源</strong>、<strong>用户数</strong>或其他的性能指标密切相关的曲线。如下图所示。</p><figure><img src="https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/InterfaceTest/202401251757064.png" alt="performance curve" tabindex="0" loading="lazy"><figcaption>performance curve</figcaption></figure><h2 id="曲线图关键点" tabindex="-1"><a class="header-anchor" href="#曲线图关键点"><span>曲线图关键点</span></a></h2>',4)),(0,n.Lk)("ul",null,[t[8]||(t[8]=(0,n.Lk)("li",null,[(0,n.Lk)("strong",null,"横轴"),(0,n.eW)("：从左到右表现了Number of Concurrent Users（并发用户数）的不断增长。")],-1)),(0,n.Lk)("li",null,[t[6]||(t[6]=(0,n.Lk)("strong",null,"曲线",-1)),t[7]||(t[7]=(0,n.eW)("： ")),(0,n.Lk)("ul",null,[(0,n.Lk)("li",null,[(0,n.bF)(r,{color:"green"},{default:(0,n.k6)((()=>t[0]||(t[0]=[(0,n.eW)("**Utilization(U)**")]))),_:1}),t[1]||(t[1]=(0,n.eW)("：资源的利用情况，包括硬件资源和软件资源；"))]),(0,n.Lk)("li",null,[(0,n.bF)(r,{color:"Purple"},{default:(0,n.k6)((()=>t[2]||(t[2]=[(0,n.eW)("**Throughput(X)**")]))),_:1}),t[3]||(t[3]=(0,n.eW)("：吞吐量，这里是指每秒事务数（TPS）；"))]),(0,n.Lk)("li",null,[(0,n.bF)(r,{color:"blue"},{default:(0,n.k6)((()=>t[4]||(t[4]=[(0,n.eW)("**Response Time(R)**")]))),_:1}),t[5]||(t[5]=(0,n.eW)("：响应时间。"))])])]),t[9]||(t[9]=(0,n.Fv)("<li><strong>区域</strong>： <ul><li><strong>Light Load</strong> ：轻负载区</li><li><strong>Heavy Load</strong> ：重负载区</li><li><strong>Buckle Zone</strong>：塌陷区 。</li></ul></li><li><strong>关键点</strong>： <ul><li><strong>The Optimum Number of Concurrent Users</strong>：最佳并发用户数</li><li><strong>The Maximum Number of Concurrent Users</strong>：最大并发用户数</li></ul></li>",2))]),t[11]||(t[11]=(0,n.Fv)('<h2 id="过程分析" tabindex="-1"><a class="header-anchor" href="#过程分析"><span>过程分析</span></a></h2><ol><li><strong>轻负载区</strong>：随着并发用户数的增长，资源占用率和吞吐量（TPS）会相应的增长，但是响应时间（RT）基本平稳，小幅递增；</li><li><strong>最优负载（B点）</strong>：此时是系统的最优负载，继续增加并发将进入重负载区；</li><li><strong>重负载区</strong>：当并发用户数增长到一定程度后，资源占用达到饱和，吞吐量（TPS）增长明显放缓甚至停止增长，而响应时间（RT）却进一步延长。</li><li><strong>最大负载（C点）</strong>：此时是系统的最大负载，继续增加并发将进入塌陷区；</li><li><strong>塌陷区</strong>：如果并发用户数继续增长，软硬件资源占用继续维持在饱和状态，但是吞吐量（TPS）开始下降，响应时间（RT）急剧递增，明显的超出了用户可接受的范围，并且最终导致用户放弃了这次请求甚至离开。吞吐量下降，排队现象，服务器宕机，响应时间越来越大。</li></ol><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><ol><li>当系统的负载等于最佳并发用户数时，系统的整体效率最高，没有资源被浪费，用户也不需要等待；</li><li>当系统负载处于最佳并发用户数和最大并发用户数之间时，系统可以继续工作，但是用户的等待时间延长，满意度开始降低，并且如果负载一直持续，将最终会导致有些用户无法忍受而放弃；</li><li>当系统负载大于最大并发用户数时，将注定会导致某些用户无法忍受超长的响应时间而放弃。</li></ol><div class="hint-container tip"><p class="hint-container-title">提示</p><p>系统应按最优负载设计，并避免长时间在重负载区和进入塌陷区。</p></div>',5))])}]]),a=JSON.parse('{"path":"/jmeter/sundry/curve_model.html","title":"性能测试曲线模型","lang":"zh-CN","frontmatter":{"description":"性能测试曲线模型 性能测试曲线模型是一条随着测试时间不断变化的曲线，与服务器资源、用户数或其他的性能指标密切相关的曲线。如下图所示。 performance curveperformance curve 曲线图关键点 横轴：从左到右表现了Number of Concurrent Users（并发用户数）的不断增长。 曲线： ：资源的利用情况，包括硬件资...","head":[["meta",{"property":"og:url","content":"https://hekun97.github.io/jmeter/sundry/curve_model.html"}],["meta",{"property":"og:site_name","content":"专业治头秃"}],["meta",{"property":"og:title","content":"性能测试曲线模型"}],["meta",{"property":"og:description","content":"性能测试曲线模型 性能测试曲线模型是一条随着测试时间不断变化的曲线，与服务器资源、用户数或其他的性能指标密切相关的曲线。如下图所示。 performance curveperformance curve 曲线图关键点 横轴：从左到右表现了Number of Concurrent Users（并发用户数）的不断增长。 曲线： ：资源的利用情况，包括硬件资..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/InterfaceTest/202401251757064.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-16T15:42:59.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-16T15:42:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"性能测试曲线模型\\",\\"image\\":[\\"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/InterfaceTest/202401251757064.png\\"],\\"dateModified\\":\\"2025-03-16T15:42:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"专业治头秃\\",\\"url\\":\\"https://github.com/hekun97\\"}]}"]]},"git":{"createdTime":1742139779000,"updatedTime":1742139779000,"contributors":[{"name":"hekun97","username":"hekun97","email":"hek97@qq.com","commits":1,"url":"https://github.com/hekun97"}]},"readingTime":{"minutes":2.2,"words":660},"filePathRelative":"jmeter/sundry/curve_model.md","localizedDate":"2025年3月16日","excerpt":"\\n<p>性能测试曲线模型是一条随着测试时间不断变化的曲线，与<strong>服务器资源</strong>、<strong>用户数</strong>或其他的性能指标密切相关的曲线。如下图所示。</p>\\n<figure><img src=\\"https://hk-docs.oss-cn-chengdu.aliyuncs.com/SoftwareTest/InterfaceTest/202401251757064.png\\" alt=\\"performance curve\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>performance curve</figcaption></figure>","autoDesc":true}')},6995:(e,t)=>{t.A=(e,t)=>{const r=e.__vccOpts||e;for(const[e,n]of t)r[e]=n;return r}}}]);